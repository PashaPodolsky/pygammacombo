//
// File generated by rootcint at Fri Feb  5 12:58:37 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME gammacombodIgammacomboCoreDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "gammacomboCoreDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::RooBinned2DBicubicBase< ::RooAbsReal > RooBinned2DBicubicBaselERooAbsRealgR;
      #else
      class RooBinned2DBicubicBaselERooAbsRealgR  :  public ::RooAbsReal {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::RooBinned2DBicubicBase< ::RooAbsReal >::BinSizeException BinSizeException;
         #else
         class BinSizeException  :  public ::exception {
            public:
            //friend XX;
            // To force the creation of a virtual table, throw just in case.
            virtual ~BinSizeException() throw() {};
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~RooBinned2DBicubicBaselERooAbsRealgR() throw() {};
         ::RooRealProxy x; //
         ::RooRealProxy y; //
         int nBinsX; //
         int nBinsY; //
         double binSizeX; //
         double binSizeY; //
         double xmin; //
         double xmax; //
         double ymin; //
         double ymax; //
         ::SharedArray< double > coeffs; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArray< double > SharedArraylEdoublegR;
      #else
      class SharedArraylEdoublegR  :  public ::TObject {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::SharedArray< double >::RWProxy RWProxy;
         #else
         class RWProxy  {
            public:
            //friend XX;
            ::SharedArray< double >* parent; //
            unsigned int idx; //
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArraylEdoublegR() throw() {};
         ::SharedArrayImp< double >* pimpl; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArrayImp< double > SharedArrayImplEdoublegR;
      #else
      class SharedArrayImplEdoublegR  :  public ::TObject {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArrayImplEdoublegR() throw() {};
         unsigned int refcount; //
         vector< double > arr; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::RooBinned2DBicubicBase< ::RooAbsPdf > RooBinned2DBicubicBaselERooAbsPdfgR;
      #else
      class RooBinned2DBicubicBaselERooAbsPdfgR  :  public ::RooAbsPdf {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::RooBinned2DBicubicBase< ::RooAbsPdf >::BinSizeException BinSizeException;
         #else
         class BinSizeException  :  public ::exception {
            public:
            //friend XX;
            // To force the creation of a virtual table, throw just in case.
            virtual ~BinSizeException() throw() {};
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~RooBinned2DBicubicBaselERooAbsPdfgR() throw() {};
         ::RooRealProxy x; //
         ::RooRealProxy y; //
         int nBinsX; //
         int nBinsY; //
         double binSizeX; //
         double binSizeY; //
         double xmin; //
         double xmax; //
         double ymin; //
         double ymax; //
         ::SharedArray< double > coeffs; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArrayImp< char > SharedArrayImplEchargR;
      #else
      class SharedArrayImplEchargR  :  public ::TObject {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArrayImplEchargR() throw() {};
         unsigned int refcount; //
         vector< char > arr; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArrayImp< short > SharedArrayImplEshortgR;
      #else
      class SharedArrayImplEshortgR  :  public ::TObject {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArrayImplEshortgR() throw() {};
         unsigned int refcount; //
         vector< short > arr; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArrayImp< int > SharedArrayImplEintgR;
      #else
      class SharedArrayImplEintgR  :  public ::TObject {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArrayImplEintgR() throw() {};
         unsigned int refcount; //
         vector< int > arr; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArrayImp< float > SharedArrayImplEfloatgR;
      #else
      class SharedArrayImplEfloatgR  :  public ::TObject {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArrayImplEfloatgR() throw() {};
         unsigned int refcount; //
         vector< float > arr; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArrayImp< long > SharedArrayImplElonggR;
      #else
      class SharedArrayImplElonggR  :  public ::TObject {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArrayImplElonggR() throw() {};
         unsigned int refcount; //
         vector< long > arr; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArrayImp< long long > SharedArrayImplElongsPlonggR;
      #else
      class SharedArrayImplElongsPlonggR  :  public ::TObject {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArrayImplElongsPlonggR() throw() {};
         unsigned int refcount; //
         vector< G__int64 > arr; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArrayImp< unsigned char > SharedArrayImplEunsignedsPchargR;
      #else
      class SharedArrayImplEunsignedsPchargR  :  public ::TObject {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArrayImplEunsignedsPchargR() throw() {};
         unsigned int refcount; //
         vector< unsigned char > arr; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArrayImp< unsigned short > SharedArrayImplEunsignedsPshortgR;
      #else
      class SharedArrayImplEunsignedsPshortgR  :  public ::TObject {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArrayImplEunsignedsPshortgR() throw() {};
         unsigned int refcount; //
         vector< unsigned short > arr; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArrayImp< unsigned int > SharedArrayImplEunsignedsPintgR;
      #else
      class SharedArrayImplEunsignedsPintgR  :  public ::TObject {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArrayImplEunsignedsPintgR() throw() {};
         unsigned int refcount; //
         vector< unsigned int > arr; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArrayImp< unsigned long > SharedArrayImplEunsignedsPlonggR;
      #else
      class SharedArrayImplEunsignedsPlonggR  :  public ::TObject {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArrayImplEunsignedsPlonggR() throw() {};
         unsigned int refcount; //
         vector< unsigned long > arr; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArrayImp< unsigned long long > SharedArrayImplEunsignedsPlongsPlonggR;
      #else
      class SharedArrayImplEunsignedsPlongsPlonggR  :  public ::TObject {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArrayImplEunsignedsPlongsPlonggR() throw() {};
         unsigned int refcount; //
         vector< G__uint64 > arr; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArray< char > SharedArraylEchargR;
      #else
      class SharedArraylEchargR  :  public ::TObject {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::SharedArray< char >::RWProxy RWProxy;
         #else
         class RWProxy  {
            public:
            //friend XX;
            ::SharedArray< char >* parent; //
            unsigned int idx; //
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArraylEchargR() throw() {};
         ::SharedArrayImp< char >* pimpl; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArray< short > SharedArraylEshortgR;
      #else
      class SharedArraylEshortgR  :  public ::TObject {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::SharedArray< short >::RWProxy RWProxy;
         #else
         class RWProxy  {
            public:
            //friend XX;
            ::SharedArray< short >* parent; //
            unsigned int idx; //
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArraylEshortgR() throw() {};
         ::SharedArrayImp< short >* pimpl; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArray< int > SharedArraylEintgR;
      #else
      class SharedArraylEintgR  :  public ::TObject {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::SharedArray< int >::RWProxy RWProxy;
         #else
         class RWProxy  {
            public:
            //friend XX;
            ::SharedArray< int >* parent; //
            unsigned int idx; //
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArraylEintgR() throw() {};
         ::SharedArrayImp< int >* pimpl; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArray< long > SharedArraylElonggR;
      #else
      class SharedArraylElonggR  :  public ::TObject {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::SharedArray< long >::RWProxy RWProxy;
         #else
         class RWProxy  {
            public:
            //friend XX;
            ::SharedArray< long >* parent; //
            unsigned int idx; //
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArraylElonggR() throw() {};
         ::SharedArrayImp< long >* pimpl; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArray< long long > SharedArraylElongsPlonggR;
      #else
      class SharedArraylElongsPlonggR  :  public ::TObject {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::SharedArray< long long >::RWProxy RWProxy;
         #else
         class RWProxy  {
            public:
            //friend XX;
            ::SharedArray< G__int64 >* parent; //
            unsigned int idx; //
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArraylElongsPlonggR() throw() {};
         ::SharedArrayImp< G__int64 >* pimpl; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArray< float > SharedArraylEfloatgR;
      #else
      class SharedArraylEfloatgR  :  public ::TObject {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::SharedArray< float >::RWProxy RWProxy;
         #else
         class RWProxy  {
            public:
            //friend XX;
            ::SharedArray< float >* parent; //
            unsigned int idx; //
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArraylEfloatgR() throw() {};
         ::SharedArrayImp< float >* pimpl; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArray< unsigned char > SharedArraylEunsignedsPchargR;
      #else
      class SharedArraylEunsignedsPchargR  :  public ::TObject {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::SharedArray< unsigned char >::RWProxy RWProxy;
         #else
         class RWProxy  {
            public:
            //friend XX;
            ::SharedArray< unsigned char >* parent; //
            unsigned int idx; //
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArraylEunsignedsPchargR() throw() {};
         ::SharedArrayImp< unsigned char >* pimpl; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArray< unsigned short > SharedArraylEunsignedsPshortgR;
      #else
      class SharedArraylEunsignedsPshortgR  :  public ::TObject {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::SharedArray< unsigned short >::RWProxy RWProxy;
         #else
         class RWProxy  {
            public:
            //friend XX;
            ::SharedArray< unsigned short >* parent; //
            unsigned int idx; //
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArraylEunsignedsPshortgR() throw() {};
         ::SharedArrayImp< unsigned short >* pimpl; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArray< unsigned int > SharedArraylEunsignedsPintgR;
      #else
      class SharedArraylEunsignedsPintgR  :  public ::TObject {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::SharedArray< unsigned int >::RWProxy RWProxy;
         #else
         class RWProxy  {
            public:
            //friend XX;
            ::SharedArray< unsigned int >* parent; //
            unsigned int idx; //
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArraylEunsignedsPintgR() throw() {};
         ::SharedArrayImp< unsigned int >* pimpl; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArray< unsigned long > SharedArraylEunsignedsPlonggR;
      #else
      class SharedArraylEunsignedsPlonggR  :  public ::TObject {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::SharedArray< unsigned long >::RWProxy RWProxy;
         #else
         class RWProxy  {
            public:
            //friend XX;
            ::SharedArray< unsigned long >* parent; //
            unsigned int idx; //
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArraylEunsignedsPlonggR() throw() {};
         ::SharedArrayImp< unsigned long >* pimpl; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SharedArray< unsigned long long > SharedArraylEunsignedsPlongsPlonggR;
      #else
      class SharedArraylEunsignedsPlongsPlonggR  :  public ::TObject {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::SharedArray< unsigned long long >::RWProxy RWProxy;
         #else
         class RWProxy  {
            public:
            //friend XX;
            ::SharedArray< G__uint64 >* parent; //
            unsigned int idx; //
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~SharedArraylEunsignedsPlongsPlonggR() throw() {};
         ::SharedArrayImp< G__uint64 >* pimpl; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void RooBinned2DBicubicBaselERooAbsRealgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void RooBinned2DBicubicBaselERooAbsRealgR_Dictionary();
   static void *new_RooBinned2DBicubicBaselERooAbsRealgR(void *p = 0);
   static void *newArray_RooBinned2DBicubicBaselERooAbsRealgR(Long_t size, void *p);
   static void delete_RooBinned2DBicubicBaselERooAbsRealgR(void *p);
   static void deleteArray_RooBinned2DBicubicBaselERooAbsRealgR(void *p);
   static void destruct_RooBinned2DBicubicBaselERooAbsRealgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RooBinned2DBicubicBase<RooAbsReal>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::RooBinned2DBicubicBase<RooAbsReal>) == sizeof( ::ROOTShadow::Shadow::RooBinned2DBicubicBaselERooAbsRealgR));
      ::RooBinned2DBicubicBase<RooAbsReal> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooBinned2DBicubicBase<RooAbsReal> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooBinned2DBicubicBase<RooAbsReal>", ::RooBinned2DBicubicBase<RooAbsReal>::Class_Version(), "gammacombo/include/RooBinned2DBicubicBase.h", 48,
                  typeid(::RooBinned2DBicubicBase<RooAbsReal>), ::ROOT::DefineBehavior(ptr, ptr),
                  &RooBinned2DBicubicBaselERooAbsRealgR_Dictionary, isa_proxy, 4,
                  sizeof(::RooBinned2DBicubicBase<RooAbsReal>) );
      instance.SetNew(&new_RooBinned2DBicubicBaselERooAbsRealgR);
      instance.SetNewArray(&newArray_RooBinned2DBicubicBaselERooAbsRealgR);
      instance.SetDelete(&delete_RooBinned2DBicubicBaselERooAbsRealgR);
      instance.SetDeleteArray(&deleteArray_RooBinned2DBicubicBaselERooAbsRealgR);
      instance.SetDestructor(&destruct_RooBinned2DBicubicBaselERooAbsRealgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RooBinned2DBicubicBase<RooAbsReal>*)
   {
      return GenerateInitInstanceLocal((::RooBinned2DBicubicBase<RooAbsReal>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooBinned2DBicubicBase<RooAbsReal>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void RooBinned2DBicubicBaselERooAbsRealgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::RooBinned2DBicubicBase<RooAbsReal>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArraylEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArraylEdoublegR_Dictionary();
   static void delete_SharedArraylEdoublegR(void *p);
   static void deleteArray_SharedArraylEdoublegR(void *p);
   static void destruct_SharedArraylEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArray<double>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArray<double>) == sizeof( ::ROOTShadow::Shadow::SharedArraylEdoublegR));
      ::SharedArray<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArray<double> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArray<double>", ::SharedArray<double>::Class_Version(), "gammacombo/include/SharedArray.h", 68,
                  typeid(::SharedArray<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArraylEdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArray<double>) );
      instance.SetDelete(&delete_SharedArraylEdoublegR);
      instance.SetDeleteArray(&deleteArray_SharedArraylEdoublegR);
      instance.SetDestructor(&destruct_SharedArraylEdoublegR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArray<double>*)
   {
      return GenerateInitInstanceLocal((::SharedArray<double>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArray<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArraylEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArrayImplEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArrayImplEdoublegR_Dictionary();
   static void *new_SharedArrayImplEdoublegR(void *p = 0);
   static void *newArray_SharedArrayImplEdoublegR(Long_t size, void *p);
   static void delete_SharedArrayImplEdoublegR(void *p);
   static void deleteArray_SharedArrayImplEdoublegR(void *p);
   static void destruct_SharedArrayImplEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArrayImp<double>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArrayImp<double>) == sizeof( ::ROOTShadow::Shadow::SharedArrayImplEdoublegR));
      ::SharedArrayImp<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArrayImp<double> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArrayImp<double>", ::SharedArrayImp<double>::Class_Version(), "gammacombo/include/SharedArray.h", 21,
                  typeid(::SharedArrayImp<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArrayImplEdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArrayImp<double>) );
      instance.SetNew(&new_SharedArrayImplEdoublegR);
      instance.SetNewArray(&newArray_SharedArrayImplEdoublegR);
      instance.SetDelete(&delete_SharedArrayImplEdoublegR);
      instance.SetDeleteArray(&deleteArray_SharedArrayImplEdoublegR);
      instance.SetDestructor(&destruct_SharedArrayImplEdoublegR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArrayImp<double>*)
   {
      return GenerateInitInstanceLocal((::SharedArrayImp<double>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArrayImp<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArrayImplEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void RooBinned2DBicubicBaselERooAbsPdfgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void RooBinned2DBicubicBaselERooAbsPdfgR_Dictionary();
   static void *new_RooBinned2DBicubicBaselERooAbsPdfgR(void *p = 0);
   static void *newArray_RooBinned2DBicubicBaselERooAbsPdfgR(Long_t size, void *p);
   static void delete_RooBinned2DBicubicBaselERooAbsPdfgR(void *p);
   static void deleteArray_RooBinned2DBicubicBaselERooAbsPdfgR(void *p);
   static void destruct_RooBinned2DBicubicBaselERooAbsPdfgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RooBinned2DBicubicBase<RooAbsPdf>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::RooBinned2DBicubicBase<RooAbsPdf>) == sizeof( ::ROOTShadow::Shadow::RooBinned2DBicubicBaselERooAbsPdfgR));
      ::RooBinned2DBicubicBase<RooAbsPdf> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooBinned2DBicubicBase<RooAbsPdf> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooBinned2DBicubicBase<RooAbsPdf>", ::RooBinned2DBicubicBase<RooAbsPdf>::Class_Version(), "gammacombo/include/RooBinned2DBicubicBase.h", 48,
                  typeid(::RooBinned2DBicubicBase<RooAbsPdf>), ::ROOT::DefineBehavior(ptr, ptr),
                  &RooBinned2DBicubicBaselERooAbsPdfgR_Dictionary, isa_proxy, 4,
                  sizeof(::RooBinned2DBicubicBase<RooAbsPdf>) );
      instance.SetNew(&new_RooBinned2DBicubicBaselERooAbsPdfgR);
      instance.SetNewArray(&newArray_RooBinned2DBicubicBaselERooAbsPdfgR);
      instance.SetDelete(&delete_RooBinned2DBicubicBaselERooAbsPdfgR);
      instance.SetDeleteArray(&deleteArray_RooBinned2DBicubicBaselERooAbsPdfgR);
      instance.SetDestructor(&destruct_RooBinned2DBicubicBaselERooAbsPdfgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RooBinned2DBicubicBase<RooAbsPdf>*)
   {
      return GenerateInitInstanceLocal((::RooBinned2DBicubicBase<RooAbsPdf>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooBinned2DBicubicBase<RooAbsPdf>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void RooBinned2DBicubicBaselERooAbsPdfgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::RooBinned2DBicubicBase<RooAbsPdf>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void RooCrossCorPdf_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_RooCrossCorPdf(void *p);
   static void deleteArray_RooCrossCorPdf(void *p);
   static void destruct_RooCrossCorPdf(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RooCrossCorPdf*)
   {
      ::RooCrossCorPdf *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooCrossCorPdf >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooCrossCorPdf", ::RooCrossCorPdf::Class_Version(), "gammacombo/include/RooCrossCorPdf.h", 14,
                  typeid(::RooCrossCorPdf), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RooCrossCorPdf::Dictionary, isa_proxy, 4,
                  sizeof(::RooCrossCorPdf) );
      instance.SetDelete(&delete_RooCrossCorPdf);
      instance.SetDeleteArray(&deleteArray_RooCrossCorPdf);
      instance.SetDestructor(&destruct_RooCrossCorPdf);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RooCrossCorPdf*)
   {
      return GenerateInitInstanceLocal((::RooCrossCorPdf*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooCrossCorPdf*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RooHistPdfAngleVar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooHistPdfAngleVar(void *p = 0);
   static void *newArray_RooHistPdfAngleVar(Long_t size, void *p);
   static void delete_RooHistPdfAngleVar(void *p);
   static void deleteArray_RooHistPdfAngleVar(void *p);
   static void destruct_RooHistPdfAngleVar(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RooHistPdfAngleVar*)
   {
      ::RooHistPdfAngleVar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooHistPdfAngleVar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooHistPdfAngleVar", ::RooHistPdfAngleVar::Class_Version(), "gammacombo/include/RooHistPdfAngleVar.h", 16,
                  typeid(::RooHistPdfAngleVar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RooHistPdfAngleVar::Dictionary, isa_proxy, 4,
                  sizeof(::RooHistPdfAngleVar) );
      instance.SetNew(&new_RooHistPdfAngleVar);
      instance.SetNewArray(&newArray_RooHistPdfAngleVar);
      instance.SetDelete(&delete_RooHistPdfAngleVar);
      instance.SetDeleteArray(&deleteArray_RooHistPdfAngleVar);
      instance.SetDestructor(&destruct_RooHistPdfAngleVar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RooHistPdfAngleVar*)
   {
      return GenerateInitInstanceLocal((::RooHistPdfAngleVar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooHistPdfAngleVar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RooHistPdfVar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooHistPdfVar(void *p = 0);
   static void *newArray_RooHistPdfVar(Long_t size, void *p);
   static void delete_RooHistPdfVar(void *p);
   static void deleteArray_RooHistPdfVar(void *p);
   static void destruct_RooHistPdfVar(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RooHistPdfVar*)
   {
      ::RooHistPdfVar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooHistPdfVar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooHistPdfVar", ::RooHistPdfVar::Class_Version(), "gammacombo/include/RooHistPdfVar.h", 16,
                  typeid(::RooHistPdfVar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RooHistPdfVar::Dictionary, isa_proxy, 4,
                  sizeof(::RooHistPdfVar) );
      instance.SetNew(&new_RooHistPdfVar);
      instance.SetNewArray(&newArray_RooHistPdfVar);
      instance.SetDelete(&delete_RooHistPdfVar);
      instance.SetDeleteArray(&deleteArray_RooHistPdfVar);
      instance.SetDestructor(&destruct_RooHistPdfVar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RooHistPdfVar*)
   {
      return GenerateInitInstanceLocal((::RooHistPdfVar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooHistPdfVar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RooPoly3Var_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooPoly3Var(void *p = 0);
   static void *newArray_RooPoly3Var(Long_t size, void *p);
   static void delete_RooPoly3Var(void *p);
   static void deleteArray_RooPoly3Var(void *p);
   static void destruct_RooPoly3Var(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RooPoly3Var*)
   {
      ::RooPoly3Var *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooPoly3Var >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooPoly3Var", ::RooPoly3Var::Class_Version(), "gammacombo/include/RooPoly3Var.h", 16,
                  typeid(::RooPoly3Var), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RooPoly3Var::Dictionary, isa_proxy, 4,
                  sizeof(::RooPoly3Var) );
      instance.SetNew(&new_RooPoly3Var);
      instance.SetNewArray(&newArray_RooPoly3Var);
      instance.SetDelete(&delete_RooPoly3Var);
      instance.SetDeleteArray(&deleteArray_RooPoly3Var);
      instance.SetDestructor(&destruct_RooPoly3Var);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RooPoly3Var*)
   {
      return GenerateInitInstanceLocal((::RooPoly3Var*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooPoly3Var*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RooPoly4Var_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooPoly4Var(void *p = 0);
   static void *newArray_RooPoly4Var(Long_t size, void *p);
   static void delete_RooPoly4Var(void *p);
   static void deleteArray_RooPoly4Var(void *p);
   static void destruct_RooPoly4Var(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RooPoly4Var*)
   {
      ::RooPoly4Var *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooPoly4Var >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooPoly4Var", ::RooPoly4Var::Class_Version(), "gammacombo/include/RooPoly4Var.h", 16,
                  typeid(::RooPoly4Var), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RooPoly4Var::Dictionary, isa_proxy, 4,
                  sizeof(::RooPoly4Var) );
      instance.SetNew(&new_RooPoly4Var);
      instance.SetNewArray(&newArray_RooPoly4Var);
      instance.SetDelete(&delete_RooPoly4Var);
      instance.SetDeleteArray(&deleteArray_RooPoly4Var);
      instance.SetDestructor(&destruct_RooPoly4Var);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RooPoly4Var*)
   {
      return GenerateInitInstanceLocal((::RooPoly4Var*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooPoly4Var*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RooSlimFitResult_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RooSlimFitResult(void *p = 0);
   static void *newArray_RooSlimFitResult(Long_t size, void *p);
   static void delete_RooSlimFitResult(void *p);
   static void deleteArray_RooSlimFitResult(void *p);
   static void destruct_RooSlimFitResult(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RooSlimFitResult*)
   {
      ::RooSlimFitResult *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RooSlimFitResult >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RooSlimFitResult", ::RooSlimFitResult::Class_Version(), "gammacombo/include/RooSlimFitResult.h", 30,
                  typeid(::RooSlimFitResult), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RooSlimFitResult::Dictionary, isa_proxy, 4,
                  sizeof(::RooSlimFitResult) );
      instance.SetNew(&new_RooSlimFitResult);
      instance.SetNewArray(&newArray_RooSlimFitResult);
      instance.SetDelete(&delete_RooSlimFitResult);
      instance.SetDeleteArray(&deleteArray_RooSlimFitResult);
      instance.SetDestructor(&destruct_RooSlimFitResult);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RooSlimFitResult*)
   {
      return GenerateInitInstanceLocal((::RooSlimFitResult*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RooSlimFitResult*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArrayImplEchargR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArrayImplEchargR_Dictionary();
   static void *new_SharedArrayImplEchargR(void *p = 0);
   static void *newArray_SharedArrayImplEchargR(Long_t size, void *p);
   static void delete_SharedArrayImplEchargR(void *p);
   static void deleteArray_SharedArrayImplEchargR(void *p);
   static void destruct_SharedArrayImplEchargR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArrayImp<char>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArrayImp<char>) == sizeof( ::ROOTShadow::Shadow::SharedArrayImplEchargR));
      ::SharedArrayImp<char> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArrayImp<char> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArrayImp<char>", ::SharedArrayImp<char>::Class_Version(), "gammacombo/include/SharedArray.h", 21,
                  typeid(::SharedArrayImp<char>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArrayImplEchargR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArrayImp<char>) );
      instance.SetNew(&new_SharedArrayImplEchargR);
      instance.SetNewArray(&newArray_SharedArrayImplEchargR);
      instance.SetDelete(&delete_SharedArrayImplEchargR);
      instance.SetDeleteArray(&deleteArray_SharedArrayImplEchargR);
      instance.SetDestructor(&destruct_SharedArrayImplEchargR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArrayImp<char>*)
   {
      return GenerateInitInstanceLocal((::SharedArrayImp<char>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArrayImp<char>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArrayImplEchargR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<char>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArrayImplEshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArrayImplEshortgR_Dictionary();
   static void *new_SharedArrayImplEshortgR(void *p = 0);
   static void *newArray_SharedArrayImplEshortgR(Long_t size, void *p);
   static void delete_SharedArrayImplEshortgR(void *p);
   static void deleteArray_SharedArrayImplEshortgR(void *p);
   static void destruct_SharedArrayImplEshortgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArrayImp<short>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArrayImp<short>) == sizeof( ::ROOTShadow::Shadow::SharedArrayImplEshortgR));
      ::SharedArrayImp<short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArrayImp<short> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArrayImp<short>", ::SharedArrayImp<short>::Class_Version(), "gammacombo/include/SharedArray.h", 21,
                  typeid(::SharedArrayImp<short>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArrayImplEshortgR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArrayImp<short>) );
      instance.SetNew(&new_SharedArrayImplEshortgR);
      instance.SetNewArray(&newArray_SharedArrayImplEshortgR);
      instance.SetDelete(&delete_SharedArrayImplEshortgR);
      instance.SetDeleteArray(&deleteArray_SharedArrayImplEshortgR);
      instance.SetDestructor(&destruct_SharedArrayImplEshortgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArrayImp<short>*)
   {
      return GenerateInitInstanceLocal((::SharedArrayImp<short>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArrayImp<short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArrayImplEshortgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<short>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArrayImplEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArrayImplEintgR_Dictionary();
   static void *new_SharedArrayImplEintgR(void *p = 0);
   static void *newArray_SharedArrayImplEintgR(Long_t size, void *p);
   static void delete_SharedArrayImplEintgR(void *p);
   static void deleteArray_SharedArrayImplEintgR(void *p);
   static void destruct_SharedArrayImplEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArrayImp<int>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArrayImp<int>) == sizeof( ::ROOTShadow::Shadow::SharedArrayImplEintgR));
      ::SharedArrayImp<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArrayImp<int> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArrayImp<int>", ::SharedArrayImp<int>::Class_Version(), "gammacombo/include/SharedArray.h", 21,
                  typeid(::SharedArrayImp<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArrayImplEintgR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArrayImp<int>) );
      instance.SetNew(&new_SharedArrayImplEintgR);
      instance.SetNewArray(&newArray_SharedArrayImplEintgR);
      instance.SetDelete(&delete_SharedArrayImplEintgR);
      instance.SetDeleteArray(&deleteArray_SharedArrayImplEintgR);
      instance.SetDestructor(&destruct_SharedArrayImplEintgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArrayImp<int>*)
   {
      return GenerateInitInstanceLocal((::SharedArrayImp<int>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArrayImp<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArrayImplEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArrayImplEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArrayImplEfloatgR_Dictionary();
   static void *new_SharedArrayImplEfloatgR(void *p = 0);
   static void *newArray_SharedArrayImplEfloatgR(Long_t size, void *p);
   static void delete_SharedArrayImplEfloatgR(void *p);
   static void deleteArray_SharedArrayImplEfloatgR(void *p);
   static void destruct_SharedArrayImplEfloatgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArrayImp<float>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArrayImp<float>) == sizeof( ::ROOTShadow::Shadow::SharedArrayImplEfloatgR));
      ::SharedArrayImp<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArrayImp<float> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArrayImp<float>", ::SharedArrayImp<float>::Class_Version(), "gammacombo/include/SharedArray.h", 21,
                  typeid(::SharedArrayImp<float>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArrayImplEfloatgR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArrayImp<float>) );
      instance.SetNew(&new_SharedArrayImplEfloatgR);
      instance.SetNewArray(&newArray_SharedArrayImplEfloatgR);
      instance.SetDelete(&delete_SharedArrayImplEfloatgR);
      instance.SetDeleteArray(&deleteArray_SharedArrayImplEfloatgR);
      instance.SetDestructor(&destruct_SharedArrayImplEfloatgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArrayImp<float>*)
   {
      return GenerateInitInstanceLocal((::SharedArrayImp<float>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArrayImp<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArrayImplEfloatgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<float>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArrayImplElonggR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArrayImplElonggR_Dictionary();
   static void *new_SharedArrayImplElonggR(void *p = 0);
   static void *newArray_SharedArrayImplElonggR(Long_t size, void *p);
   static void delete_SharedArrayImplElonggR(void *p);
   static void deleteArray_SharedArrayImplElonggR(void *p);
   static void destruct_SharedArrayImplElonggR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArrayImp<long>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArrayImp<long>) == sizeof( ::ROOTShadow::Shadow::SharedArrayImplElonggR));
      ::SharedArrayImp<long> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArrayImp<long> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArrayImp<long>", ::SharedArrayImp<long>::Class_Version(), "gammacombo/include/SharedArray.h", 21,
                  typeid(::SharedArrayImp<long>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArrayImplElonggR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArrayImp<long>) );
      instance.SetNew(&new_SharedArrayImplElonggR);
      instance.SetNewArray(&newArray_SharedArrayImplElonggR);
      instance.SetDelete(&delete_SharedArrayImplElonggR);
      instance.SetDeleteArray(&deleteArray_SharedArrayImplElonggR);
      instance.SetDestructor(&destruct_SharedArrayImplElonggR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArrayImp<long>*)
   {
      return GenerateInitInstanceLocal((::SharedArrayImp<long>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArrayImp<long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArrayImplElonggR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<long>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArrayImplELong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArrayImplELong64_tgR_Dictionary();
   static void *new_SharedArrayImplELong64_tgR(void *p = 0);
   static void *newArray_SharedArrayImplELong64_tgR(Long_t size, void *p);
   static void delete_SharedArrayImplELong64_tgR(void *p);
   static void deleteArray_SharedArrayImplELong64_tgR(void *p);
   static void destruct_SharedArrayImplELong64_tgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArrayImp<Long64_t>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArrayImp<Long64_t>) == sizeof( ::ROOTShadow::Shadow::SharedArrayImplElongsPlonggR));
      ::SharedArrayImp<Long64_t> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArrayImp<Long64_t> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArrayImp<Long64_t>", ::SharedArrayImp<Long64_t>::Class_Version(), "gammacombo/include/SharedArray.h", 21,
                  typeid(::SharedArrayImp<Long64_t>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArrayImplELong64_tgR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArrayImp<Long64_t>) );
      instance.SetNew(&new_SharedArrayImplELong64_tgR);
      instance.SetNewArray(&newArray_SharedArrayImplELong64_tgR);
      instance.SetDelete(&delete_SharedArrayImplELong64_tgR);
      instance.SetDeleteArray(&deleteArray_SharedArrayImplELong64_tgR);
      instance.SetDestructor(&destruct_SharedArrayImplELong64_tgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArrayImp<Long64_t>*)
   {
      return GenerateInitInstanceLocal((::SharedArrayImp<Long64_t>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArrayImp<Long64_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArrayImplELong64_tgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<Long64_t>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArrayImplEunsignedsPchargR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArrayImplEunsignedsPchargR_Dictionary();
   static void *new_SharedArrayImplEunsignedsPchargR(void *p = 0);
   static void *newArray_SharedArrayImplEunsignedsPchargR(Long_t size, void *p);
   static void delete_SharedArrayImplEunsignedsPchargR(void *p);
   static void deleteArray_SharedArrayImplEunsignedsPchargR(void *p);
   static void destruct_SharedArrayImplEunsignedsPchargR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArrayImp<unsigned char>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArrayImp<unsigned char>) == sizeof( ::ROOTShadow::Shadow::SharedArrayImplEunsignedsPchargR));
      ::SharedArrayImp<unsigned char> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArrayImp<unsigned char> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArrayImp<unsigned char>", ::SharedArrayImp<unsigned char>::Class_Version(), "gammacombo/include/SharedArray.h", 21,
                  typeid(::SharedArrayImp<unsigned char>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArrayImplEunsignedsPchargR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArrayImp<unsigned char>) );
      instance.SetNew(&new_SharedArrayImplEunsignedsPchargR);
      instance.SetNewArray(&newArray_SharedArrayImplEunsignedsPchargR);
      instance.SetDelete(&delete_SharedArrayImplEunsignedsPchargR);
      instance.SetDeleteArray(&deleteArray_SharedArrayImplEunsignedsPchargR);
      instance.SetDestructor(&destruct_SharedArrayImplEunsignedsPchargR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArrayImp<unsigned char>*)
   {
      return GenerateInitInstanceLocal((::SharedArrayImp<unsigned char>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned char>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArrayImplEunsignedsPchargR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned char>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArrayImplEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArrayImplEunsignedsPshortgR_Dictionary();
   static void *new_SharedArrayImplEunsignedsPshortgR(void *p = 0);
   static void *newArray_SharedArrayImplEunsignedsPshortgR(Long_t size, void *p);
   static void delete_SharedArrayImplEunsignedsPshortgR(void *p);
   static void deleteArray_SharedArrayImplEunsignedsPshortgR(void *p);
   static void destruct_SharedArrayImplEunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArrayImp<unsigned short>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArrayImp<unsigned short>) == sizeof( ::ROOTShadow::Shadow::SharedArrayImplEunsignedsPshortgR));
      ::SharedArrayImp<unsigned short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArrayImp<unsigned short> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArrayImp<unsigned short>", ::SharedArrayImp<unsigned short>::Class_Version(), "gammacombo/include/SharedArray.h", 21,
                  typeid(::SharedArrayImp<unsigned short>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArrayImplEunsignedsPshortgR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArrayImp<unsigned short>) );
      instance.SetNew(&new_SharedArrayImplEunsignedsPshortgR);
      instance.SetNewArray(&newArray_SharedArrayImplEunsignedsPshortgR);
      instance.SetDelete(&delete_SharedArrayImplEunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_SharedArrayImplEunsignedsPshortgR);
      instance.SetDestructor(&destruct_SharedArrayImplEunsignedsPshortgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArrayImp<unsigned short>*)
   {
      return GenerateInitInstanceLocal((::SharedArrayImp<unsigned short>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArrayImplEunsignedsPshortgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned short>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArrayImplEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArrayImplEunsignedsPintgR_Dictionary();
   static void *new_SharedArrayImplEunsignedsPintgR(void *p = 0);
   static void *newArray_SharedArrayImplEunsignedsPintgR(Long_t size, void *p);
   static void delete_SharedArrayImplEunsignedsPintgR(void *p);
   static void deleteArray_SharedArrayImplEunsignedsPintgR(void *p);
   static void destruct_SharedArrayImplEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArrayImp<unsigned int>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArrayImp<unsigned int>) == sizeof( ::ROOTShadow::Shadow::SharedArrayImplEunsignedsPintgR));
      ::SharedArrayImp<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArrayImp<unsigned int> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArrayImp<unsigned int>", ::SharedArrayImp<unsigned int>::Class_Version(), "gammacombo/include/SharedArray.h", 21,
                  typeid(::SharedArrayImp<unsigned int>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArrayImplEunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArrayImp<unsigned int>) );
      instance.SetNew(&new_SharedArrayImplEunsignedsPintgR);
      instance.SetNewArray(&newArray_SharedArrayImplEunsignedsPintgR);
      instance.SetDelete(&delete_SharedArrayImplEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_SharedArrayImplEunsignedsPintgR);
      instance.SetDestructor(&destruct_SharedArrayImplEunsignedsPintgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArrayImp<unsigned int>*)
   {
      return GenerateInitInstanceLocal((::SharedArrayImp<unsigned int>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArrayImplEunsignedsPintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArrayImplEunsignedsPlonggR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArrayImplEunsignedsPlonggR_Dictionary();
   static void *new_SharedArrayImplEunsignedsPlonggR(void *p = 0);
   static void *newArray_SharedArrayImplEunsignedsPlonggR(Long_t size, void *p);
   static void delete_SharedArrayImplEunsignedsPlonggR(void *p);
   static void deleteArray_SharedArrayImplEunsignedsPlonggR(void *p);
   static void destruct_SharedArrayImplEunsignedsPlonggR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArrayImp<unsigned long>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArrayImp<unsigned long>) == sizeof( ::ROOTShadow::Shadow::SharedArrayImplEunsignedsPlonggR));
      ::SharedArrayImp<unsigned long> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArrayImp<unsigned long> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArrayImp<unsigned long>", ::SharedArrayImp<unsigned long>::Class_Version(), "gammacombo/include/SharedArray.h", 21,
                  typeid(::SharedArrayImp<unsigned long>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArrayImplEunsignedsPlonggR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArrayImp<unsigned long>) );
      instance.SetNew(&new_SharedArrayImplEunsignedsPlonggR);
      instance.SetNewArray(&newArray_SharedArrayImplEunsignedsPlonggR);
      instance.SetDelete(&delete_SharedArrayImplEunsignedsPlonggR);
      instance.SetDeleteArray(&deleteArray_SharedArrayImplEunsignedsPlonggR);
      instance.SetDestructor(&destruct_SharedArrayImplEunsignedsPlonggR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArrayImp<unsigned long>*)
   {
      return GenerateInitInstanceLocal((::SharedArrayImp<unsigned long>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArrayImplEunsignedsPlonggR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned long>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArrayImplEULong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArrayImplEULong64_tgR_Dictionary();
   static void *new_SharedArrayImplEULong64_tgR(void *p = 0);
   static void *newArray_SharedArrayImplEULong64_tgR(Long_t size, void *p);
   static void delete_SharedArrayImplEULong64_tgR(void *p);
   static void deleteArray_SharedArrayImplEULong64_tgR(void *p);
   static void destruct_SharedArrayImplEULong64_tgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArrayImp<ULong64_t>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArrayImp<ULong64_t>) == sizeof( ::ROOTShadow::Shadow::SharedArrayImplEunsignedsPlongsPlonggR));
      ::SharedArrayImp<ULong64_t> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArrayImp<ULong64_t> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArrayImp<ULong64_t>", ::SharedArrayImp<ULong64_t>::Class_Version(), "gammacombo/include/SharedArray.h", 21,
                  typeid(::SharedArrayImp<ULong64_t>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArrayImplEULong64_tgR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArrayImp<ULong64_t>) );
      instance.SetNew(&new_SharedArrayImplEULong64_tgR);
      instance.SetNewArray(&newArray_SharedArrayImplEULong64_tgR);
      instance.SetDelete(&delete_SharedArrayImplEULong64_tgR);
      instance.SetDeleteArray(&deleteArray_SharedArrayImplEULong64_tgR);
      instance.SetDestructor(&destruct_SharedArrayImplEULong64_tgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArrayImp<ULong64_t>*)
   {
      return GenerateInitInstanceLocal((::SharedArrayImp<ULong64_t>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArrayImp<ULong64_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArrayImplEULong64_tgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<ULong64_t>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArraylEchargR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArraylEchargR_Dictionary();
   static void delete_SharedArraylEchargR(void *p);
   static void deleteArray_SharedArraylEchargR(void *p);
   static void destruct_SharedArraylEchargR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArray<char>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArray<char>) == sizeof( ::ROOTShadow::Shadow::SharedArraylEchargR));
      ::SharedArray<char> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArray<char> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArray<char>", ::SharedArray<char>::Class_Version(), "gammacombo/include/SharedArray.h", 68,
                  typeid(::SharedArray<char>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArraylEchargR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArray<char>) );
      instance.SetDelete(&delete_SharedArraylEchargR);
      instance.SetDeleteArray(&deleteArray_SharedArraylEchargR);
      instance.SetDestructor(&destruct_SharedArraylEchargR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArray<char>*)
   {
      return GenerateInitInstanceLocal((::SharedArray<char>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArray<char>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArraylEchargR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<char>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArraylEshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArraylEshortgR_Dictionary();
   static void delete_SharedArraylEshortgR(void *p);
   static void deleteArray_SharedArraylEshortgR(void *p);
   static void destruct_SharedArraylEshortgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArray<short>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArray<short>) == sizeof( ::ROOTShadow::Shadow::SharedArraylEshortgR));
      ::SharedArray<short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArray<short> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArray<short>", ::SharedArray<short>::Class_Version(), "gammacombo/include/SharedArray.h", 68,
                  typeid(::SharedArray<short>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArraylEshortgR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArray<short>) );
      instance.SetDelete(&delete_SharedArraylEshortgR);
      instance.SetDeleteArray(&deleteArray_SharedArraylEshortgR);
      instance.SetDestructor(&destruct_SharedArraylEshortgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArray<short>*)
   {
      return GenerateInitInstanceLocal((::SharedArray<short>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArray<short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArraylEshortgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<short>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArraylEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArraylEintgR_Dictionary();
   static void delete_SharedArraylEintgR(void *p);
   static void deleteArray_SharedArraylEintgR(void *p);
   static void destruct_SharedArraylEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArray<int>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArray<int>) == sizeof( ::ROOTShadow::Shadow::SharedArraylEintgR));
      ::SharedArray<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArray<int> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArray<int>", ::SharedArray<int>::Class_Version(), "gammacombo/include/SharedArray.h", 68,
                  typeid(::SharedArray<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArraylEintgR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArray<int>) );
      instance.SetDelete(&delete_SharedArraylEintgR);
      instance.SetDeleteArray(&deleteArray_SharedArraylEintgR);
      instance.SetDestructor(&destruct_SharedArraylEintgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArray<int>*)
   {
      return GenerateInitInstanceLocal((::SharedArray<int>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArray<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArraylEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArraylElonggR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArraylElonggR_Dictionary();
   static void delete_SharedArraylElonggR(void *p);
   static void deleteArray_SharedArraylElonggR(void *p);
   static void destruct_SharedArraylElonggR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArray<long>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArray<long>) == sizeof( ::ROOTShadow::Shadow::SharedArraylElonggR));
      ::SharedArray<long> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArray<long> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArray<long>", ::SharedArray<long>::Class_Version(), "gammacombo/include/SharedArray.h", 68,
                  typeid(::SharedArray<long>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArraylElonggR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArray<long>) );
      instance.SetDelete(&delete_SharedArraylElonggR);
      instance.SetDeleteArray(&deleteArray_SharedArraylElonggR);
      instance.SetDestructor(&destruct_SharedArraylElonggR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArray<long>*)
   {
      return GenerateInitInstanceLocal((::SharedArray<long>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArray<long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArraylElonggR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<long>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArraylELong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArraylELong64_tgR_Dictionary();
   static void delete_SharedArraylELong64_tgR(void *p);
   static void deleteArray_SharedArraylELong64_tgR(void *p);
   static void destruct_SharedArraylELong64_tgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArray<Long64_t>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArray<Long64_t>) == sizeof( ::ROOTShadow::Shadow::SharedArraylElongsPlonggR));
      ::SharedArray<Long64_t> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArray<Long64_t> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArray<Long64_t>", ::SharedArray<Long64_t>::Class_Version(), "gammacombo/include/SharedArray.h", 68,
                  typeid(::SharedArray<Long64_t>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArraylELong64_tgR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArray<Long64_t>) );
      instance.SetDelete(&delete_SharedArraylELong64_tgR);
      instance.SetDeleteArray(&deleteArray_SharedArraylELong64_tgR);
      instance.SetDestructor(&destruct_SharedArraylELong64_tgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArray<Long64_t>*)
   {
      return GenerateInitInstanceLocal((::SharedArray<Long64_t>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArray<Long64_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArraylELong64_tgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<Long64_t>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArraylEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArraylEfloatgR_Dictionary();
   static void delete_SharedArraylEfloatgR(void *p);
   static void deleteArray_SharedArraylEfloatgR(void *p);
   static void destruct_SharedArraylEfloatgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArray<float>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArray<float>) == sizeof( ::ROOTShadow::Shadow::SharedArraylEfloatgR));
      ::SharedArray<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArray<float> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArray<float>", ::SharedArray<float>::Class_Version(), "gammacombo/include/SharedArray.h", 68,
                  typeid(::SharedArray<float>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArraylEfloatgR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArray<float>) );
      instance.SetDelete(&delete_SharedArraylEfloatgR);
      instance.SetDeleteArray(&deleteArray_SharedArraylEfloatgR);
      instance.SetDestructor(&destruct_SharedArraylEfloatgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArray<float>*)
   {
      return GenerateInitInstanceLocal((::SharedArray<float>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArray<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArraylEfloatgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<float>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArraylEunsignedsPchargR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArraylEunsignedsPchargR_Dictionary();
   static void delete_SharedArraylEunsignedsPchargR(void *p);
   static void deleteArray_SharedArraylEunsignedsPchargR(void *p);
   static void destruct_SharedArraylEunsignedsPchargR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArray<unsigned char>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArray<unsigned char>) == sizeof( ::ROOTShadow::Shadow::SharedArraylEunsignedsPchargR));
      ::SharedArray<unsigned char> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArray<unsigned char> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArray<unsigned char>", ::SharedArray<unsigned char>::Class_Version(), "gammacombo/include/SharedArray.h", 68,
                  typeid(::SharedArray<unsigned char>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArraylEunsignedsPchargR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArray<unsigned char>) );
      instance.SetDelete(&delete_SharedArraylEunsignedsPchargR);
      instance.SetDeleteArray(&deleteArray_SharedArraylEunsignedsPchargR);
      instance.SetDestructor(&destruct_SharedArraylEunsignedsPchargR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArray<unsigned char>*)
   {
      return GenerateInitInstanceLocal((::SharedArray<unsigned char>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArray<unsigned char>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArraylEunsignedsPchargR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned char>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArraylEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArraylEunsignedsPshortgR_Dictionary();
   static void delete_SharedArraylEunsignedsPshortgR(void *p);
   static void deleteArray_SharedArraylEunsignedsPshortgR(void *p);
   static void destruct_SharedArraylEunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArray<unsigned short>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArray<unsigned short>) == sizeof( ::ROOTShadow::Shadow::SharedArraylEunsignedsPshortgR));
      ::SharedArray<unsigned short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArray<unsigned short> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArray<unsigned short>", ::SharedArray<unsigned short>::Class_Version(), "gammacombo/include/SharedArray.h", 68,
                  typeid(::SharedArray<unsigned short>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArraylEunsignedsPshortgR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArray<unsigned short>) );
      instance.SetDelete(&delete_SharedArraylEunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_SharedArraylEunsignedsPshortgR);
      instance.SetDestructor(&destruct_SharedArraylEunsignedsPshortgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArray<unsigned short>*)
   {
      return GenerateInitInstanceLocal((::SharedArray<unsigned short>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArray<unsigned short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArraylEunsignedsPshortgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned short>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArraylEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArraylEunsignedsPintgR_Dictionary();
   static void delete_SharedArraylEunsignedsPintgR(void *p);
   static void deleteArray_SharedArraylEunsignedsPintgR(void *p);
   static void destruct_SharedArraylEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArray<unsigned int>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArray<unsigned int>) == sizeof( ::ROOTShadow::Shadow::SharedArraylEunsignedsPintgR));
      ::SharedArray<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArray<unsigned int> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArray<unsigned int>", ::SharedArray<unsigned int>::Class_Version(), "gammacombo/include/SharedArray.h", 68,
                  typeid(::SharedArray<unsigned int>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArraylEunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArray<unsigned int>) );
      instance.SetDelete(&delete_SharedArraylEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_SharedArraylEunsignedsPintgR);
      instance.SetDestructor(&destruct_SharedArraylEunsignedsPintgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArray<unsigned int>*)
   {
      return GenerateInitInstanceLocal((::SharedArray<unsigned int>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArray<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArraylEunsignedsPintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArraylEunsignedsPlonggR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArraylEunsignedsPlonggR_Dictionary();
   static void delete_SharedArraylEunsignedsPlonggR(void *p);
   static void deleteArray_SharedArraylEunsignedsPlonggR(void *p);
   static void destruct_SharedArraylEunsignedsPlonggR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArray<unsigned long>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArray<unsigned long>) == sizeof( ::ROOTShadow::Shadow::SharedArraylEunsignedsPlonggR));
      ::SharedArray<unsigned long> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArray<unsigned long> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArray<unsigned long>", ::SharedArray<unsigned long>::Class_Version(), "gammacombo/include/SharedArray.h", 68,
                  typeid(::SharedArray<unsigned long>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArraylEunsignedsPlonggR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArray<unsigned long>) );
      instance.SetDelete(&delete_SharedArraylEunsignedsPlonggR);
      instance.SetDeleteArray(&deleteArray_SharedArraylEunsignedsPlonggR);
      instance.SetDestructor(&destruct_SharedArraylEunsignedsPlonggR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArray<unsigned long>*)
   {
      return GenerateInitInstanceLocal((::SharedArray<unsigned long>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArray<unsigned long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArraylEunsignedsPlonggR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned long>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SharedArraylEULong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SharedArraylEULong64_tgR_Dictionary();
   static void delete_SharedArraylEULong64_tgR(void *p);
   static void deleteArray_SharedArraylEULong64_tgR(void *p);
   static void destruct_SharedArraylEULong64_tgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SharedArray<ULong64_t>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SharedArray<ULong64_t>) == sizeof( ::ROOTShadow::Shadow::SharedArraylEunsignedsPlongsPlonggR));
      ::SharedArray<ULong64_t> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SharedArray<ULong64_t> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SharedArray<ULong64_t>", ::SharedArray<ULong64_t>::Class_Version(), "gammacombo/include/SharedArray.h", 68,
                  typeid(::SharedArray<ULong64_t>), ::ROOT::DefineBehavior(ptr, ptr),
                  &SharedArraylEULong64_tgR_Dictionary, isa_proxy, 4,
                  sizeof(::SharedArray<ULong64_t>) );
      instance.SetDelete(&delete_SharedArraylEULong64_tgR);
      instance.SetDeleteArray(&deleteArray_SharedArraylEULong64_tgR);
      instance.SetDestructor(&destruct_SharedArraylEULong64_tgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SharedArray<ULong64_t>*)
   {
      return GenerateInitInstanceLocal((::SharedArray<ULong64_t>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SharedArray<ULong64_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SharedArraylEULong64_tgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<ULong64_t>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

//______________________________________________________________________________
template <> atomic_TClass_ptr RooBinned2DBicubicBase<RooAbsReal>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *RooBinned2DBicubicBase<RooAbsReal>::Class_Name()
{
   return "RooBinned2DBicubicBase<RooAbsReal>";
}

//______________________________________________________________________________
template <> const char *RooBinned2DBicubicBase<RooAbsReal>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RooBinned2DBicubicBase<RooAbsReal>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int RooBinned2DBicubicBase<RooAbsReal>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RooBinned2DBicubicBase<RooAbsReal>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void RooBinned2DBicubicBase<RooAbsReal>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RooBinned2DBicubicBase<RooAbsReal>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *RooBinned2DBicubicBase<RooAbsReal>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RooBinned2DBicubicBase<RooAbsReal>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArray<double>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArray<double>::Class_Name()
{
   return "SharedArray<double>";
}

//______________________________________________________________________________
template <> const char *SharedArray<double>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<double>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArray<double>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<double>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArray<double>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<double>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArray<double>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<double>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArrayImp<double>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArrayImp<double>::Class_Name()
{
   return "SharedArrayImp<double>";
}

//______________________________________________________________________________
template <> const char *SharedArrayImp<double>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<double>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArrayImp<double>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<double>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArrayImp<double>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<double>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArrayImp<double>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<double>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr RooBinned2DBicubicBase<RooAbsPdf>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *RooBinned2DBicubicBase<RooAbsPdf>::Class_Name()
{
   return "RooBinned2DBicubicBase<RooAbsPdf>";
}

//______________________________________________________________________________
template <> const char *RooBinned2DBicubicBase<RooAbsPdf>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RooBinned2DBicubicBase<RooAbsPdf>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int RooBinned2DBicubicBase<RooAbsPdf>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RooBinned2DBicubicBase<RooAbsPdf>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void RooBinned2DBicubicBase<RooAbsPdf>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RooBinned2DBicubicBase<RooAbsPdf>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *RooBinned2DBicubicBase<RooAbsPdf>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RooBinned2DBicubicBase<RooAbsPdf>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RooCrossCorPdf::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RooCrossCorPdf::Class_Name()
{
   return "RooCrossCorPdf";
}

//______________________________________________________________________________
const char *RooCrossCorPdf::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RooCrossCorPdf*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooCrossCorPdf::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RooCrossCorPdf*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooCrossCorPdf::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RooCrossCorPdf*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooCrossCorPdf::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RooCrossCorPdf*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RooHistPdfAngleVar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RooHistPdfAngleVar::Class_Name()
{
   return "RooHistPdfAngleVar";
}

//______________________________________________________________________________
const char *RooHistPdfAngleVar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RooHistPdfAngleVar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooHistPdfAngleVar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RooHistPdfAngleVar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooHistPdfAngleVar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RooHistPdfAngleVar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooHistPdfAngleVar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RooHistPdfAngleVar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RooHistPdfVar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RooHistPdfVar::Class_Name()
{
   return "RooHistPdfVar";
}

//______________________________________________________________________________
const char *RooHistPdfVar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RooHistPdfVar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooHistPdfVar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RooHistPdfVar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooHistPdfVar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RooHistPdfVar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooHistPdfVar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RooHistPdfVar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RooPoly3Var::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RooPoly3Var::Class_Name()
{
   return "RooPoly3Var";
}

//______________________________________________________________________________
const char *RooPoly3Var::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RooPoly3Var*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooPoly3Var::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RooPoly3Var*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooPoly3Var::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RooPoly3Var*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooPoly3Var::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RooPoly3Var*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RooPoly4Var::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RooPoly4Var::Class_Name()
{
   return "RooPoly4Var";
}

//______________________________________________________________________________
const char *RooPoly4Var::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RooPoly4Var*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooPoly4Var::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RooPoly4Var*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooPoly4Var::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RooPoly4Var*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooPoly4Var::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RooPoly4Var*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RooSlimFitResult::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RooSlimFitResult::Class_Name()
{
   return "RooSlimFitResult";
}

//______________________________________________________________________________
const char *RooSlimFitResult::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RooSlimFitResult*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RooSlimFitResult::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RooSlimFitResult*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RooSlimFitResult::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RooSlimFitResult*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RooSlimFitResult::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RooSlimFitResult*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArrayImp<char>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArrayImp<char>::Class_Name()
{
   return "SharedArrayImp<char>";
}

//______________________________________________________________________________
template <> const char *SharedArrayImp<char>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<char>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArrayImp<char>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<char>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArrayImp<char>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<char>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArrayImp<char>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<char>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArrayImp<short>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArrayImp<short>::Class_Name()
{
   return "SharedArrayImp<short>";
}

//______________________________________________________________________________
template <> const char *SharedArrayImp<short>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<short>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArrayImp<short>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<short>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArrayImp<short>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<short>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArrayImp<short>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<short>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArrayImp<int>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArrayImp<int>::Class_Name()
{
   return "SharedArrayImp<int>";
}

//______________________________________________________________________________
template <> const char *SharedArrayImp<int>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<int>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArrayImp<int>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<int>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArrayImp<int>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<int>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArrayImp<int>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<int>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArrayImp<float>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArrayImp<float>::Class_Name()
{
   return "SharedArrayImp<float>";
}

//______________________________________________________________________________
template <> const char *SharedArrayImp<float>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<float>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArrayImp<float>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<float>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArrayImp<float>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<float>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArrayImp<float>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<float>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArrayImp<long>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArrayImp<long>::Class_Name()
{
   return "SharedArrayImp<long>";
}

//______________________________________________________________________________
template <> const char *SharedArrayImp<long>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<long>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArrayImp<long>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<long>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArrayImp<long>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<long>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArrayImp<long>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<long>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArrayImp<long long>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArrayImp<long long>::Class_Name()
{
   return "SharedArrayImp<long long>";
}

//______________________________________________________________________________
template <> const char *SharedArrayImp<long long>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<long long>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArrayImp<long long>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<long long>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArrayImp<long long>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<long long>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArrayImp<long long>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<long long>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArrayImp<unsigned char>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArrayImp<unsigned char>::Class_Name()
{
   return "SharedArrayImp<unsigned char>";
}

//______________________________________________________________________________
template <> const char *SharedArrayImp<unsigned char>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned char>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArrayImp<unsigned char>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned char>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArrayImp<unsigned char>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned char>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArrayImp<unsigned char>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned char>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArrayImp<unsigned short>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArrayImp<unsigned short>::Class_Name()
{
   return "SharedArrayImp<unsigned short>";
}

//______________________________________________________________________________
template <> const char *SharedArrayImp<unsigned short>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned short>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArrayImp<unsigned short>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned short>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArrayImp<unsigned short>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned short>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArrayImp<unsigned short>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned short>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArrayImp<unsigned int>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArrayImp<unsigned int>::Class_Name()
{
   return "SharedArrayImp<unsigned int>";
}

//______________________________________________________________________________
template <> const char *SharedArrayImp<unsigned int>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned int>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArrayImp<unsigned int>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned int>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArrayImp<unsigned int>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned int>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArrayImp<unsigned int>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned int>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArrayImp<unsigned long>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArrayImp<unsigned long>::Class_Name()
{
   return "SharedArrayImp<unsigned long>";
}

//______________________________________________________________________________
template <> const char *SharedArrayImp<unsigned long>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned long>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArrayImp<unsigned long>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned long>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArrayImp<unsigned long>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned long>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArrayImp<unsigned long>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned long>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArrayImp<unsigned long long>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArrayImp<unsigned long long>::Class_Name()
{
   return "SharedArrayImp<unsigned long long>";
}

//______________________________________________________________________________
template <> const char *SharedArrayImp<unsigned long long>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned long long>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArrayImp<unsigned long long>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned long long>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArrayImp<unsigned long long>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned long long>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArrayImp<unsigned long long>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned long long>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArray<char>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArray<char>::Class_Name()
{
   return "SharedArray<char>";
}

//______________________________________________________________________________
template <> const char *SharedArray<char>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<char>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArray<char>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<char>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArray<char>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<char>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArray<char>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<char>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArray<short>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArray<short>::Class_Name()
{
   return "SharedArray<short>";
}

//______________________________________________________________________________
template <> const char *SharedArray<short>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<short>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArray<short>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<short>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArray<short>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<short>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArray<short>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<short>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArray<int>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArray<int>::Class_Name()
{
   return "SharedArray<int>";
}

//______________________________________________________________________________
template <> const char *SharedArray<int>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<int>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArray<int>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<int>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArray<int>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<int>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArray<int>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<int>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArray<long>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArray<long>::Class_Name()
{
   return "SharedArray<long>";
}

//______________________________________________________________________________
template <> const char *SharedArray<long>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<long>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArray<long>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<long>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArray<long>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<long>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArray<long>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<long>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArray<long long>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArray<long long>::Class_Name()
{
   return "SharedArray<long long>";
}

//______________________________________________________________________________
template <> const char *SharedArray<long long>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<long long>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArray<long long>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<long long>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArray<long long>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<long long>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArray<long long>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<long long>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArray<float>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArray<float>::Class_Name()
{
   return "SharedArray<float>";
}

//______________________________________________________________________________
template <> const char *SharedArray<float>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<float>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArray<float>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<float>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArray<float>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<float>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArray<float>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<float>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArray<unsigned char>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArray<unsigned char>::Class_Name()
{
   return "SharedArray<unsigned char>";
}

//______________________________________________________________________________
template <> const char *SharedArray<unsigned char>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned char>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArray<unsigned char>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned char>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArray<unsigned char>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned char>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArray<unsigned char>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned char>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArray<unsigned short>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArray<unsigned short>::Class_Name()
{
   return "SharedArray<unsigned short>";
}

//______________________________________________________________________________
template <> const char *SharedArray<unsigned short>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned short>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArray<unsigned short>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned short>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArray<unsigned short>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned short>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArray<unsigned short>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned short>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArray<unsigned int>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArray<unsigned int>::Class_Name()
{
   return "SharedArray<unsigned int>";
}

//______________________________________________________________________________
template <> const char *SharedArray<unsigned int>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned int>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArray<unsigned int>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned int>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArray<unsigned int>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned int>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArray<unsigned int>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned int>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArray<unsigned long>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArray<unsigned long>::Class_Name()
{
   return "SharedArray<unsigned long>";
}

//______________________________________________________________________________
template <> const char *SharedArray<unsigned long>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned long>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArray<unsigned long>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned long>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArray<unsigned long>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned long>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArray<unsigned long>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned long>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
template <> atomic_TClass_ptr SharedArray<unsigned long long>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *SharedArray<unsigned long long>::Class_Name()
{
   return "SharedArray<unsigned long long>";
}

//______________________________________________________________________________
template <> const char *SharedArray<unsigned long long>::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned long long>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int SharedArray<unsigned long long>::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned long long>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void SharedArray<unsigned long long>::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned long long>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *SharedArray<unsigned long long>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned long long>*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void RooCrossCorPdf::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooCrossCorPdf.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RooCrossCorPdf::Class(),this);
   } else {
      R__b.WriteClassBuffer(RooCrossCorPdf::Class(),this);
   }
}

//______________________________________________________________________________
void RooCrossCorPdf::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooCrossCorPdf.
      TClass *R__cl = ::RooCrossCorPdf::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_th", &_th);
      R__insp.InspectMember(_th, "_th.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_obs", &_obs);
      R__insp.InspectMember(_obs, "_obs.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_invcov", &_invcov);
      R__insp.InspectMember(_invcov, "_invcov.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nObsPdf1", &_nObsPdf1);
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_RooCrossCorPdf(void *p) {
      delete ((::RooCrossCorPdf*)p);
   }
   static void deleteArray_RooCrossCorPdf(void *p) {
      delete [] ((::RooCrossCorPdf*)p);
   }
   static void destruct_RooCrossCorPdf(void *p) {
      typedef ::RooCrossCorPdf current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RooCrossCorPdf

//______________________________________________________________________________
template <> void SharedArrayImp<char>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArrayImp<char>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArrayImp<char>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArrayImp<char>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArrayImplEchargR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArrayImp<char>.
      typedef ::ROOTShadow::Shadow::SharedArrayImplEchargR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<char>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refcount", &sobj->refcount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arr", (void*)&sobj->arr);
      R__insp.InspectMember("vector<char>", (void*)&sobj->arr, "arr.", false);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArrayImp<char>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArrayImplEchargR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SharedArrayImplEchargR(void *p) {
      return  p ? new(p) ::SharedArrayImp<char> : new ::SharedArrayImp<char>;
   }
   static void *newArray_SharedArrayImplEchargR(Long_t nElements, void *p) {
      return p ? new(p) ::SharedArrayImp<char>[nElements] : new ::SharedArrayImp<char>[nElements];
   }
   // Wrapper around operator delete
   static void delete_SharedArrayImplEchargR(void *p) {
      delete ((::SharedArrayImp<char>*)p);
   }
   static void deleteArray_SharedArrayImplEchargR(void *p) {
      delete [] ((::SharedArrayImp<char>*)p);
   }
   static void destruct_SharedArrayImplEchargR(void *p) {
      typedef ::SharedArrayImp<char> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArrayImp<char>

//______________________________________________________________________________
template <> void SharedArrayImp<short>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArrayImp<short>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArrayImp<short>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArrayImp<short>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArrayImplEshortgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArrayImp<short>.
      typedef ::ROOTShadow::Shadow::SharedArrayImplEshortgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<short>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refcount", &sobj->refcount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arr", (void*)&sobj->arr);
      R__insp.InspectMember("vector<short>", (void*)&sobj->arr, "arr.", false);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArrayImp<short>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArrayImplEshortgR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SharedArrayImplEshortgR(void *p) {
      return  p ? new(p) ::SharedArrayImp<short> : new ::SharedArrayImp<short>;
   }
   static void *newArray_SharedArrayImplEshortgR(Long_t nElements, void *p) {
      return p ? new(p) ::SharedArrayImp<short>[nElements] : new ::SharedArrayImp<short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_SharedArrayImplEshortgR(void *p) {
      delete ((::SharedArrayImp<short>*)p);
   }
   static void deleteArray_SharedArrayImplEshortgR(void *p) {
      delete [] ((::SharedArrayImp<short>*)p);
   }
   static void destruct_SharedArrayImplEshortgR(void *p) {
      typedef ::SharedArrayImp<short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArrayImp<short>

//______________________________________________________________________________
template <> void SharedArrayImp<int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArrayImp<int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArrayImp<int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArrayImp<int>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArrayImplEintgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArrayImp<int>.
      typedef ::ROOTShadow::Shadow::SharedArrayImplEintgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<int>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refcount", &sobj->refcount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arr", (void*)&sobj->arr);
      R__insp.InspectMember("vector<int>", (void*)&sobj->arr, "arr.", false);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArrayImp<int>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArrayImplEintgR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SharedArrayImplEintgR(void *p) {
      return  p ? new(p) ::SharedArrayImp<int> : new ::SharedArrayImp<int>;
   }
   static void *newArray_SharedArrayImplEintgR(Long_t nElements, void *p) {
      return p ? new(p) ::SharedArrayImp<int>[nElements] : new ::SharedArrayImp<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_SharedArrayImplEintgR(void *p) {
      delete ((::SharedArrayImp<int>*)p);
   }
   static void deleteArray_SharedArrayImplEintgR(void *p) {
      delete [] ((::SharedArrayImp<int>*)p);
   }
   static void destruct_SharedArrayImplEintgR(void *p) {
      typedef ::SharedArrayImp<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArrayImp<int>

//______________________________________________________________________________
template <> void SharedArrayImp<float>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArrayImp<float>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArrayImp<float>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArrayImp<float>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArrayImplEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArrayImp<float>.
      typedef ::ROOTShadow::Shadow::SharedArrayImplEfloatgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<float>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refcount", &sobj->refcount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arr", (void*)&sobj->arr);
      R__insp.InspectMember("vector<float>", (void*)&sobj->arr, "arr.", false);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArrayImp<float>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArrayImplEfloatgR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SharedArrayImplEfloatgR(void *p) {
      return  p ? new(p) ::SharedArrayImp<float> : new ::SharedArrayImp<float>;
   }
   static void *newArray_SharedArrayImplEfloatgR(Long_t nElements, void *p) {
      return p ? new(p) ::SharedArrayImp<float>[nElements] : new ::SharedArrayImp<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_SharedArrayImplEfloatgR(void *p) {
      delete ((::SharedArrayImp<float>*)p);
   }
   static void deleteArray_SharedArrayImplEfloatgR(void *p) {
      delete [] ((::SharedArrayImp<float>*)p);
   }
   static void destruct_SharedArrayImplEfloatgR(void *p) {
      typedef ::SharedArrayImp<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArrayImp<float>

//______________________________________________________________________________
template <> void SharedArrayImp<long>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArrayImp<long>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArrayImp<long>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArrayImp<long>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArrayImplElonggR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArrayImp<long>.
      typedef ::ROOTShadow::Shadow::SharedArrayImplElonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<long>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refcount", &sobj->refcount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arr", (void*)&sobj->arr);
      R__insp.InspectMember("vector<long>", (void*)&sobj->arr, "arr.", false);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArrayImp<long>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArrayImplElonggR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SharedArrayImplElonggR(void *p) {
      return  p ? new(p) ::SharedArrayImp<long> : new ::SharedArrayImp<long>;
   }
   static void *newArray_SharedArrayImplElonggR(Long_t nElements, void *p) {
      return p ? new(p) ::SharedArrayImp<long>[nElements] : new ::SharedArrayImp<long>[nElements];
   }
   // Wrapper around operator delete
   static void delete_SharedArrayImplElonggR(void *p) {
      delete ((::SharedArrayImp<long>*)p);
   }
   static void deleteArray_SharedArrayImplElonggR(void *p) {
      delete [] ((::SharedArrayImp<long>*)p);
   }
   static void destruct_SharedArrayImplElonggR(void *p) {
      typedef ::SharedArrayImp<long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArrayImp<long>

//______________________________________________________________________________
template <> void SharedArrayImp<long long>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArrayImp<long long>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArrayImp<long long>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArrayImp<long long>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArrayImplELong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArrayImp<long long>.
      typedef ::ROOTShadow::Shadow::SharedArrayImplElongsPlonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<long long>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refcount", &sobj->refcount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arr", (void*)&sobj->arr);
      R__insp.InspectMember("vector<Long64_t>", (void*)&sobj->arr, "arr.", false);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArrayImp<long long>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArrayImplELong64_tgR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SharedArrayImplELong64_tgR(void *p) {
      return  p ? new(p) ::SharedArrayImp<Long64_t> : new ::SharedArrayImp<Long64_t>;
   }
   static void *newArray_SharedArrayImplELong64_tgR(Long_t nElements, void *p) {
      return p ? new(p) ::SharedArrayImp<Long64_t>[nElements] : new ::SharedArrayImp<Long64_t>[nElements];
   }
   // Wrapper around operator delete
   static void delete_SharedArrayImplELong64_tgR(void *p) {
      delete ((::SharedArrayImp<Long64_t>*)p);
   }
   static void deleteArray_SharedArrayImplELong64_tgR(void *p) {
      delete [] ((::SharedArrayImp<Long64_t>*)p);
   }
   static void destruct_SharedArrayImplELong64_tgR(void *p) {
      typedef ::SharedArrayImp<Long64_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArrayImp<Long64_t>

//______________________________________________________________________________
template <> void SharedArrayImp<unsigned char>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArrayImp<unsigned char>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArrayImp<unsigned char>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArrayImp<unsigned char>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArrayImplEunsignedsPchargR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArrayImp<unsigned char>.
      typedef ::ROOTShadow::Shadow::SharedArrayImplEunsignedsPchargR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned char>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refcount", &sobj->refcount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arr", (void*)&sobj->arr);
      R__insp.InspectMember("vector<unsigned char>", (void*)&sobj->arr, "arr.", false);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArrayImp<unsigned char>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArrayImplEunsignedsPchargR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SharedArrayImplEunsignedsPchargR(void *p) {
      return  p ? new(p) ::SharedArrayImp<unsigned char> : new ::SharedArrayImp<unsigned char>;
   }
   static void *newArray_SharedArrayImplEunsignedsPchargR(Long_t nElements, void *p) {
      return p ? new(p) ::SharedArrayImp<unsigned char>[nElements] : new ::SharedArrayImp<unsigned char>[nElements];
   }
   // Wrapper around operator delete
   static void delete_SharedArrayImplEunsignedsPchargR(void *p) {
      delete ((::SharedArrayImp<unsigned char>*)p);
   }
   static void deleteArray_SharedArrayImplEunsignedsPchargR(void *p) {
      delete [] ((::SharedArrayImp<unsigned char>*)p);
   }
   static void destruct_SharedArrayImplEunsignedsPchargR(void *p) {
      typedef ::SharedArrayImp<unsigned char> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArrayImp<unsigned char>

//______________________________________________________________________________
template <> void SharedArrayImp<unsigned short>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArrayImp<unsigned short>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArrayImp<unsigned short>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArrayImp<unsigned short>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArrayImplEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArrayImp<unsigned short>.
      typedef ::ROOTShadow::Shadow::SharedArrayImplEunsignedsPshortgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned short>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refcount", &sobj->refcount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arr", (void*)&sobj->arr);
      R__insp.InspectMember("vector<unsigned short>", (void*)&sobj->arr, "arr.", false);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArrayImp<unsigned short>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArrayImplEunsignedsPshortgR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SharedArrayImplEunsignedsPshortgR(void *p) {
      return  p ? new(p) ::SharedArrayImp<unsigned short> : new ::SharedArrayImp<unsigned short>;
   }
   static void *newArray_SharedArrayImplEunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? new(p) ::SharedArrayImp<unsigned short>[nElements] : new ::SharedArrayImp<unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_SharedArrayImplEunsignedsPshortgR(void *p) {
      delete ((::SharedArrayImp<unsigned short>*)p);
   }
   static void deleteArray_SharedArrayImplEunsignedsPshortgR(void *p) {
      delete [] ((::SharedArrayImp<unsigned short>*)p);
   }
   static void destruct_SharedArrayImplEunsignedsPshortgR(void *p) {
      typedef ::SharedArrayImp<unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArrayImp<unsigned short>

//______________________________________________________________________________
template <> void SharedArrayImp<unsigned int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArrayImp<unsigned int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArrayImp<unsigned int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArrayImp<unsigned int>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArrayImplEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArrayImp<unsigned int>.
      typedef ::ROOTShadow::Shadow::SharedArrayImplEunsignedsPintgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned int>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refcount", &sobj->refcount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arr", (void*)&sobj->arr);
      R__insp.InspectMember("vector<unsigned int>", (void*)&sobj->arr, "arr.", false);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArrayImp<unsigned int>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArrayImplEunsignedsPintgR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SharedArrayImplEunsignedsPintgR(void *p) {
      return  p ? new(p) ::SharedArrayImp<unsigned int> : new ::SharedArrayImp<unsigned int>;
   }
   static void *newArray_SharedArrayImplEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? new(p) ::SharedArrayImp<unsigned int>[nElements] : new ::SharedArrayImp<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_SharedArrayImplEunsignedsPintgR(void *p) {
      delete ((::SharedArrayImp<unsigned int>*)p);
   }
   static void deleteArray_SharedArrayImplEunsignedsPintgR(void *p) {
      delete [] ((::SharedArrayImp<unsigned int>*)p);
   }
   static void destruct_SharedArrayImplEunsignedsPintgR(void *p) {
      typedef ::SharedArrayImp<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArrayImp<unsigned int>

//______________________________________________________________________________
template <> void SharedArrayImp<unsigned long>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArrayImp<unsigned long>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArrayImp<unsigned long>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArrayImp<unsigned long>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArrayImplEunsignedsPlonggR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArrayImp<unsigned long>.
      typedef ::ROOTShadow::Shadow::SharedArrayImplEunsignedsPlonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned long>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refcount", &sobj->refcount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arr", (void*)&sobj->arr);
      R__insp.InspectMember("vector<unsigned long>", (void*)&sobj->arr, "arr.", false);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArrayImp<unsigned long>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArrayImplEunsignedsPlonggR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SharedArrayImplEunsignedsPlonggR(void *p) {
      return  p ? new(p) ::SharedArrayImp<unsigned long> : new ::SharedArrayImp<unsigned long>;
   }
   static void *newArray_SharedArrayImplEunsignedsPlonggR(Long_t nElements, void *p) {
      return p ? new(p) ::SharedArrayImp<unsigned long>[nElements] : new ::SharedArrayImp<unsigned long>[nElements];
   }
   // Wrapper around operator delete
   static void delete_SharedArrayImplEunsignedsPlonggR(void *p) {
      delete ((::SharedArrayImp<unsigned long>*)p);
   }
   static void deleteArray_SharedArrayImplEunsignedsPlonggR(void *p) {
      delete [] ((::SharedArrayImp<unsigned long>*)p);
   }
   static void destruct_SharedArrayImplEunsignedsPlonggR(void *p) {
      typedef ::SharedArrayImp<unsigned long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArrayImp<unsigned long>

//______________________________________________________________________________
template <> void SharedArrayImp<unsigned long long>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArrayImp<unsigned long long>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArrayImp<unsigned long long>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArrayImp<unsigned long long>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArrayImplEULong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArrayImp<unsigned long long>.
      typedef ::ROOTShadow::Shadow::SharedArrayImplEunsignedsPlongsPlonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<unsigned long long>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refcount", &sobj->refcount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arr", (void*)&sobj->arr);
      R__insp.InspectMember("vector<ULong64_t>", (void*)&sobj->arr, "arr.", false);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArrayImp<unsigned long long>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArrayImplEULong64_tgR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SharedArrayImplEULong64_tgR(void *p) {
      return  p ? new(p) ::SharedArrayImp<ULong64_t> : new ::SharedArrayImp<ULong64_t>;
   }
   static void *newArray_SharedArrayImplEULong64_tgR(Long_t nElements, void *p) {
      return p ? new(p) ::SharedArrayImp<ULong64_t>[nElements] : new ::SharedArrayImp<ULong64_t>[nElements];
   }
   // Wrapper around operator delete
   static void delete_SharedArrayImplEULong64_tgR(void *p) {
      delete ((::SharedArrayImp<ULong64_t>*)p);
   }
   static void deleteArray_SharedArrayImplEULong64_tgR(void *p) {
      delete [] ((::SharedArrayImp<ULong64_t>*)p);
   }
   static void destruct_SharedArrayImplEULong64_tgR(void *p) {
      typedef ::SharedArrayImp<ULong64_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArrayImp<ULong64_t>

//______________________________________________________________________________
template <> void SharedArrayImp<double>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArrayImp<double>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArrayImp<double>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArrayImp<double>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArrayImplEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArrayImp<double>.
      typedef ::ROOTShadow::Shadow::SharedArrayImplEdoublegR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArrayImp<double>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refcount", &sobj->refcount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arr", (void*)&sobj->arr);
      R__insp.InspectMember("vector<double>", (void*)&sobj->arr, "arr.", false);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArrayImp<double>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArrayImplEdoublegR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SharedArrayImplEdoublegR(void *p) {
      return  p ? new(p) ::SharedArrayImp<double> : new ::SharedArrayImp<double>;
   }
   static void *newArray_SharedArrayImplEdoublegR(Long_t nElements, void *p) {
      return p ? new(p) ::SharedArrayImp<double>[nElements] : new ::SharedArrayImp<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_SharedArrayImplEdoublegR(void *p) {
      delete ((::SharedArrayImp<double>*)p);
   }
   static void deleteArray_SharedArrayImplEdoublegR(void *p) {
      delete [] ((::SharedArrayImp<double>*)p);
   }
   static void destruct_SharedArrayImplEdoublegR(void *p) {
      typedef ::SharedArrayImp<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArrayImp<double>

//______________________________________________________________________________
template <> void SharedArray<char>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArray<char>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArray<char>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArray<char>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArraylEchargR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArray<char>.
      typedef ::ROOTShadow::Shadow::SharedArraylEchargR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<char>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pimpl", &sobj->pimpl);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArray<char>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArraylEchargR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_SharedArraylEchargR(void *p) {
      delete ((::SharedArray<char>*)p);
   }
   static void deleteArray_SharedArraylEchargR(void *p) {
      delete [] ((::SharedArray<char>*)p);
   }
   static void destruct_SharedArraylEchargR(void *p) {
      typedef ::SharedArray<char> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArray<char>

//______________________________________________________________________________
template <> void SharedArray<short>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArray<short>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArray<short>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArray<short>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArraylEshortgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArray<short>.
      typedef ::ROOTShadow::Shadow::SharedArraylEshortgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<short>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pimpl", &sobj->pimpl);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArray<short>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArraylEshortgR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_SharedArraylEshortgR(void *p) {
      delete ((::SharedArray<short>*)p);
   }
   static void deleteArray_SharedArraylEshortgR(void *p) {
      delete [] ((::SharedArray<short>*)p);
   }
   static void destruct_SharedArraylEshortgR(void *p) {
      typedef ::SharedArray<short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArray<short>

//______________________________________________________________________________
template <> void SharedArray<int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArray<int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArray<int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArray<int>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArraylEintgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArray<int>.
      typedef ::ROOTShadow::Shadow::SharedArraylEintgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<int>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pimpl", &sobj->pimpl);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArray<int>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArraylEintgR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_SharedArraylEintgR(void *p) {
      delete ((::SharedArray<int>*)p);
   }
   static void deleteArray_SharedArraylEintgR(void *p) {
      delete [] ((::SharedArray<int>*)p);
   }
   static void destruct_SharedArraylEintgR(void *p) {
      typedef ::SharedArray<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArray<int>

//______________________________________________________________________________
template <> void SharedArray<long>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArray<long>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArray<long>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArray<long>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArraylElonggR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArray<long>.
      typedef ::ROOTShadow::Shadow::SharedArraylElonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<long>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pimpl", &sobj->pimpl);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArray<long>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArraylElonggR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_SharedArraylElonggR(void *p) {
      delete ((::SharedArray<long>*)p);
   }
   static void deleteArray_SharedArraylElonggR(void *p) {
      delete [] ((::SharedArray<long>*)p);
   }
   static void destruct_SharedArraylElonggR(void *p) {
      typedef ::SharedArray<long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArray<long>

//______________________________________________________________________________
template <> void SharedArray<long long>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArray<long long>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArray<long long>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArray<long long>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArraylELong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArray<long long>.
      typedef ::ROOTShadow::Shadow::SharedArraylElongsPlonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<long long>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pimpl", &sobj->pimpl);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArray<long long>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArraylELong64_tgR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_SharedArraylELong64_tgR(void *p) {
      delete ((::SharedArray<Long64_t>*)p);
   }
   static void deleteArray_SharedArraylELong64_tgR(void *p) {
      delete [] ((::SharedArray<Long64_t>*)p);
   }
   static void destruct_SharedArraylELong64_tgR(void *p) {
      typedef ::SharedArray<Long64_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArray<Long64_t>

//______________________________________________________________________________
template <> void SharedArray<float>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArray<float>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArray<float>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArray<float>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArraylEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArray<float>.
      typedef ::ROOTShadow::Shadow::SharedArraylEfloatgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<float>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pimpl", &sobj->pimpl);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArray<float>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArraylEfloatgR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_SharedArraylEfloatgR(void *p) {
      delete ((::SharedArray<float>*)p);
   }
   static void deleteArray_SharedArraylEfloatgR(void *p) {
      delete [] ((::SharedArray<float>*)p);
   }
   static void destruct_SharedArraylEfloatgR(void *p) {
      typedef ::SharedArray<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArray<float>

//______________________________________________________________________________
template <> void SharedArray<unsigned char>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArray<unsigned char>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArray<unsigned char>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArray<unsigned char>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArraylEunsignedsPchargR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArray<unsigned char>.
      typedef ::ROOTShadow::Shadow::SharedArraylEunsignedsPchargR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned char>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pimpl", &sobj->pimpl);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArray<unsigned char>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArraylEunsignedsPchargR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_SharedArraylEunsignedsPchargR(void *p) {
      delete ((::SharedArray<unsigned char>*)p);
   }
   static void deleteArray_SharedArraylEunsignedsPchargR(void *p) {
      delete [] ((::SharedArray<unsigned char>*)p);
   }
   static void destruct_SharedArraylEunsignedsPchargR(void *p) {
      typedef ::SharedArray<unsigned char> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArray<unsigned char>

//______________________________________________________________________________
template <> void SharedArray<unsigned short>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArray<unsigned short>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArray<unsigned short>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArray<unsigned short>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArraylEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArray<unsigned short>.
      typedef ::ROOTShadow::Shadow::SharedArraylEunsignedsPshortgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned short>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pimpl", &sobj->pimpl);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArray<unsigned short>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArraylEunsignedsPshortgR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_SharedArraylEunsignedsPshortgR(void *p) {
      delete ((::SharedArray<unsigned short>*)p);
   }
   static void deleteArray_SharedArraylEunsignedsPshortgR(void *p) {
      delete [] ((::SharedArray<unsigned short>*)p);
   }
   static void destruct_SharedArraylEunsignedsPshortgR(void *p) {
      typedef ::SharedArray<unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArray<unsigned short>

//______________________________________________________________________________
template <> void SharedArray<unsigned int>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArray<unsigned int>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArray<unsigned int>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArray<unsigned int>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArraylEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArray<unsigned int>.
      typedef ::ROOTShadow::Shadow::SharedArraylEunsignedsPintgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned int>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pimpl", &sobj->pimpl);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArray<unsigned int>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArraylEunsignedsPintgR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_SharedArraylEunsignedsPintgR(void *p) {
      delete ((::SharedArray<unsigned int>*)p);
   }
   static void deleteArray_SharedArraylEunsignedsPintgR(void *p) {
      delete [] ((::SharedArray<unsigned int>*)p);
   }
   static void destruct_SharedArraylEunsignedsPintgR(void *p) {
      typedef ::SharedArray<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArray<unsigned int>

//______________________________________________________________________________
template <> void SharedArray<unsigned long>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArray<unsigned long>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArray<unsigned long>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArray<unsigned long>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArraylEunsignedsPlonggR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArray<unsigned long>.
      typedef ::ROOTShadow::Shadow::SharedArraylEunsignedsPlonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned long>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pimpl", &sobj->pimpl);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArray<unsigned long>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArraylEunsignedsPlonggR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_SharedArraylEunsignedsPlonggR(void *p) {
      delete ((::SharedArray<unsigned long>*)p);
   }
   static void deleteArray_SharedArraylEunsignedsPlonggR(void *p) {
      delete [] ((::SharedArray<unsigned long>*)p);
   }
   static void destruct_SharedArraylEunsignedsPlonggR(void *p) {
      typedef ::SharedArray<unsigned long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArray<unsigned long>

//______________________________________________________________________________
template <> void SharedArray<unsigned long long>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArray<unsigned long long>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArray<unsigned long long>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArray<unsigned long long>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArraylEULong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArray<unsigned long long>.
      typedef ::ROOTShadow::Shadow::SharedArraylEunsignedsPlongsPlonggR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<unsigned long long>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pimpl", &sobj->pimpl);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArray<unsigned long long>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArraylEULong64_tgR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_SharedArraylEULong64_tgR(void *p) {
      delete ((::SharedArray<ULong64_t>*)p);
   }
   static void deleteArray_SharedArraylEULong64_tgR(void *p) {
      delete [] ((::SharedArray<ULong64_t>*)p);
   }
   static void destruct_SharedArraylEULong64_tgR(void *p) {
      typedef ::SharedArray<ULong64_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArray<ULong64_t>

//______________________________________________________________________________
template <> void SharedArray<double>::Streamer(TBuffer &R__b)
{
   // Stream an object of class SharedArray<double>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(SharedArray<double>::Class(),this);
   } else {
      R__b.WriteClassBuffer(SharedArray<double>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void SharedArraylEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SharedArray<double>.
      typedef ::ROOTShadow::Shadow::SharedArraylEdoublegR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SharedArray<double>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pimpl", &sobj->pimpl);
      sobj->TObject::ShowMembers(R__insp);
   }

}

template <> void SharedArray<double>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::SharedArraylEdoublegR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_SharedArraylEdoublegR(void *p) {
      delete ((::SharedArray<double>*)p);
   }
   static void deleteArray_SharedArraylEdoublegR(void *p) {
      delete [] ((::SharedArray<double>*)p);
   }
   static void destruct_SharedArraylEdoublegR(void *p) {
      typedef ::SharedArray<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SharedArray<double>

//______________________________________________________________________________
template <> void RooBinned2DBicubicBase<RooAbsReal>::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooBinned2DBicubicBase<RooAbsReal>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RooBinned2DBicubicBase<RooAbsReal>::Class(),this);
   } else {
      R__b.WriteClassBuffer(RooBinned2DBicubicBase<RooAbsReal>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void RooBinned2DBicubicBaselERooAbsRealgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class RooBinned2DBicubicBase<RooAbsReal>.
      typedef ::ROOTShadow::Shadow::RooBinned2DBicubicBaselERooAbsRealgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::RooBinned2DBicubicBase<RooAbsReal>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &sobj->x);
      R__insp.InspectMember(sobj->x, "x.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y", &sobj->y);
      R__insp.InspectMember(sobj->y, "y.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nBinsX", &sobj->nBinsX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nBinsY", &sobj->nBinsY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binSizeX", &sobj->binSizeX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binSizeY", &sobj->binSizeY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xmin", &sobj->xmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xmax", &sobj->xmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ymin", &sobj->ymin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ymax", &sobj->ymax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coeffs", &sobj->coeffs);
      R__insp.InspectMember(sobj->coeffs, "coeffs.");
      sobj->RooAbsReal::ShowMembers(R__insp);
   }

}

template <> void RooBinned2DBicubicBase<RooAbsReal>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::RooBinned2DBicubicBaselERooAbsRealgR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RooBinned2DBicubicBaselERooAbsRealgR(void *p) {
      return  p ? new(p) ::RooBinned2DBicubicBase<RooAbsReal> : new ::RooBinned2DBicubicBase<RooAbsReal>;
   }
   static void *newArray_RooBinned2DBicubicBaselERooAbsRealgR(Long_t nElements, void *p) {
      return p ? new(p) ::RooBinned2DBicubicBase<RooAbsReal>[nElements] : new ::RooBinned2DBicubicBase<RooAbsReal>[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooBinned2DBicubicBaselERooAbsRealgR(void *p) {
      delete ((::RooBinned2DBicubicBase<RooAbsReal>*)p);
   }
   static void deleteArray_RooBinned2DBicubicBaselERooAbsRealgR(void *p) {
      delete [] ((::RooBinned2DBicubicBase<RooAbsReal>*)p);
   }
   static void destruct_RooBinned2DBicubicBaselERooAbsRealgR(void *p) {
      typedef ::RooBinned2DBicubicBase<RooAbsReal> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RooBinned2DBicubicBase<RooAbsReal>

//______________________________________________________________________________
template <> void RooBinned2DBicubicBase<RooAbsPdf>::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooBinned2DBicubicBase<RooAbsPdf>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RooBinned2DBicubicBase<RooAbsPdf>::Class(),this);
   } else {
      R__b.WriteClassBuffer(RooBinned2DBicubicBase<RooAbsPdf>::Class(),this);
   }
}

//______________________________________________________________________________
namespace ROOTDict {
   void RooBinned2DBicubicBaselERooAbsPdfgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class RooBinned2DBicubicBase<RooAbsPdf>.
      typedef ::ROOTShadow::Shadow::RooBinned2DBicubicBaselERooAbsPdfgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::RooBinned2DBicubicBase<RooAbsPdf>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &sobj->x);
      R__insp.InspectMember(sobj->x, "x.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y", &sobj->y);
      R__insp.InspectMember(sobj->y, "y.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nBinsX", &sobj->nBinsX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nBinsY", &sobj->nBinsY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binSizeX", &sobj->binSizeX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binSizeY", &sobj->binSizeY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xmin", &sobj->xmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xmax", &sobj->xmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ymin", &sobj->ymin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ymax", &sobj->ymax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coeffs", &sobj->coeffs);
      R__insp.InspectMember(sobj->coeffs, "coeffs.");
      sobj->RooAbsPdf::ShowMembers(R__insp);
   }

}

template <> void RooBinned2DBicubicBase<RooAbsPdf>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOTDict::RooBinned2DBicubicBaselERooAbsPdfgR_ShowMembers(this, R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RooBinned2DBicubicBaselERooAbsPdfgR(void *p) {
      return  p ? new(p) ::RooBinned2DBicubicBase<RooAbsPdf> : new ::RooBinned2DBicubicBase<RooAbsPdf>;
   }
   static void *newArray_RooBinned2DBicubicBaselERooAbsPdfgR(Long_t nElements, void *p) {
      return p ? new(p) ::RooBinned2DBicubicBase<RooAbsPdf>[nElements] : new ::RooBinned2DBicubicBase<RooAbsPdf>[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooBinned2DBicubicBaselERooAbsPdfgR(void *p) {
      delete ((::RooBinned2DBicubicBase<RooAbsPdf>*)p);
   }
   static void deleteArray_RooBinned2DBicubicBaselERooAbsPdfgR(void *p) {
      delete [] ((::RooBinned2DBicubicBase<RooAbsPdf>*)p);
   }
   static void destruct_RooBinned2DBicubicBaselERooAbsPdfgR(void *p) {
      typedef ::RooBinned2DBicubicBase<RooAbsPdf> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RooBinned2DBicubicBase<RooAbsPdf>

//______________________________________________________________________________
void RooHistPdfAngleVar::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooHistPdfAngleVar.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RooHistPdfAngleVar::Class(),this);
   } else {
      R__b.WriteClassBuffer(RooHistPdfAngleVar::Class(),this);
   }
}

//______________________________________________________________________________
void RooHistPdfAngleVar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooHistPdfAngleVar.
      TClass *R__cl = ::RooHistPdfAngleVar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xobs", &xobs);
      R__insp.InspectMember(xobs, "xobs.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xth", &xth);
      R__insp.InspectMember(xth, "xth.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xshift", &xshift);
      R__insp.InspectMember(xshift, "xshift.");
      RooAbsReal::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RooHistPdfAngleVar(void *p) {
      return  p ? new(p) ::RooHistPdfAngleVar : new ::RooHistPdfAngleVar;
   }
   static void *newArray_RooHistPdfAngleVar(Long_t nElements, void *p) {
      return p ? new(p) ::RooHistPdfAngleVar[nElements] : new ::RooHistPdfAngleVar[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooHistPdfAngleVar(void *p) {
      delete ((::RooHistPdfAngleVar*)p);
   }
   static void deleteArray_RooHistPdfAngleVar(void *p) {
      delete [] ((::RooHistPdfAngleVar*)p);
   }
   static void destruct_RooHistPdfAngleVar(void *p) {
      typedef ::RooHistPdfAngleVar current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RooHistPdfAngleVar

//______________________________________________________________________________
void RooHistPdfVar::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooHistPdfVar.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RooHistPdfVar::Class(),this);
   } else {
      R__b.WriteClassBuffer(RooHistPdfVar::Class(),this);
   }
}

//______________________________________________________________________________
void RooHistPdfVar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooHistPdfVar.
      TClass *R__cl = ::RooHistPdfVar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xobs", &xobs);
      R__insp.InspectMember(xobs, "xobs.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xth", &xth);
      R__insp.InspectMember(xth, "xth.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xshift", &xshift);
      R__insp.InspectMember(xshift, "xshift.");
      RooAbsReal::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RooHistPdfVar(void *p) {
      return  p ? new(p) ::RooHistPdfVar : new ::RooHistPdfVar;
   }
   static void *newArray_RooHistPdfVar(Long_t nElements, void *p) {
      return p ? new(p) ::RooHistPdfVar[nElements] : new ::RooHistPdfVar[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooHistPdfVar(void *p) {
      delete ((::RooHistPdfVar*)p);
   }
   static void deleteArray_RooHistPdfVar(void *p) {
      delete [] ((::RooHistPdfVar*)p);
   }
   static void destruct_RooHistPdfVar(void *p) {
      typedef ::RooHistPdfVar current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RooHistPdfVar

//______________________________________________________________________________
void RooSlimFitResult::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooSlimFitResult.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RooSlimFitResult::Class(),this);
   } else {
      R__b.WriteClassBuffer(RooSlimFitResult::Class(),this);
   }
}

//______________________________________________________________________________
void RooSlimFitResult::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooSlimFitResult.
      TClass *R__cl = ::RooSlimFitResult::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_parsNames", (void*)&_parsNames);
      R__insp.InspectMember("vector<string>", (void*)&_parsNames, "_parsNames.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_parsFloatId", (void*)&_parsFloatId);
      R__insp.InspectMember("vector<int>", (void*)&_parsFloatId, "_parsFloatId.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_parsVal", (void*)&_parsVal);
      R__insp.InspectMember("vector<float>", (void*)&_parsVal, "_parsVal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_parsErr", (void*)&_parsErr);
      R__insp.InspectMember("vector<float>", (void*)&_parsErr, "_parsErr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_parsAngle", (void*)&_parsAngle);
      R__insp.InspectMember("vector<bool>", (void*)&_parsAngle, "_parsAngle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_parsConst", (void*)&_parsConst);
      R__insp.InspectMember("vector<bool>", (void*)&_parsConst, "_parsConst.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_edm", &_edm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_minNLL", &_minNLL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_covQual", &_covQual);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_status", &_status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_correlationMatrix", &_correlationMatrix);
      R__insp.InspectMember(_correlationMatrix, "_correlationMatrix.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_constParsDummy", &_constParsDummy);
      R__insp.InspectMember(_constParsDummy, "_constParsDummy.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_floatParsFinalDummy", &_floatParsFinalDummy);
      R__insp.InspectMember(_floatParsFinalDummy, "_floatParsFinalDummy.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_isConfirmed", &_isConfirmed);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RooSlimFitResult(void *p) {
      return  p ? new(p) ::RooSlimFitResult : new ::RooSlimFitResult;
   }
   static void *newArray_RooSlimFitResult(Long_t nElements, void *p) {
      return p ? new(p) ::RooSlimFitResult[nElements] : new ::RooSlimFitResult[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooSlimFitResult(void *p) {
      delete ((::RooSlimFitResult*)p);
   }
   static void deleteArray_RooSlimFitResult(void *p) {
      delete [] ((::RooSlimFitResult*)p);
   }
   static void destruct_RooSlimFitResult(void *p) {
      typedef ::RooSlimFitResult current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RooSlimFitResult

//______________________________________________________________________________
void RooPoly3Var::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooPoly3Var.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RooPoly3Var::Class(),this);
   } else {
      R__b.WriteClassBuffer(RooPoly3Var::Class(),this);
   }
}

//______________________________________________________________________________
void RooPoly3Var::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooPoly3Var.
      TClass *R__cl = ::RooPoly3Var::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xobs", &xobs);
      R__insp.InspectMember(xobs, "xobs.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p0", &p0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p1", &p1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p2", &p2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p3", &p3);
      RooAbsReal::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RooPoly3Var(void *p) {
      return  p ? new(p) ::RooPoly3Var : new ::RooPoly3Var;
   }
   static void *newArray_RooPoly3Var(Long_t nElements, void *p) {
      return p ? new(p) ::RooPoly3Var[nElements] : new ::RooPoly3Var[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooPoly3Var(void *p) {
      delete ((::RooPoly3Var*)p);
   }
   static void deleteArray_RooPoly3Var(void *p) {
      delete [] ((::RooPoly3Var*)p);
   }
   static void destruct_RooPoly3Var(void *p) {
      typedef ::RooPoly3Var current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RooPoly3Var

//______________________________________________________________________________
void RooPoly4Var::Streamer(TBuffer &R__b)
{
   // Stream an object of class RooPoly4Var.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RooPoly4Var::Class(),this);
   } else {
      R__b.WriteClassBuffer(RooPoly4Var::Class(),this);
   }
}

//______________________________________________________________________________
void RooPoly4Var::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RooPoly4Var.
      TClass *R__cl = ::RooPoly4Var::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xobs", &xobs);
      R__insp.InspectMember(xobs, "xobs.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p0", &p0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p1", &p1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p2", &p2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p3", &p3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p4", &p4);
      RooAbsReal::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RooPoly4Var(void *p) {
      return  p ? new(p) ::RooPoly4Var : new ::RooPoly4Var;
   }
   static void *newArray_RooPoly4Var(Long_t nElements, void *p) {
      return p ? new(p) ::RooPoly4Var[nElements] : new ::RooPoly4Var[nElements];
   }
   // Wrapper around operator delete
   static void delete_RooPoly4Var(void *p) {
      delete ((::RooPoly4Var*)p);
   }
   static void deleteArray_RooPoly4Var(void *p) {
      delete [] ((::RooPoly4Var*)p);
   }
   static void destruct_RooPoly4Var(void *p) {
      typedef ::RooPoly4Var current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RooPoly4Var

namespace ROOTDict {
   void vectorlEboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEboolgR_Dictionary();
   static void *new_vectorlEboolgR(void *p = 0);
   static void *newArray_vectorlEboolgR(Long_t size, void *p);
   static void delete_vectorlEboolgR(void *p);
   static void deleteArray_vectorlEboolgR(void *p);
   static void destruct_vectorlEboolgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<bool>*)
   {
      vector<bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<bool>", -2, "vectorbool.dll", 0,
                  typeid(vector<bool>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEboolgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<bool>) );
      instance.SetNew(&new_vectorlEboolgR);
      instance.SetNewArray(&newArray_vectorlEboolgR);
      instance.SetDelete(&delete_vectorlEboolgR);
      instance.SetDeleteArray(&deleteArray_vectorlEboolgR);
      instance.SetDestructor(&destruct_vectorlEboolgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEboolgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<bool>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool> : new vector<bool>;
   }
   static void *newArray_vectorlEboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<bool>[nElements] : new vector<bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEboolgR(void *p) {
      delete ((vector<bool>*)p);
   }
   static void deleteArray_vectorlEboolgR(void *p) {
      delete [] ((vector<bool>*)p);
   }
   static void destruct_vectorlEboolgR(void *p) {
      typedef vector<bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<bool>

namespace ROOTDict {
   void vectorlEchargR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEchargR_Dictionary();
   static void *new_vectorlEchargR(void *p = 0);
   static void *newArray_vectorlEchargR(Long_t size, void *p);
   static void delete_vectorlEchargR(void *p);
   static void deleteArray_vectorlEchargR(void *p);
   static void destruct_vectorlEchargR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<char>*)
   {
      vector<char> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<char>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<char>", -2, "vector.dll", 0,
                  typeid(vector<char>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEchargR_Dictionary, isa_proxy, 0,
                  sizeof(vector<char>) );
      instance.SetNew(&new_vectorlEchargR);
      instance.SetNewArray(&newArray_vectorlEchargR);
      instance.SetDelete(&delete_vectorlEchargR);
      instance.SetDeleteArray(&deleteArray_vectorlEchargR);
      instance.SetDestructor(&destruct_vectorlEchargR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<char> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<char>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEchargR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<char>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEchargR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<char> : new vector<char>;
   }
   static void *newArray_vectorlEchargR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<char>[nElements] : new vector<char>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEchargR(void *p) {
      delete ((vector<char>*)p);
   }
   static void deleteArray_vectorlEchargR(void *p) {
      delete [] ((vector<char>*)p);
   }
   static void destruct_vectorlEchargR(void *p) {
      typedef vector<char> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<char>

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<float>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/usr/local/Cellar/root/5.34.34_1/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

namespace ROOTDict {
   void vectorlELong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlELong64_tgR_Dictionary();
   static void *new_vectorlELong64_tgR(void *p = 0);
   static void *newArray_vectorlELong64_tgR(Long_t size, void *p);
   static void delete_vectorlELong64_tgR(void *p);
   static void deleteArray_vectorlELong64_tgR(void *p);
   static void destruct_vectorlELong64_tgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<Long64_t>*)
   {
      vector<Long64_t> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Long64_t>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Long64_t>", -2, "vector.dll", 0,
                  typeid(vector<Long64_t>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlELong64_tgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Long64_t>) );
      instance.SetNew(&new_vectorlELong64_tgR);
      instance.SetNewArray(&newArray_vectorlELong64_tgR);
      instance.SetDelete(&delete_vectorlELong64_tgR);
      instance.SetDeleteArray(&deleteArray_vectorlELong64_tgR);
      instance.SetDestructor(&destruct_vectorlELong64_tgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<Long64_t> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Long64_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlELong64_tgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<Long64_t>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlELong64_tgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Long64_t> : new vector<Long64_t>;
   }
   static void *newArray_vectorlELong64_tgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Long64_t>[nElements] : new vector<Long64_t>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlELong64_tgR(void *p) {
      delete ((vector<Long64_t>*)p);
   }
   static void deleteArray_vectorlELong64_tgR(void *p) {
      delete [] ((vector<Long64_t>*)p);
   }
   static void destruct_vectorlELong64_tgR(void *p) {
      typedef vector<Long64_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<Long64_t>

namespace ROOTDict {
   void vectorlElonggR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlElonggR_Dictionary();
   static void *new_vectorlElonggR(void *p = 0);
   static void *newArray_vectorlElonggR(Long_t size, void *p);
   static void delete_vectorlElonggR(void *p);
   static void deleteArray_vectorlElonggR(void *p);
   static void destruct_vectorlElonggR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<long>*)
   {
      vector<long> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<long>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<long>", -2, "vector.dll", 0,
                  typeid(vector<long>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlElonggR_Dictionary, isa_proxy, 0,
                  sizeof(vector<long>) );
      instance.SetNew(&new_vectorlElonggR);
      instance.SetNewArray(&newArray_vectorlElonggR);
      instance.SetDelete(&delete_vectorlElonggR);
      instance.SetDeleteArray(&deleteArray_vectorlElonggR);
      instance.SetDestructor(&destruct_vectorlElonggR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<long> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlElonggR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<long>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlElonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<long> : new vector<long>;
   }
   static void *newArray_vectorlElonggR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<long>[nElements] : new vector<long>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlElonggR(void *p) {
      delete ((vector<long>*)p);
   }
   static void deleteArray_vectorlElonggR(void *p) {
      delete [] ((vector<long>*)p);
   }
   static void destruct_vectorlElonggR(void *p) {
      typedef vector<long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<long>

namespace ROOTDict {
   void vectorlEshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEshortgR_Dictionary();
   static void *new_vectorlEshortgR(void *p = 0);
   static void *newArray_vectorlEshortgR(Long_t size, void *p);
   static void delete_vectorlEshortgR(void *p);
   static void deleteArray_vectorlEshortgR(void *p);
   static void destruct_vectorlEshortgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<short>*)
   {
      vector<short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<short>", -2, "vector.dll", 0,
                  typeid(vector<short>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<short>) );
      instance.SetNew(&new_vectorlEshortgR);
      instance.SetNewArray(&newArray_vectorlEshortgR);
      instance.SetDelete(&delete_vectorlEshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEshortgR);
      instance.SetDestructor(&destruct_vectorlEshortgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEshortgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<short>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short> : new vector<short>;
   }
   static void *newArray_vectorlEshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short>[nElements] : new vector<short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEshortgR(void *p) {
      delete ((vector<short>*)p);
   }
   static void deleteArray_vectorlEshortgR(void *p) {
      delete [] ((vector<short>*)p);
   }
   static void destruct_vectorlEshortgR(void *p) {
      typedef vector<short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<short>

namespace ROOTDict {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "/usr/local/Cellar/root/5.34.34_1/lib/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<string>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<string>

namespace ROOTDict {
   void vectorlEunsignedsPchargR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPchargR_Dictionary();
   static void *new_vectorlEunsignedsPchargR(void *p = 0);
   static void *newArray_vectorlEunsignedsPchargR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPchargR(void *p);
   static void deleteArray_vectorlEunsignedsPchargR(void *p);
   static void destruct_vectorlEunsignedsPchargR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned char>*)
   {
      vector<unsigned char> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned char>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned char>", -2, "vector.dll", 0,
                  typeid(vector<unsigned char>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPchargR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned char>) );
      instance.SetNew(&new_vectorlEunsignedsPchargR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPchargR);
      instance.SetDelete(&delete_vectorlEunsignedsPchargR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPchargR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPchargR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<unsigned char> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned char>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPchargR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<unsigned char>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPchargR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned char> : new vector<unsigned char>;
   }
   static void *newArray_vectorlEunsignedsPchargR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned char>[nElements] : new vector<unsigned char>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPchargR(void *p) {
      delete ((vector<unsigned char>*)p);
   }
   static void deleteArray_vectorlEunsignedsPchargR(void *p) {
      delete [] ((vector<unsigned char>*)p);
   }
   static void destruct_vectorlEunsignedsPchargR(void *p) {
      typedef vector<unsigned char> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<unsigned char>

namespace ROOTDict {
   void vectorlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPintgR_Dictionary();
   static void *new_vectorlEunsignedsPintgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPintgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPintgR(void *p);
   static void deleteArray_vectorlEunsignedsPintgR(void *p);
   static void destruct_vectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned int>*)
   {
      vector<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned int>", -2, "vector.dll", 0,
                  typeid(vector<unsigned int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned int>) );
      instance.SetNew(&new_vectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPintgR);
      instance.SetDelete(&delete_vectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int> : new vector<unsigned int>;
   }
   static void *newArray_vectorlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int>[nElements] : new vector<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPintgR(void *p) {
      delete ((vector<unsigned int>*)p);
   }
   static void deleteArray_vectorlEunsignedsPintgR(void *p) {
      delete [] ((vector<unsigned int>*)p);
   }
   static void destruct_vectorlEunsignedsPintgR(void *p) {
      typedef vector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<unsigned int>

namespace ROOTDict {
   void vectorlEULong64_tgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEULong64_tgR_Dictionary();
   static void *new_vectorlEULong64_tgR(void *p = 0);
   static void *newArray_vectorlEULong64_tgR(Long_t size, void *p);
   static void delete_vectorlEULong64_tgR(void *p);
   static void deleteArray_vectorlEULong64_tgR(void *p);
   static void destruct_vectorlEULong64_tgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<ULong64_t>*)
   {
      vector<ULong64_t> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<ULong64_t>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<ULong64_t>", -2, "vector.dll", 0,
                  typeid(vector<ULong64_t>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEULong64_tgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<ULong64_t>) );
      instance.SetNew(&new_vectorlEULong64_tgR);
      instance.SetNewArray(&newArray_vectorlEULong64_tgR);
      instance.SetDelete(&delete_vectorlEULong64_tgR);
      instance.SetDeleteArray(&deleteArray_vectorlEULong64_tgR);
      instance.SetDestructor(&destruct_vectorlEULong64_tgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<ULong64_t> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<ULong64_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEULong64_tgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<ULong64_t>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEULong64_tgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ULong64_t> : new vector<ULong64_t>;
   }
   static void *newArray_vectorlEULong64_tgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ULong64_t>[nElements] : new vector<ULong64_t>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEULong64_tgR(void *p) {
      delete ((vector<ULong64_t>*)p);
   }
   static void deleteArray_vectorlEULong64_tgR(void *p) {
      delete [] ((vector<ULong64_t>*)p);
   }
   static void destruct_vectorlEULong64_tgR(void *p) {
      typedef vector<ULong64_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<ULong64_t>

namespace ROOTDict {
   void vectorlEunsignedsPlonggR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPlonggR_Dictionary();
   static void *new_vectorlEunsignedsPlonggR(void *p = 0);
   static void *newArray_vectorlEunsignedsPlonggR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPlonggR(void *p);
   static void deleteArray_vectorlEunsignedsPlonggR(void *p);
   static void destruct_vectorlEunsignedsPlonggR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned long>*)
   {
      vector<unsigned long> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned long>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned long>", -2, "vector.dll", 0,
                  typeid(vector<unsigned long>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPlonggR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned long>) );
      instance.SetNew(&new_vectorlEunsignedsPlonggR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPlonggR);
      instance.SetDelete(&delete_vectorlEunsignedsPlonggR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPlonggR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPlonggR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<unsigned long> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPlonggR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<unsigned long>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPlonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned long> : new vector<unsigned long>;
   }
   static void *newArray_vectorlEunsignedsPlonggR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned long>[nElements] : new vector<unsigned long>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPlonggR(void *p) {
      delete ((vector<unsigned long>*)p);
   }
   static void deleteArray_vectorlEunsignedsPlonggR(void *p) {
      delete [] ((vector<unsigned long>*)p);
   }
   static void destruct_vectorlEunsignedsPlonggR(void *p) {
      typedef vector<unsigned long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<unsigned long>

namespace ROOTDict {
   void vectorlEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPshortgR_Dictionary();
   static void *new_vectorlEunsignedsPshortgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPshortgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPshortgR(void *p);
   static void deleteArray_vectorlEunsignedsPshortgR(void *p);
   static void destruct_vectorlEunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned short>*)
   {
      vector<unsigned short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned short>", -2, "vector.dll", 0,
                  typeid(vector<unsigned short>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned short>) );
      instance.SetNew(&new_vectorlEunsignedsPshortgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPshortgR);
      instance.SetDelete(&delete_vectorlEunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPshortgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPshortgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<unsigned short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPshortgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<unsigned short>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short> : new vector<unsigned short>;
   }
   static void *newArray_vectorlEunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short>[nElements] : new vector<unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPshortgR(void *p) {
      delete ((vector<unsigned short>*)p);
   }
   static void deleteArray_vectorlEunsignedsPshortgR(void *p) {
      delete [] ((vector<unsigned short>*)p);
   }
   static void destruct_vectorlEunsignedsPshortgR(void *p) {
      typedef vector<unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<unsigned short>

/********************************************************
* gammacombo/gammacomboCoreDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablegammacomboCoreDict();

extern "C" void G__set_cpp_environmentgammacomboCoreDict() {
  G__cpp_reset_tagtablegammacomboCoreDict();
}
#include <new>
extern "C" int G__cpp_dllrevgammacomboCoreDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* RooBinned2DBicubicBase<RooAbsReal> */
static int G__gammacomboCoreDict_841_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooBinned2DBicubicBase<RooAbsReal>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooBinned2DBicubicBase<RooAbsReal>[n];
     } else {
       p = new((void*) gvp) RooBinned2DBicubicBase<RooAbsReal>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooBinned2DBicubicBase<RooAbsReal>;
     } else {
       p = new((void*) gvp) RooBinned2DBicubicBase<RooAbsReal>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_841_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooBinned2DBicubicBase<RooAbsReal>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooBinned2DBicubicBase<RooAbsReal>(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(TH2*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref);
   } else {
     p = new((void*) gvp) RooBinned2DBicubicBase<RooAbsReal>(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(TH2*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_841_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooBinned2DBicubicBase<RooAbsReal>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooBinned2DBicubicBase<RooAbsReal>(*(RooBinned2DBicubicBase<RooAbsReal>*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooBinned2DBicubicBase<RooAbsReal>(*(RooBinned2DBicubicBase<RooAbsReal>*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooBinned2DBicubicBase<RooAbsReal>(*(RooBinned2DBicubicBase<RooAbsReal>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooBinned2DBicubicBase<RooAbsReal>(*(RooBinned2DBicubicBase<RooAbsReal>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_841_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RooBinned2DBicubicBase<RooAbsReal>& obj = ((RooBinned2DBicubicBase<RooAbsReal>*) G__getstructoffset())->operator=(*(RooBinned2DBicubicBase<RooAbsReal>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_841_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooBinned2DBicubicBase<RooAbsReal>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_841_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooBinned2DBicubicBase<RooAbsReal>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_841_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooBinned2DBicubicBase<RooAbsReal>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_841_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooBinned2DBicubicBase<RooAbsReal>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_841_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooBinned2DBicubicBase<RooAbsReal>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_841_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooBinned2DBicubicBase<RooAbsReal>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_841_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooBinned2DBicubicBase<RooAbsReal>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_841_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooBinned2DBicubicBase<RooAbsReal>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_841_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooBinned2DBicubicBase<RooAbsReal>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooBinned2DBicubicBase<RooAbsReal> G__TRooBinned2DBicubicBaselERooAbsRealgR;
static int G__gammacomboCoreDict_841_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooBinned2DBicubicBase<RooAbsReal>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooBinned2DBicubicBase<RooAbsReal>*) (soff+(sizeof(RooBinned2DBicubicBase<RooAbsReal>)*i)))->~G__TRooBinned2DBicubicBaselERooAbsRealgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooBinned2DBicubicBase<RooAbsReal>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooBinned2DBicubicBase<RooAbsReal>*) (soff))->~G__TRooBinned2DBicubicBaselERooAbsRealgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArray<double> */
static int G__gammacomboCoreDict_844_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<double>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArray<double>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_844_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<double>(*(SharedArray<double>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArray<double>(*(SharedArray<double>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_844_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<double>& obj = ((SharedArray<double>*) G__getstructoffset())->operator=(*(SharedArray<double>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_844_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArray<double>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_844_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<double>::RWProxy* pobj;
         const SharedArray<double>::RWProxy xobj = ((const SharedArray<double>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<double>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_844_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         SharedArray<double>::RWProxy* pobj;
         SharedArray<double>::RWProxy xobj = ((SharedArray<double>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<double>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_844_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArray<double>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_844_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<double>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_844_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArray<double>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_844_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArray<double>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_844_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArray<double>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_844_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<double>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_844_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<double>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_844_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<double>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_844_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<double>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArray<double> G__TSharedArraylEdoublegR;
static int G__gammacomboCoreDict_844_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArray<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArray<double>*) (soff+(sizeof(SharedArray<double>)*i)))->~G__TSharedArraylEdoublegR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArray<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArray<double>*) (soff))->~G__TSharedArraylEdoublegR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArrayImp<double> */
static int G__gammacomboCoreDict_846_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<double>[n];
     } else {
       p = new((void*) gvp) SharedArrayImp<double>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<double>;
     } else {
       p = new((void*) gvp) SharedArrayImp<double>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_846_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<double>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArrayImp<double>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_846_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<double>(*(SharedArrayImp<double>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArrayImp<double>(*(SharedArrayImp<double>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_846_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<double>*) G__getstructoffset())->refCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_846_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((SharedArrayImp<double>*) G__getstructoffset())->acquire());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_846_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<double>*) G__getstructoffset())->release();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_846_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<double>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_846_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((const SharedArrayImp<double>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_846_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const double& obj = ((SharedArrayImp<double>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_846_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArrayImp<double>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_846_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<double>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_846_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArrayImp<double>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_846_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArrayImp<double>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_846_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<double>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_846_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<double>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_846_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<double>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_846_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<double>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_846_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<double>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArrayImp<double> G__TSharedArrayImplEdoublegR;
static int G__gammacomboCoreDict_846_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArrayImp<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArrayImp<double>*) (soff+(sizeof(SharedArrayImp<double>)*i)))->~G__TSharedArrayImplEdoublegR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArrayImp<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArrayImp<double>*) (soff))->~G__TSharedArrayImplEdoublegR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__gammacomboCoreDict_846_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<double>* dest = (SharedArrayImp<double>*) G__getstructoffset();
   *dest = *(SharedArrayImp<double>*) libp->para[0].ref;
   const SharedArrayImp<double>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooBinned2DBicubicBase<RooAbsPdf> */
static int G__gammacomboCoreDict_847_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooBinned2DBicubicBase<RooAbsPdf>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooBinned2DBicubicBase<RooAbsPdf>[n];
     } else {
       p = new((void*) gvp) RooBinned2DBicubicBase<RooAbsPdf>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooBinned2DBicubicBase<RooAbsPdf>;
     } else {
       p = new((void*) gvp) RooBinned2DBicubicBase<RooAbsPdf>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_847_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooBinned2DBicubicBase<RooAbsPdf>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooBinned2DBicubicBase<RooAbsPdf>(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(TH2*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref);
   } else {
     p = new((void*) gvp) RooBinned2DBicubicBase<RooAbsPdf>(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(TH2*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_847_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooBinned2DBicubicBase<RooAbsPdf>* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooBinned2DBicubicBase<RooAbsPdf>(*(RooBinned2DBicubicBase<RooAbsPdf>*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooBinned2DBicubicBase<RooAbsPdf>(*(RooBinned2DBicubicBase<RooAbsPdf>*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooBinned2DBicubicBase<RooAbsPdf>(*(RooBinned2DBicubicBase<RooAbsPdf>*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooBinned2DBicubicBase<RooAbsPdf>(*(RooBinned2DBicubicBase<RooAbsPdf>*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_847_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RooBinned2DBicubicBase<RooAbsPdf>& obj = ((RooBinned2DBicubicBase<RooAbsPdf>*) G__getstructoffset())->operator=(*(RooBinned2DBicubicBase<RooAbsPdf>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_847_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooBinned2DBicubicBase<RooAbsPdf>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_847_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooBinned2DBicubicBase<RooAbsPdf>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_847_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooBinned2DBicubicBase<RooAbsPdf>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_847_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooBinned2DBicubicBase<RooAbsPdf>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_847_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooBinned2DBicubicBase<RooAbsPdf>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_847_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooBinned2DBicubicBase<RooAbsPdf>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_847_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooBinned2DBicubicBase<RooAbsPdf>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_847_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooBinned2DBicubicBase<RooAbsPdf>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_847_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooBinned2DBicubicBase<RooAbsPdf>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooBinned2DBicubicBase<RooAbsPdf> G__TRooBinned2DBicubicBaselERooAbsPdfgR;
static int G__gammacomboCoreDict_847_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooBinned2DBicubicBase<RooAbsPdf>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooBinned2DBicubicBase<RooAbsPdf>*) (soff+(sizeof(RooBinned2DBicubicBase<RooAbsPdf>)*i)))->~G__TRooBinned2DBicubicBaselERooAbsPdfgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooBinned2DBicubicBase<RooAbsPdf>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooBinned2DBicubicBase<RooAbsPdf>*) (soff))->~G__TRooBinned2DBicubicBaselERooAbsPdfgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooCrossCorPdf */
static int G__gammacomboCoreDict_911_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooCrossCorPdf* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooCrossCorPdf(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooArgList*) libp->para[2].ref, *(RooArgList*) libp->para[3].ref
, *(TMatrixDSym*) libp->para[4].ref, (int) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) RooCrossCorPdf(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooArgList*) libp->para[2].ref, *(RooArgList*) libp->para[3].ref
, *(TMatrixDSym*) libp->para[4].ref, (int) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooCrossCorPdf));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_911_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooCrossCorPdf* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooCrossCorPdf(*(RooCrossCorPdf*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooCrossCorPdf(*(RooCrossCorPdf*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooCrossCorPdf(*(RooCrossCorPdf*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooCrossCorPdf(*(RooCrossCorPdf*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooCrossCorPdf));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_911_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooCrossCorPdf::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_911_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooCrossCorPdf::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_911_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooCrossCorPdf::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_911_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooCrossCorPdf::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_911_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooCrossCorPdf*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_911_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooCrossCorPdf::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_911_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooCrossCorPdf::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_911_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooCrossCorPdf::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_911_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooCrossCorPdf::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooCrossCorPdf G__TRooCrossCorPdf;
static int G__gammacomboCoreDict_911_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooCrossCorPdf*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooCrossCorPdf*) (soff+(sizeof(RooCrossCorPdf)*i)))->~G__TRooCrossCorPdf();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooCrossCorPdf*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooCrossCorPdf*) (soff))->~G__TRooCrossCorPdf();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooHistPdfAngleVar */
static int G__gammacomboCoreDict_915_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooHistPdfAngleVar* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooHistPdfAngleVar[n];
     } else {
       p = new((void*) gvp) RooHistPdfAngleVar[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooHistPdfAngleVar;
     } else {
       p = new((void*) gvp) RooHistPdfAngleVar;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfAngleVar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_915_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooHistPdfAngleVar* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooHistPdfAngleVar(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref);
   } else {
     p = new((void*) gvp) RooHistPdfAngleVar(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfAngleVar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_915_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooHistPdfAngleVar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooHistPdfAngleVar(*(RooHistPdfAngleVar*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooHistPdfAngleVar(*(RooHistPdfAngleVar*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooHistPdfAngleVar(*(RooHistPdfAngleVar*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooHistPdfAngleVar(*(RooHistPdfAngleVar*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfAngleVar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_915_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooHistPdfAngleVar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_915_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooHistPdfAngleVar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_915_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooHistPdfAngleVar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_915_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooHistPdfAngleVar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_915_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooHistPdfAngleVar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_915_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooHistPdfAngleVar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_915_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooHistPdfAngleVar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_915_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooHistPdfAngleVar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_915_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooHistPdfAngleVar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooHistPdfAngleVar G__TRooHistPdfAngleVar;
static int G__gammacomboCoreDict_915_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooHistPdfAngleVar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooHistPdfAngleVar*) (soff+(sizeof(RooHistPdfAngleVar)*i)))->~G__TRooHistPdfAngleVar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooHistPdfAngleVar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooHistPdfAngleVar*) (soff))->~G__TRooHistPdfAngleVar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooHistPdfVar */
static int G__gammacomboCoreDict_916_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooHistPdfVar* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooHistPdfVar[n];
     } else {
       p = new((void*) gvp) RooHistPdfVar[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooHistPdfVar;
     } else {
       p = new((void*) gvp) RooHistPdfVar;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfVar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_916_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooHistPdfVar* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooHistPdfVar(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref);
   } else {
     p = new((void*) gvp) RooHistPdfVar(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfVar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_916_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooHistPdfVar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooHistPdfVar(*(RooHistPdfVar*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooHistPdfVar(*(RooHistPdfVar*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooHistPdfVar(*(RooHistPdfVar*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooHistPdfVar(*(RooHistPdfVar*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfVar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_916_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooHistPdfVar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_916_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooHistPdfVar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_916_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooHistPdfVar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_916_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooHistPdfVar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_916_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooHistPdfVar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_916_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooHistPdfVar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_916_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooHistPdfVar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_916_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooHistPdfVar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_916_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooHistPdfVar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooHistPdfVar G__TRooHistPdfVar;
static int G__gammacomboCoreDict_916_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooHistPdfVar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooHistPdfVar*) (soff+(sizeof(RooHistPdfVar)*i)))->~G__TRooHistPdfVar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooHistPdfVar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooHistPdfVar*) (soff))->~G__TRooHistPdfVar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooPoly3Var */
static int G__gammacomboCoreDict_917_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooPoly3Var* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooPoly3Var[n];
     } else {
       p = new((void*) gvp) RooPoly3Var[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooPoly3Var;
     } else {
       p = new((void*) gvp) RooPoly3Var;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly3Var));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_917_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooPoly3Var* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooPoly3Var(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]));
   } else {
     p = new((void*) gvp) RooPoly3Var(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly3Var));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_917_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooPoly3Var* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooPoly3Var(*(RooPoly3Var*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooPoly3Var(*(RooPoly3Var*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooPoly3Var(*(RooPoly3Var*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooPoly3Var(*(RooPoly3Var*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly3Var));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_917_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooPoly3Var::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_917_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooPoly3Var::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_917_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooPoly3Var::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_917_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooPoly3Var::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_917_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooPoly3Var*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_917_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooPoly3Var::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_917_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooPoly3Var::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_917_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooPoly3Var::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_917_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooPoly3Var::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooPoly3Var G__TRooPoly3Var;
static int G__gammacomboCoreDict_917_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooPoly3Var*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooPoly3Var*) (soff+(sizeof(RooPoly3Var)*i)))->~G__TRooPoly3Var();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooPoly3Var*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooPoly3Var*) (soff))->~G__TRooPoly3Var();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooPoly4Var */
static int G__gammacomboCoreDict_918_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooPoly4Var* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooPoly4Var[n];
     } else {
       p = new((void*) gvp) RooPoly4Var[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooPoly4Var;
     } else {
       p = new((void*) gvp) RooPoly4Var;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly4Var));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_918_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooPoly4Var* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooPoly4Var(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7]));
   } else {
     p = new((void*) gvp) RooPoly4Var(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4]), *(double*) G__Doubleref(&libp->para[5])
, *(double*) G__Doubleref(&libp->para[6]), *(double*) G__Doubleref(&libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly4Var));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_918_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooPoly4Var* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooPoly4Var(*(RooPoly4Var*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooPoly4Var(*(RooPoly4Var*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooPoly4Var(*(RooPoly4Var*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) RooPoly4Var(*(RooPoly4Var*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly4Var));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_918_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooPoly4Var::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_918_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooPoly4Var::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_918_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooPoly4Var::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_918_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooPoly4Var::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_918_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooPoly4Var*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_918_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooPoly4Var::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_918_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooPoly4Var::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_918_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooPoly4Var::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_918_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooPoly4Var::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooPoly4Var G__TRooPoly4Var;
static int G__gammacomboCoreDict_918_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooPoly4Var*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooPoly4Var*) (soff+(sizeof(RooPoly4Var)*i)))->~G__TRooPoly4Var();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooPoly4Var*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooPoly4Var*) (soff))->~G__TRooPoly4Var();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RooSlimFitResult */
static int G__gammacomboCoreDict_942_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooSlimFitResult* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooSlimFitResult[n];
     } else {
       p = new((void*) gvp) RooSlimFitResult[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooSlimFitResult;
     } else {
       p = new((void*) gvp) RooSlimFitResult;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooSlimFitResult));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooSlimFitResult* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooSlimFitResult((RooFitResult*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RooSlimFitResult((RooFitResult*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RooSlimFitResult((RooFitResult*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) RooSlimFitResult((RooFitResult*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooSlimFitResult));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooSlimFitResult* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooSlimFitResult((RooSlimFitResult*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) RooSlimFitResult((RooSlimFitResult*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooSlimFitResult));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooSlimFitResult* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RooSlimFitResult(*(RooSlimFitResult*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) RooSlimFitResult(*(RooSlimFitResult*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooSlimFitResult));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RooSlimFitResult*) G__getstructoffset())->Clone());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RooArgList& obj = ((const RooSlimFitResult*) G__getstructoffset())->constPars();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TMatrixDSym* pobj;
         const TMatrixDSym xobj = ((const RooSlimFitResult*) G__getstructoffset())->correlationMatrix();
         pobj = new TMatrixDSym(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RooSlimFitResult*) G__getstructoffset())->covQual());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RooSlimFitResult*) G__getstructoffset())->edm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RooArgList& obj = ((const RooSlimFitResult*) G__getstructoffset())->floatParsFinal();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RooSlimFitResult*) G__getstructoffset())->getParVal(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RooSlimFitResult*) G__getstructoffset())->getParErr(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RooSlimFitResult*) G__getstructoffset())->getConstParVal(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RooSlimFitResult*) G__getstructoffset())->getFloatParFinalVal(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RooSlimFitResult*) G__getstructoffset())->hasParameter(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RooSlimFitResult*) G__getstructoffset())->isConfirmed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RooSlimFitResult*) G__getstructoffset())->minNll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((RooSlimFitResult*) G__getstructoffset())->Print((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((RooSlimFitResult*) G__getstructoffset())->Print((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((RooSlimFitResult*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooSlimFitResult*) G__getstructoffset())->setConfirmed((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RooSlimFitResult*) G__getstructoffset())->status());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RooSlimFitResult*) G__getstructoffset())->isAngle((RooRealVar*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RooSlimFitResult::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooSlimFitResult::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RooSlimFitResult::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RooSlimFitResult::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RooSlimFitResult*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooSlimFitResult::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooSlimFitResult::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RooSlimFitResult::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_942_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RooSlimFitResult::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RooSlimFitResult G__TRooSlimFitResult;
static int G__gammacomboCoreDict_942_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RooSlimFitResult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RooSlimFitResult*) (soff+(sizeof(RooSlimFitResult)*i)))->~G__TRooSlimFitResult();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RooSlimFitResult*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RooSlimFitResult*) (soff))->~G__TRooSlimFitResult();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__gammacomboCoreDict_942_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RooSlimFitResult* dest = (RooSlimFitResult*) G__getstructoffset();
   *dest = *(RooSlimFitResult*) libp->para[0].ref;
   const RooSlimFitResult& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArrayImp<char> */
static int G__gammacomboCoreDict_949_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<char>[n];
     } else {
       p = new((void*) gvp) SharedArrayImp<char>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<char>;
     } else {
       p = new((void*) gvp) SharedArrayImp<char>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_949_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<char>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArrayImp<char>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_949_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<char>(*(SharedArrayImp<char>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArrayImp<char>(*(SharedArrayImp<char>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_949_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<char>*) G__getstructoffset())->refCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_949_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((SharedArrayImp<char>*) G__getstructoffset())->acquire());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_949_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<char>*) G__getstructoffset())->release();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_949_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<char>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_949_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const char& obj = ((const SharedArrayImp<char>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'c', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_949_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const char& obj = ((SharedArrayImp<char>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'c', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_949_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArrayImp<char>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_949_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<char>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_949_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArrayImp<char>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_949_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArrayImp<char>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_949_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<char>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_949_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<char>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_949_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<char>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_949_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<char>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_949_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<char>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArrayImp<char> G__TSharedArrayImplEchargR;
static int G__gammacomboCoreDict_949_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArrayImp<char>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArrayImp<char>*) (soff+(sizeof(SharedArrayImp<char>)*i)))->~G__TSharedArrayImplEchargR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArrayImp<char>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArrayImp<char>*) (soff))->~G__TSharedArrayImplEchargR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__gammacomboCoreDict_949_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<char>* dest = (SharedArrayImp<char>*) G__getstructoffset();
   *dest = *(SharedArrayImp<char>*) libp->para[0].ref;
   const SharedArrayImp<char>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArrayImp<short> */
static int G__gammacomboCoreDict_950_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<short>[n];
     } else {
       p = new((void*) gvp) SharedArrayImp<short>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<short>;
     } else {
       p = new((void*) gvp) SharedArrayImp<short>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_950_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<short>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArrayImp<short>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_950_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<short>(*(SharedArrayImp<short>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArrayImp<short>(*(SharedArrayImp<short>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_950_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<short>*) G__getstructoffset())->refCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_950_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((SharedArrayImp<short>*) G__getstructoffset())->acquire());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_950_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<short>*) G__getstructoffset())->release();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_950_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<short>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_950_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const short& obj = ((const SharedArrayImp<short>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 's', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_950_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const short& obj = ((SharedArrayImp<short>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 's', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_950_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArrayImp<short>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_950_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<short>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_950_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArrayImp<short>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_950_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArrayImp<short>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_950_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<short>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_950_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<short>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_950_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<short>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_950_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<short>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_950_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<short>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArrayImp<short> G__TSharedArrayImplEshortgR;
static int G__gammacomboCoreDict_950_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArrayImp<short>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArrayImp<short>*) (soff+(sizeof(SharedArrayImp<short>)*i)))->~G__TSharedArrayImplEshortgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArrayImp<short>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArrayImp<short>*) (soff))->~G__TSharedArrayImplEshortgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__gammacomboCoreDict_950_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<short>* dest = (SharedArrayImp<short>*) G__getstructoffset();
   *dest = *(SharedArrayImp<short>*) libp->para[0].ref;
   const SharedArrayImp<short>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArrayImp<int> */
static int G__gammacomboCoreDict_951_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<int>[n];
     } else {
       p = new((void*) gvp) SharedArrayImp<int>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<int>;
     } else {
       p = new((void*) gvp) SharedArrayImp<int>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_951_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<int>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArrayImp<int>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_951_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<int>(*(SharedArrayImp<int>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArrayImp<int>(*(SharedArrayImp<int>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_951_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<int>*) G__getstructoffset())->refCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_951_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((SharedArrayImp<int>*) G__getstructoffset())->acquire());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_951_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<int>*) G__getstructoffset())->release();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_951_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<int>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_951_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const int& obj = ((const SharedArrayImp<int>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_951_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const int& obj = ((SharedArrayImp<int>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_951_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArrayImp<int>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_951_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<int>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_951_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArrayImp<int>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_951_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArrayImp<int>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_951_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<int>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_951_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<int>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_951_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<int>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_951_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<int>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_951_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<int>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArrayImp<int> G__TSharedArrayImplEintgR;
static int G__gammacomboCoreDict_951_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArrayImp<int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArrayImp<int>*) (soff+(sizeof(SharedArrayImp<int>)*i)))->~G__TSharedArrayImplEintgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArrayImp<int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArrayImp<int>*) (soff))->~G__TSharedArrayImplEintgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__gammacomboCoreDict_951_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<int>* dest = (SharedArrayImp<int>*) G__getstructoffset();
   *dest = *(SharedArrayImp<int>*) libp->para[0].ref;
   const SharedArrayImp<int>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArrayImp<float> */
static int G__gammacomboCoreDict_952_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<float>[n];
     } else {
       p = new((void*) gvp) SharedArrayImp<float>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<float>;
     } else {
       p = new((void*) gvp) SharedArrayImp<float>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_952_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<float>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArrayImp<float>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_952_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<float>(*(SharedArrayImp<float>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArrayImp<float>(*(SharedArrayImp<float>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_952_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<float>*) G__getstructoffset())->refCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_952_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((SharedArrayImp<float>*) G__getstructoffset())->acquire());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_952_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<float>*) G__getstructoffset())->release();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_952_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<float>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_952_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((const SharedArrayImp<float>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_952_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const float& obj = ((SharedArrayImp<float>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_952_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArrayImp<float>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_952_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<float>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_952_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArrayImp<float>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_952_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArrayImp<float>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_952_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<float>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_952_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<float>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_952_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<float>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_952_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<float>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_952_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<float>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArrayImp<float> G__TSharedArrayImplEfloatgR;
static int G__gammacomboCoreDict_952_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArrayImp<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArrayImp<float>*) (soff+(sizeof(SharedArrayImp<float>)*i)))->~G__TSharedArrayImplEfloatgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArrayImp<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArrayImp<float>*) (soff))->~G__TSharedArrayImplEfloatgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__gammacomboCoreDict_952_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<float>* dest = (SharedArrayImp<float>*) G__getstructoffset();
   *dest = *(SharedArrayImp<float>*) libp->para[0].ref;
   const SharedArrayImp<float>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArrayImp<long> */
static int G__gammacomboCoreDict_953_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<long>[n];
     } else {
       p = new((void*) gvp) SharedArrayImp<long>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<long>;
     } else {
       p = new((void*) gvp) SharedArrayImp<long>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_953_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<long>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArrayImp<long>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_953_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<long>(*(SharedArrayImp<long>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArrayImp<long>(*(SharedArrayImp<long>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_953_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<long>*) G__getstructoffset())->refCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_953_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((SharedArrayImp<long>*) G__getstructoffset())->acquire());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_953_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<long>*) G__getstructoffset())->release();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_953_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<long>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_953_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long& obj = ((const SharedArrayImp<long>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_953_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long& obj = ((SharedArrayImp<long>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'l', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_953_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArrayImp<long>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_953_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<long>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_953_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArrayImp<long>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_953_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArrayImp<long>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_953_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<long>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_953_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<long>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_953_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<long>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_953_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<long>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_953_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<long>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArrayImp<long> G__TSharedArrayImplElonggR;
static int G__gammacomboCoreDict_953_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArrayImp<long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArrayImp<long>*) (soff+(sizeof(SharedArrayImp<long>)*i)))->~G__TSharedArrayImplElonggR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArrayImp<long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArrayImp<long>*) (soff))->~G__TSharedArrayImplElonggR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__gammacomboCoreDict_953_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<long>* dest = (SharedArrayImp<long>*) G__getstructoffset();
   *dest = *(SharedArrayImp<long>*) libp->para[0].ref;
   const SharedArrayImp<long>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArrayImp<long long> */
static int G__gammacomboCoreDict_954_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<long long>[n];
     } else {
       p = new((void*) gvp) SharedArrayImp<long long>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<long long>;
     } else {
       p = new((void*) gvp) SharedArrayImp<long long>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_954_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<long long>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArrayImp<long long>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_954_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<long long>(*(SharedArrayImp<long long>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArrayImp<long long>(*(SharedArrayImp<long long>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_954_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<long long>*) G__getstructoffset())->refCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_954_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((SharedArrayImp<long long>*) G__getstructoffset())->acquire());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_954_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<long long>*) G__getstructoffset())->release();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_954_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<long long>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_954_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long long& obj = ((const SharedArrayImp<long long>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'n', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_954_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const long long& obj = ((SharedArrayImp<long long>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'n', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_954_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArrayImp<long long>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_954_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<long long>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_954_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArrayImp<long long>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_954_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArrayImp<long long>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_954_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<long long>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_954_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<long long>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_954_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<long long>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_954_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<long long>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_954_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<long long>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArrayImp<long long> G__TSharedArrayImplElongsPlonggR;
static int G__gammacomboCoreDict_954_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArrayImp<long long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArrayImp<long long>*) (soff+(sizeof(SharedArrayImp<long long>)*i)))->~G__TSharedArrayImplElongsPlonggR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArrayImp<long long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArrayImp<long long>*) (soff))->~G__TSharedArrayImplElongsPlonggR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__gammacomboCoreDict_954_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<long long>* dest = (SharedArrayImp<long long>*) G__getstructoffset();
   *dest = *(SharedArrayImp<long long>*) libp->para[0].ref;
   const SharedArrayImp<long long>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArrayImp<unsigned char> */
static int G__gammacomboCoreDict_955_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<unsigned char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<unsigned char>[n];
     } else {
       p = new((void*) gvp) SharedArrayImp<unsigned char>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<unsigned char>;
     } else {
       p = new((void*) gvp) SharedArrayImp<unsigned char>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_955_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<unsigned char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<unsigned char>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArrayImp<unsigned char>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_955_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<unsigned char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<unsigned char>(*(SharedArrayImp<unsigned char>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArrayImp<unsigned char>(*(SharedArrayImp<unsigned char>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_955_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<unsigned char>*) G__getstructoffset())->refCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_955_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((SharedArrayImp<unsigned char>*) G__getstructoffset())->acquire());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_955_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<unsigned char>*) G__getstructoffset())->release();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_955_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<unsigned char>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_955_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned char& obj = ((const SharedArrayImp<unsigned char>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'b', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_955_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned char& obj = ((SharedArrayImp<unsigned char>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'b', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_955_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArrayImp<unsigned char>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_955_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<unsigned char>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_955_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArrayImp<unsigned char>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_955_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArrayImp<unsigned char>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_955_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<unsigned char>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_955_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<unsigned char>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_955_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<unsigned char>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_955_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<unsigned char>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_955_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<unsigned char>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArrayImp<unsigned char> G__TSharedArrayImplEunsignedsPchargR;
static int G__gammacomboCoreDict_955_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArrayImp<unsigned char>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArrayImp<unsigned char>*) (soff+(sizeof(SharedArrayImp<unsigned char>)*i)))->~G__TSharedArrayImplEunsignedsPchargR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArrayImp<unsigned char>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArrayImp<unsigned char>*) (soff))->~G__TSharedArrayImplEunsignedsPchargR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__gammacomboCoreDict_955_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<unsigned char>* dest = (SharedArrayImp<unsigned char>*) G__getstructoffset();
   *dest = *(SharedArrayImp<unsigned char>*) libp->para[0].ref;
   const SharedArrayImp<unsigned char>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArrayImp<unsigned short> */
static int G__gammacomboCoreDict_956_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<unsigned short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<unsigned short>[n];
     } else {
       p = new((void*) gvp) SharedArrayImp<unsigned short>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<unsigned short>;
     } else {
       p = new((void*) gvp) SharedArrayImp<unsigned short>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_956_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<unsigned short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<unsigned short>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArrayImp<unsigned short>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_956_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<unsigned short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<unsigned short>(*(SharedArrayImp<unsigned short>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArrayImp<unsigned short>(*(SharedArrayImp<unsigned short>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_956_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<unsigned short>*) G__getstructoffset())->refCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_956_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((SharedArrayImp<unsigned short>*) G__getstructoffset())->acquire());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_956_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<unsigned short>*) G__getstructoffset())->release();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_956_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<unsigned short>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_956_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned short& obj = ((const SharedArrayImp<unsigned short>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_956_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned short& obj = ((SharedArrayImp<unsigned short>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'r', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_956_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArrayImp<unsigned short>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_956_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<unsigned short>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_956_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArrayImp<unsigned short>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_956_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArrayImp<unsigned short>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_956_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<unsigned short>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_956_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<unsigned short>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_956_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<unsigned short>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_956_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<unsigned short>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_956_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<unsigned short>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArrayImp<unsigned short> G__TSharedArrayImplEunsignedsPshortgR;
static int G__gammacomboCoreDict_956_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArrayImp<unsigned short>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArrayImp<unsigned short>*) (soff+(sizeof(SharedArrayImp<unsigned short>)*i)))->~G__TSharedArrayImplEunsignedsPshortgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArrayImp<unsigned short>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArrayImp<unsigned short>*) (soff))->~G__TSharedArrayImplEunsignedsPshortgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__gammacomboCoreDict_956_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<unsigned short>* dest = (SharedArrayImp<unsigned short>*) G__getstructoffset();
   *dest = *(SharedArrayImp<unsigned short>*) libp->para[0].ref;
   const SharedArrayImp<unsigned short>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArrayImp<unsigned int> */
static int G__gammacomboCoreDict_957_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<unsigned int>[n];
     } else {
       p = new((void*) gvp) SharedArrayImp<unsigned int>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<unsigned int>;
     } else {
       p = new((void*) gvp) SharedArrayImp<unsigned int>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_957_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<unsigned int>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArrayImp<unsigned int>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_957_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<unsigned int>(*(SharedArrayImp<unsigned int>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArrayImp<unsigned int>(*(SharedArrayImp<unsigned int>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_957_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<unsigned int>*) G__getstructoffset())->refCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_957_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((SharedArrayImp<unsigned int>*) G__getstructoffset())->acquire());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_957_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<unsigned int>*) G__getstructoffset())->release();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_957_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<unsigned int>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_957_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned int& obj = ((const SharedArrayImp<unsigned int>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'h', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_957_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned int& obj = ((SharedArrayImp<unsigned int>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'h', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_957_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArrayImp<unsigned int>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_957_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<unsigned int>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_957_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArrayImp<unsigned int>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_957_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArrayImp<unsigned int>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_957_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<unsigned int>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_957_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<unsigned int>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_957_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<unsigned int>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_957_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<unsigned int>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_957_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<unsigned int>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArrayImp<unsigned int> G__TSharedArrayImplEunsignedsPintgR;
static int G__gammacomboCoreDict_957_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArrayImp<unsigned int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArrayImp<unsigned int>*) (soff+(sizeof(SharedArrayImp<unsigned int>)*i)))->~G__TSharedArrayImplEunsignedsPintgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArrayImp<unsigned int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArrayImp<unsigned int>*) (soff))->~G__TSharedArrayImplEunsignedsPintgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__gammacomboCoreDict_957_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<unsigned int>* dest = (SharedArrayImp<unsigned int>*) G__getstructoffset();
   *dest = *(SharedArrayImp<unsigned int>*) libp->para[0].ref;
   const SharedArrayImp<unsigned int>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArrayImp<unsigned long> */
static int G__gammacomboCoreDict_958_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<unsigned long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<unsigned long>[n];
     } else {
       p = new((void*) gvp) SharedArrayImp<unsigned long>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<unsigned long>;
     } else {
       p = new((void*) gvp) SharedArrayImp<unsigned long>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_958_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<unsigned long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<unsigned long>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArrayImp<unsigned long>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_958_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<unsigned long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<unsigned long>(*(SharedArrayImp<unsigned long>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArrayImp<unsigned long>(*(SharedArrayImp<unsigned long>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_958_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<unsigned long>*) G__getstructoffset())->refCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_958_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((SharedArrayImp<unsigned long>*) G__getstructoffset())->acquire());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_958_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<unsigned long>*) G__getstructoffset())->release();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_958_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<unsigned long>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_958_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned long& obj = ((const SharedArrayImp<unsigned long>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'k', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_958_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned long& obj = ((SharedArrayImp<unsigned long>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'k', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_958_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArrayImp<unsigned long>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_958_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<unsigned long>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_958_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArrayImp<unsigned long>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_958_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArrayImp<unsigned long>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_958_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<unsigned long>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_958_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<unsigned long>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_958_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<unsigned long>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_958_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<unsigned long>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_958_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<unsigned long>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArrayImp<unsigned long> G__TSharedArrayImplEunsignedsPlonggR;
static int G__gammacomboCoreDict_958_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArrayImp<unsigned long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArrayImp<unsigned long>*) (soff+(sizeof(SharedArrayImp<unsigned long>)*i)))->~G__TSharedArrayImplEunsignedsPlonggR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArrayImp<unsigned long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArrayImp<unsigned long>*) (soff))->~G__TSharedArrayImplEunsignedsPlonggR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__gammacomboCoreDict_958_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<unsigned long>* dest = (SharedArrayImp<unsigned long>*) G__getstructoffset();
   *dest = *(SharedArrayImp<unsigned long>*) libp->para[0].ref;
   const SharedArrayImp<unsigned long>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArrayImp<unsigned long long> */
static int G__gammacomboCoreDict_959_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<unsigned long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<unsigned long long>[n];
     } else {
       p = new((void*) gvp) SharedArrayImp<unsigned long long>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SharedArrayImp<unsigned long long>;
     } else {
       p = new((void*) gvp) SharedArrayImp<unsigned long long>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_959_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<unsigned long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<unsigned long long>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArrayImp<unsigned long long>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_959_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<unsigned long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArrayImp<unsigned long long>(*(SharedArrayImp<unsigned long long>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArrayImp<unsigned long long>(*(SharedArrayImp<unsigned long long>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_959_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<unsigned long long>*) G__getstructoffset())->refCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_959_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((SharedArrayImp<unsigned long long>*) G__getstructoffset())->acquire());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_959_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<unsigned long long>*) G__getstructoffset())->release();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_959_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArrayImp<unsigned long long>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_959_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned long long& obj = ((const SharedArrayImp<unsigned long long>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'm', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_959_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned long long& obj = ((SharedArrayImp<unsigned long long>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         G__letint(result7, 'm', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_959_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArrayImp<unsigned long long>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_959_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<unsigned long long>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_959_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArrayImp<unsigned long long>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_959_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArrayImp<unsigned long long>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_959_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArrayImp<unsigned long long>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_959_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<unsigned long long>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_959_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<unsigned long long>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_959_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArrayImp<unsigned long long>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_959_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArrayImp<unsigned long long>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArrayImp<unsigned long long> G__TSharedArrayImplEunsignedsPlongsPlonggR;
static int G__gammacomboCoreDict_959_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArrayImp<unsigned long long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArrayImp<unsigned long long>*) (soff+(sizeof(SharedArrayImp<unsigned long long>)*i)))->~G__TSharedArrayImplEunsignedsPlongsPlonggR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArrayImp<unsigned long long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArrayImp<unsigned long long>*) (soff))->~G__TSharedArrayImplEunsignedsPlongsPlonggR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__gammacomboCoreDict_959_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArrayImp<unsigned long long>* dest = (SharedArrayImp<unsigned long long>*) G__getstructoffset();
   *dest = *(SharedArrayImp<unsigned long long>*) libp->para[0].ref;
   const SharedArrayImp<unsigned long long>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArray<char> */
static int G__gammacomboCoreDict_960_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<char>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArray<char>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_960_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<char>(*(SharedArray<char>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArray<char>(*(SharedArray<char>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_960_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<char>& obj = ((SharedArray<char>*) G__getstructoffset())->operator=(*(SharedArray<char>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_960_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArray<char>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_960_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<char>::RWProxy* pobj;
         const SharedArray<char>::RWProxy xobj = ((const SharedArray<char>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<char>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_960_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         SharedArray<char>::RWProxy* pobj;
         SharedArray<char>::RWProxy xobj = ((SharedArray<char>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<char>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_960_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArray<char>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_960_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<char>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_960_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArray<char>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_960_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArray<char>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_960_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArray<char>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_960_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<char>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_960_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<char>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_960_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<char>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_960_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<char>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArray<char> G__TSharedArraylEchargR;
static int G__gammacomboCoreDict_960_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArray<char>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArray<char>*) (soff+(sizeof(SharedArray<char>)*i)))->~G__TSharedArraylEchargR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArray<char>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArray<char>*) (soff))->~G__TSharedArraylEchargR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArray<short> */
static int G__gammacomboCoreDict_962_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<short>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArray<short>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_962_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<short>(*(SharedArray<short>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArray<short>(*(SharedArray<short>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_962_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<short>& obj = ((SharedArray<short>*) G__getstructoffset())->operator=(*(SharedArray<short>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_962_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArray<short>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_962_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<short>::RWProxy* pobj;
         const SharedArray<short>::RWProxy xobj = ((const SharedArray<short>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<short>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_962_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         SharedArray<short>::RWProxy* pobj;
         SharedArray<short>::RWProxy xobj = ((SharedArray<short>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<short>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_962_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArray<short>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_962_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<short>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_962_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArray<short>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_962_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArray<short>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_962_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArray<short>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_962_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<short>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_962_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<short>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_962_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<short>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_962_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<short>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArray<short> G__TSharedArraylEshortgR;
static int G__gammacomboCoreDict_962_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArray<short>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArray<short>*) (soff+(sizeof(SharedArray<short>)*i)))->~G__TSharedArraylEshortgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArray<short>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArray<short>*) (soff))->~G__TSharedArraylEshortgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArray<int> */
static int G__gammacomboCoreDict_964_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<int>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArray<int>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_964_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<int>(*(SharedArray<int>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArray<int>(*(SharedArray<int>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_964_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<int>& obj = ((SharedArray<int>*) G__getstructoffset())->operator=(*(SharedArray<int>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_964_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArray<int>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_964_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<int>::RWProxy* pobj;
         const SharedArray<int>::RWProxy xobj = ((const SharedArray<int>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<int>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_964_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         SharedArray<int>::RWProxy* pobj;
         SharedArray<int>::RWProxy xobj = ((SharedArray<int>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<int>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_964_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArray<int>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_964_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<int>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_964_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArray<int>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_964_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArray<int>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_964_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArray<int>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_964_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<int>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_964_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<int>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_964_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<int>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_964_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<int>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArray<int> G__TSharedArraylEintgR;
static int G__gammacomboCoreDict_964_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArray<int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArray<int>*) (soff+(sizeof(SharedArray<int>)*i)))->~G__TSharedArraylEintgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArray<int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArray<int>*) (soff))->~G__TSharedArraylEintgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArray<long> */
static int G__gammacomboCoreDict_966_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<long>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArray<long>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_966_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<long>(*(SharedArray<long>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArray<long>(*(SharedArray<long>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_966_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<long>& obj = ((SharedArray<long>*) G__getstructoffset())->operator=(*(SharedArray<long>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_966_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArray<long>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_966_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<long>::RWProxy* pobj;
         const SharedArray<long>::RWProxy xobj = ((const SharedArray<long>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<long>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_966_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         SharedArray<long>::RWProxy* pobj;
         SharedArray<long>::RWProxy xobj = ((SharedArray<long>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<long>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_966_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArray<long>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_966_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<long>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_966_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArray<long>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_966_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArray<long>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_966_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArray<long>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_966_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<long>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_966_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<long>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_966_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<long>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_966_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<long>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArray<long> G__TSharedArraylElonggR;
static int G__gammacomboCoreDict_966_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArray<long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArray<long>*) (soff+(sizeof(SharedArray<long>)*i)))->~G__TSharedArraylElonggR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArray<long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArray<long>*) (soff))->~G__TSharedArraylElonggR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArray<long long> */
static int G__gammacomboCoreDict_968_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<long long>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArray<long long>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_968_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<long long>(*(SharedArray<long long>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArray<long long>(*(SharedArray<long long>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_968_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<long long>& obj = ((SharedArray<long long>*) G__getstructoffset())->operator=(*(SharedArray<long long>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_968_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArray<long long>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_968_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<long long>::RWProxy* pobj;
         const SharedArray<long long>::RWProxy xobj = ((const SharedArray<long long>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<long long>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_968_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         SharedArray<long long>::RWProxy* pobj;
         SharedArray<long long>::RWProxy xobj = ((SharedArray<long long>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<long long>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_968_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArray<long long>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_968_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<long long>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_968_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArray<long long>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_968_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArray<long long>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_968_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArray<long long>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_968_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<long long>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_968_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<long long>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_968_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<long long>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_968_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<long long>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArray<long long> G__TSharedArraylElongsPlonggR;
static int G__gammacomboCoreDict_968_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArray<long long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArray<long long>*) (soff+(sizeof(SharedArray<long long>)*i)))->~G__TSharedArraylElongsPlonggR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArray<long long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArray<long long>*) (soff))->~G__TSharedArraylElongsPlonggR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArray<float> */
static int G__gammacomboCoreDict_970_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<float>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArray<float>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_970_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<float>(*(SharedArray<float>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArray<float>(*(SharedArray<float>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_970_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<float>& obj = ((SharedArray<float>*) G__getstructoffset())->operator=(*(SharedArray<float>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_970_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArray<float>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_970_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<float>::RWProxy* pobj;
         const SharedArray<float>::RWProxy xobj = ((const SharedArray<float>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<float>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_970_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         SharedArray<float>::RWProxy* pobj;
         SharedArray<float>::RWProxy xobj = ((SharedArray<float>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<float>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_970_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArray<float>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_970_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<float>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_970_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArray<float>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_970_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArray<float>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_970_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArray<float>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_970_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<float>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_970_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<float>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_970_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<float>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_970_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<float>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArray<float> G__TSharedArraylEfloatgR;
static int G__gammacomboCoreDict_970_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArray<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArray<float>*) (soff+(sizeof(SharedArray<float>)*i)))->~G__TSharedArraylEfloatgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArray<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArray<float>*) (soff))->~G__TSharedArraylEfloatgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArray<unsigned char> */
static int G__gammacomboCoreDict_972_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<unsigned char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<unsigned char>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArray<unsigned char>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_972_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<unsigned char>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<unsigned char>(*(SharedArray<unsigned char>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArray<unsigned char>(*(SharedArray<unsigned char>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPchargR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_972_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<unsigned char>& obj = ((SharedArray<unsigned char>*) G__getstructoffset())->operator=(*(SharedArray<unsigned char>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_972_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArray<unsigned char>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_972_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<unsigned char>::RWProxy* pobj;
         const SharedArray<unsigned char>::RWProxy xobj = ((const SharedArray<unsigned char>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<unsigned char>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_972_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         SharedArray<unsigned char>::RWProxy* pobj;
         SharedArray<unsigned char>::RWProxy xobj = ((SharedArray<unsigned char>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<unsigned char>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_972_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArray<unsigned char>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_972_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<unsigned char>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_972_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArray<unsigned char>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_972_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArray<unsigned char>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_972_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArray<unsigned char>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_972_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<unsigned char>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_972_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<unsigned char>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_972_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<unsigned char>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_972_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<unsigned char>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArray<unsigned char> G__TSharedArraylEunsignedsPchargR;
static int G__gammacomboCoreDict_972_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArray<unsigned char>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArray<unsigned char>*) (soff+(sizeof(SharedArray<unsigned char>)*i)))->~G__TSharedArraylEunsignedsPchargR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArray<unsigned char>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArray<unsigned char>*) (soff))->~G__TSharedArraylEunsignedsPchargR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArray<unsigned short> */
static int G__gammacomboCoreDict_974_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<unsigned short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<unsigned short>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArray<unsigned short>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_974_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<unsigned short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<unsigned short>(*(SharedArray<unsigned short>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArray<unsigned short>(*(SharedArray<unsigned short>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_974_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<unsigned short>& obj = ((SharedArray<unsigned short>*) G__getstructoffset())->operator=(*(SharedArray<unsigned short>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_974_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArray<unsigned short>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_974_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<unsigned short>::RWProxy* pobj;
         const SharedArray<unsigned short>::RWProxy xobj = ((const SharedArray<unsigned short>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<unsigned short>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_974_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         SharedArray<unsigned short>::RWProxy* pobj;
         SharedArray<unsigned short>::RWProxy xobj = ((SharedArray<unsigned short>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<unsigned short>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_974_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArray<unsigned short>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_974_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<unsigned short>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_974_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArray<unsigned short>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_974_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArray<unsigned short>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_974_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArray<unsigned short>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_974_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<unsigned short>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_974_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<unsigned short>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_974_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<unsigned short>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_974_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<unsigned short>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArray<unsigned short> G__TSharedArraylEunsignedsPshortgR;
static int G__gammacomboCoreDict_974_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArray<unsigned short>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArray<unsigned short>*) (soff+(sizeof(SharedArray<unsigned short>)*i)))->~G__TSharedArraylEunsignedsPshortgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArray<unsigned short>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArray<unsigned short>*) (soff))->~G__TSharedArraylEunsignedsPshortgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArray<unsigned int> */
static int G__gammacomboCoreDict_976_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<unsigned int>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArray<unsigned int>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_976_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<unsigned int>(*(SharedArray<unsigned int>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArray<unsigned int>(*(SharedArray<unsigned int>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_976_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<unsigned int>& obj = ((SharedArray<unsigned int>*) G__getstructoffset())->operator=(*(SharedArray<unsigned int>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_976_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArray<unsigned int>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_976_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<unsigned int>::RWProxy* pobj;
         const SharedArray<unsigned int>::RWProxy xobj = ((const SharedArray<unsigned int>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<unsigned int>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_976_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         SharedArray<unsigned int>::RWProxy* pobj;
         SharedArray<unsigned int>::RWProxy xobj = ((SharedArray<unsigned int>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<unsigned int>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_976_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArray<unsigned int>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_976_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<unsigned int>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_976_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArray<unsigned int>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_976_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArray<unsigned int>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_976_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArray<unsigned int>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_976_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<unsigned int>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_976_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<unsigned int>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_976_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<unsigned int>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_976_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<unsigned int>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArray<unsigned int> G__TSharedArraylEunsignedsPintgR;
static int G__gammacomboCoreDict_976_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArray<unsigned int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArray<unsigned int>*) (soff+(sizeof(SharedArray<unsigned int>)*i)))->~G__TSharedArraylEunsignedsPintgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArray<unsigned int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArray<unsigned int>*) (soff))->~G__TSharedArraylEunsignedsPintgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArray<unsigned long> */
static int G__gammacomboCoreDict_978_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<unsigned long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<unsigned long>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArray<unsigned long>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_978_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<unsigned long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<unsigned long>(*(SharedArray<unsigned long>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArray<unsigned long>(*(SharedArray<unsigned long>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_978_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<unsigned long>& obj = ((SharedArray<unsigned long>*) G__getstructoffset())->operator=(*(SharedArray<unsigned long>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_978_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArray<unsigned long>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_978_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<unsigned long>::RWProxy* pobj;
         const SharedArray<unsigned long>::RWProxy xobj = ((const SharedArray<unsigned long>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<unsigned long>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_978_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         SharedArray<unsigned long>::RWProxy* pobj;
         SharedArray<unsigned long>::RWProxy xobj = ((SharedArray<unsigned long>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<unsigned long>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_978_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArray<unsigned long>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_978_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<unsigned long>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_978_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArray<unsigned long>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_978_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArray<unsigned long>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_978_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArray<unsigned long>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_978_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<unsigned long>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_978_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<unsigned long>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_978_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<unsigned long>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_978_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<unsigned long>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArray<unsigned long> G__TSharedArraylEunsignedsPlonggR;
static int G__gammacomboCoreDict_978_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArray<unsigned long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArray<unsigned long>*) (soff+(sizeof(SharedArray<unsigned long>)*i)))->~G__TSharedArraylEunsignedsPlonggR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArray<unsigned long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArray<unsigned long>*) (soff))->~G__TSharedArraylEunsignedsPlonggR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SharedArray<unsigned long long> */
static int G__gammacomboCoreDict_980_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<unsigned long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<unsigned long long>((unsigned int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SharedArray<unsigned long long>((unsigned int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_980_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SharedArray<unsigned long long>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SharedArray<unsigned long long>(*(SharedArray<unsigned long long>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) SharedArray<unsigned long long>(*(SharedArray<unsigned long long>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlongsPlonggR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_980_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<unsigned long long>& obj = ((SharedArray<unsigned long long>*) G__getstructoffset())->operator=(*(SharedArray<unsigned long long>*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_980_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const SharedArray<unsigned long long>*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_980_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const SharedArray<unsigned long long>::RWProxy* pobj;
         const SharedArray<unsigned long long>::RWProxy xobj = ((const SharedArray<unsigned long long>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<unsigned long long>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_980_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         SharedArray<unsigned long long>::RWProxy* pobj;
         SharedArray<unsigned long long>::RWProxy xobj = ((SharedArray<unsigned long long>*) G__getstructoffset())->operator[]((unsigned int) G__int(libp->para[0]));
         pobj = new SharedArray<unsigned long long>::RWProxy(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_980_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SharedArray<unsigned long long>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_980_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<unsigned long long>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_980_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SharedArray<unsigned long long>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_980_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SharedArray<unsigned long long>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_980_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SharedArray<unsigned long long>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_980_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<unsigned long long>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_980_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<unsigned long long>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_980_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SharedArray<unsigned long long>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__gammacomboCoreDict_980_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SharedArray<unsigned long long>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SharedArray<unsigned long long> G__TSharedArraylEunsignedsPlongsPlonggR;
static int G__gammacomboCoreDict_980_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SharedArray<unsigned long long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SharedArray<unsigned long long>*) (soff+(sizeof(SharedArray<unsigned long long>)*i)))->~G__TSharedArraylEunsignedsPlongsPlonggR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SharedArray<unsigned long long>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SharedArray<unsigned long long>*) (soff))->~G__TSharedArraylEunsignedsPlongsPlonggR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* RooBinned2DBicubicBase<RooAbsReal> */

/* SharedArray<double> */

/* SharedArrayImp<double> */

/* RooBinned2DBicubicBase<RooAbsPdf> */

/* RooCrossCorPdf */

/* RooHistPdfAngleVar */

/* RooHistPdfVar */

/* RooPoly3Var */

/* RooPoly4Var */

/* RooSlimFitResult */

/* SharedArrayImp<char> */

/* SharedArrayImp<short> */

/* SharedArrayImp<int> */

/* SharedArrayImp<float> */

/* SharedArrayImp<long> */

/* SharedArrayImp<long long> */

/* SharedArrayImp<unsigned char> */

/* SharedArrayImp<unsigned short> */

/* SharedArrayImp<unsigned int> */

/* SharedArrayImp<unsigned long> */

/* SharedArrayImp<unsigned long long> */

/* SharedArray<char> */

/* SharedArray<short> */

/* SharedArray<int> */

/* SharedArray<long> */

/* SharedArray<long long> */

/* SharedArray<float> */

/* SharedArray<unsigned char> */

/* SharedArray<unsigned short> */

/* SharedArray<unsigned int> */

/* SharedArray<unsigned long> */

/* SharedArray<unsigned long long> */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncgammacomboCoreDict {
 public:
  G__Sizep2memfuncgammacomboCoreDict(): p(&G__Sizep2memfuncgammacomboCoreDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncgammacomboCoreDict::*p)();
};

size_t G__get_sizep2memfuncgammacomboCoreDict()
{
  G__Sizep2memfuncgammacomboCoreDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancegammacomboCoreDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgR))) {
     RooBinned2DBicubicBase<RooAbsReal> *G__Lderived;
     G__Lderived=(RooBinned2DBicubicBase<RooAbsReal>*)0x1000;
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEdoublegR))) {
     SharedArray<double> *G__Lderived;
     G__Lderived=(SharedArray<double>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEdoublegR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEdoublegR))) {
     SharedArrayImp<double> *G__Lderived;
     G__Lderived=(SharedArrayImp<double>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEdoublegR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgR))) {
     RooBinned2DBicubicBase<RooAbsPdf> *G__Lderived;
     G__Lderived=(RooBinned2DBicubicBase<RooAbsPdf>*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooCrossCorPdf))) {
     RooCrossCorPdf *G__Lderived;
     G__Lderived=(RooCrossCorPdf*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooCrossCorPdf),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooCrossCorPdf),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooCrossCorPdf),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooCrossCorPdf),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooCrossCorPdf),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooCrossCorPdf),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfAngleVar))) {
     RooHistPdfAngleVar *G__Lderived;
     G__Lderived=(RooHistPdfAngleVar*)0x1000;
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfAngleVar),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfAngleVar),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfAngleVar),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfAngleVar),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfAngleVar),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfVar))) {
     RooHistPdfVar *G__Lderived;
     G__Lderived=(RooHistPdfVar*)0x1000;
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfVar),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfVar),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfVar),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfVar),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfVar),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly3Var))) {
     RooPoly3Var *G__Lderived;
     G__Lderived=(RooPoly3Var*)0x1000;
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly3Var),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly3Var),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly3Var),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly3Var),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly3Var),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly4Var))) {
     RooPoly4Var *G__Lderived;
     G__Lderived=(RooPoly4Var*)0x1000;
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly4Var),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly4Var),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly4Var),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly4Var),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly4Var),G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooSlimFitResult))) {
     RooSlimFitResult *G__Lderived;
     G__Lderived=(RooSlimFitResult*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooSlimFitResult),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEchargR))) {
     SharedArrayImp<char> *G__Lderived;
     G__Lderived=(SharedArrayImp<char>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEchargR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEshortgR))) {
     SharedArrayImp<short> *G__Lderived;
     G__Lderived=(SharedArrayImp<short>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEshortgR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEintgR))) {
     SharedArrayImp<int> *G__Lderived;
     G__Lderived=(SharedArrayImp<int>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEintgR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEfloatgR))) {
     SharedArrayImp<float> *G__Lderived;
     G__Lderived=(SharedArrayImp<float>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEfloatgR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElonggR))) {
     SharedArrayImp<long> *G__Lderived;
     G__Lderived=(SharedArrayImp<long>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElonggR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElongsPlonggR))) {
     SharedArrayImp<long long> *G__Lderived;
     G__Lderived=(SharedArrayImp<long long>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElongsPlonggR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPchargR))) {
     SharedArrayImp<unsigned char> *G__Lderived;
     G__Lderived=(SharedArrayImp<unsigned char>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPchargR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPshortgR))) {
     SharedArrayImp<unsigned short> *G__Lderived;
     G__Lderived=(SharedArrayImp<unsigned short>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPshortgR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPintgR))) {
     SharedArrayImp<unsigned int> *G__Lderived;
     G__Lderived=(SharedArrayImp<unsigned int>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPintgR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlonggR))) {
     SharedArrayImp<unsigned long> *G__Lderived;
     G__Lderived=(SharedArrayImp<unsigned long>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlonggR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlongsPlonggR))) {
     SharedArrayImp<unsigned long long> *G__Lderived;
     G__Lderived=(SharedArrayImp<unsigned long long>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlongsPlonggR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEchargR))) {
     SharedArray<char> *G__Lderived;
     G__Lderived=(SharedArray<char>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEchargR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEshortgR))) {
     SharedArray<short> *G__Lderived;
     G__Lderived=(SharedArray<short>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEshortgR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEintgR))) {
     SharedArray<int> *G__Lderived;
     G__Lderived=(SharedArray<int>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEintgR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElonggR))) {
     SharedArray<long> *G__Lderived;
     G__Lderived=(SharedArray<long>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElonggR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElongsPlonggR))) {
     SharedArray<long long> *G__Lderived;
     G__Lderived=(SharedArray<long long>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElongsPlonggR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEfloatgR))) {
     SharedArray<float> *G__Lderived;
     G__Lderived=(SharedArray<float>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEfloatgR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPchargR))) {
     SharedArray<unsigned char> *G__Lderived;
     G__Lderived=(SharedArray<unsigned char>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPchargR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPshortgR))) {
     SharedArray<unsigned short> *G__Lderived;
     G__Lderived=(SharedArray<unsigned short>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPshortgR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPintgR))) {
     SharedArray<unsigned int> *G__Lderived;
     G__Lderived=(SharedArray<unsigned int>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPintgR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlonggR))) {
     SharedArray<unsigned long> *G__Lderived;
     G__Lderived=(SharedArray<unsigned long>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlonggR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlongsPlonggR))) {
     SharedArray<unsigned long long> *G__Lderived;
     G__Lderived=(SharedArray<unsigned long long>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlongsPlonggR),G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablegammacomboCoreDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<std::string>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<string>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::string>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::string>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<std::pair<RooAbsArg*,RooAbsArg*> >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<pair<RooAbsArg*,RooAbsArg*> >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<pair<RooAbsArg*,RooAbsArg*> >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<pair<RooAbsArg*,RooAbsArg*>,less<pair<RooAbsArg*,RooAbsArg*> > >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<RooAbsCache*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<RooAbsArg*,TRefArray*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplERooAbsArgmUcOTRefArraymUcOlesslERooAbsArgmUgRcOallocatorlEpairlERooAbsArgmUsPconstcOTRefArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<RooAbsArg*,TRefArray*,less<RooAbsArg*> >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplERooAbsArgmUcOTRefArraymUcOlesslERooAbsArgmUgRcOallocatorlEpairlERooAbsArgmUsPconstcOTRefArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<RooAbsArg*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_dequelERooAbsArgmUcOallocatorlERooAbsArgmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stack<RooAbsArg*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_stacklERooAbsArgmUcOdequelERooAbsArgmUcOallocatorlERooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooCurve*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<Double_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_listlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TH1*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH1*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH1*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH1*,less<string> >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,RooDataHist*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataHist*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataHist*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataHist*,less<string> >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,RooDataSet*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataSet*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataSet*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataSet*,less<string> >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,RooAbsData*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooAbsData*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooAbsData*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooAbsData*,less<string> >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<EvalError>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<RooAbsReal::EvalError>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,std::list<EvalError> >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<string,std::list<EvalError> >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,std::pair<std::string,std::list<EvalError> > >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,std::pair<string,std::list<EvalError> > >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > > >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > >,less<const RooAbsArg*> >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pair>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<const RooArgSet*,const RooArgSet*> >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Pair,ULong_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlongcOlesslEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRcOallocatorlEpairlEconstsPpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<const RooArgSet*,const RooArgSet*>,unsigned long>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlongcOlesslEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRcOallocatorlEpairlEconstsPpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<pair<const RooArgSet*,const RooArgSet*>,unsigned long,less<pair<const RooArgSet*,const RooArgSet*> > >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlongcOlesslEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRcOallocatorlEpairlEconstsPpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlonggRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,std::string>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string,less<int> >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StreamConfig>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooMsgService::StreamConfig>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stack<std::vector<StreamConfig> >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stack<vector<StreamConfig> >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stack<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::ostream*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::ostream*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,basic_ostream<char,char_traits<char> >*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,basic_ostream<char,char_traits<char> >*,less<string> >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooNormSetCache>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooAbsCacheElement*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<std::string>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_listlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<string>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_listlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixDSym",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,int>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_pairlEstringcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<string,int>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_pairlEstringcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<std::string,int> >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<string,int> >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<string,int> >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,RooSharedProperties*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcORooSharedPropertiesmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooSharedPropertiesmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooSharedProperties*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcORooSharedPropertiesmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooSharedPropertiesmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooSharedProperties*>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcORooSharedPropertiesmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooSharedPropertiesmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooSharedProperties*,less<string> >",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_maplEstringcORooSharedPropertiesmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooSharedPropertiesmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* RooBinned2DBicubicBase<RooAbsReal> */
static void G__setup_memvarRooBinned2DBicubicBaselERooAbsRealgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgR));
   { RooBinned2DBicubicBase<RooAbsReal> *p; p=(RooBinned2DBicubicBase<RooAbsReal>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgRcLcLdA),-1,-2,4,"NCoeff=16LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgRcLcLdA),-1,-2,4,"CoeffRecLen=17LL",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooRealProxy),-1,-1,4,"x=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooRealProxy),-1,-1,4,"y=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nBinsX=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nBinsY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"binSizeX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"binSizeY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"xmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"xmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ymin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ymax=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEdoublegR),-1,-1,4,"coeffs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArray<double> */
static void G__setup_memvarSharedArraylEdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEdoublegR));
   { SharedArray<double> *p; p=(SharedArray<double>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEdoublegR),-1,-1,4,"pimpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArrayImp<double> */
static void G__setup_memvarSharedArrayImplEdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEdoublegR));
   { SharedArrayImp<double> *p; p=(SharedArrayImp<double>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"refcount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"arr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooBinned2DBicubicBase<RooAbsPdf> */
static void G__setup_memvarRooBinned2DBicubicBaselERooAbsPdfgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgR));
   { RooBinned2DBicubicBase<RooAbsPdf> *p; p=(RooBinned2DBicubicBase<RooAbsPdf>*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgRcLcLdA),-1,-2,4,"NCoeff=16LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgRcLcLdA),-1,-2,4,"CoeffRecLen=17LL",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooRealProxy),-1,-1,4,"x=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooRealProxy),-1,-1,4,"y=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nBinsX=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nBinsY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"binSizeX=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"binSizeY=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"xmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"xmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ymin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"ymax=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEdoublegR),-1,-1,4,"coeffs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooCrossCorPdf */
static void G__setup_memvarRooCrossCorPdf(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooCrossCorPdf));
   { RooCrossCorPdf *p; p=(RooCrossCorPdf*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooListProxy),-1,-1,2,"_th=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooListProxy),-1,-1,2,"_obs=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,2,"_invcov=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"_nObsPdf1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooHistPdfAngleVar */
static void G__setup_memvarRooHistPdfAngleVar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfAngleVar));
   { RooHistPdfAngleVar *p; p=(RooHistPdfAngleVar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooRealProxy),-1,-1,2,"xobs=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooRealProxy),-1,-1,2,"xth=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooRealProxy),-1,-1,2,"xshift=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooHistPdfVar */
static void G__setup_memvarRooHistPdfVar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfVar));
   { RooHistPdfVar *p; p=(RooHistPdfVar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooRealProxy),-1,-1,2,"xobs=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooRealProxy),-1,-1,2,"xth=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooRealProxy),-1,-1,2,"xshift=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooPoly3Var */
static void G__setup_memvarRooPoly3Var(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly3Var));
   { RooPoly3Var *p; p=(RooPoly3Var*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooRealProxy),-1,-1,2,"xobs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"p0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"p1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"p2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"p3=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooPoly4Var */
static void G__setup_memvarRooPoly4Var(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly4Var));
   { RooPoly4Var *p; p=(RooPoly4Var*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooRealProxy),-1,-1,2,"xobs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"p0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"p1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"p2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"p3=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"p4=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RooSlimFitResult */
static void G__setup_memvarRooSlimFitResult(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooSlimFitResult));
   { RooSlimFitResult *p; p=(RooSlimFitResult*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->_parsNames)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<string>"),-1,1,"_parsNames=",0,"variable names");
   G__memvar_setup((void*)((long)(&p->_parsFloatId)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"_parsFloatId=",0,"ID of floating parameter - this corresponds to the correlation matrix position");
   G__memvar_setup((void*)((long)(&p->_parsVal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"_parsVal=",0,"values of const parameters, index given by position in _variable names");
   G__memvar_setup((void*)((long)(&p->_parsErr)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"_parsErr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_parsAngle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEboolcOallocatorlEboolgRsPgR),G__defined_typename("vector<bool>"),-1,1,"_parsAngle=",0,"is it an angle?");
   G__memvar_setup((void*)((long)(&p->_parsConst)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEboolcOallocatorlEboolgRsPgR),G__defined_typename("vector<bool>"),-1,1,"_parsConst=",0,"is it constant?");
   G__memvar_setup((void*)((long)(&p->_edm)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"_edm=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_minNLL)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"_minNLL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_covQual)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"_covQual=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_status)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"_status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_correlationMatrix)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTSymlEdoublegR),G__defined_typename("TMatrixDSym"),-1,1,"_correlationMatrix=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_constParsDummy)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooArgList),-1,-1,1,"_constParsDummy=",0,"! <- The exlcamation mark turns off storing in a root file (marks the member transient)");
   G__memvar_setup((void*)((long)(&p->_floatParsFinalDummy)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooArgList),-1,-1,1,"_floatParsFinalDummy=",0,"! mutables can be changed in const methods");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"_isConfirmed=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArrayImp<char> */
static void G__setup_memvarSharedArrayImplEchargR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEchargR));
   { SharedArrayImp<char> *p; p=(SharedArrayImp<char>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"refcount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEcharcOallocatorlEchargRsPgR),G__defined_typename("vector<char>"),-1,4,"arr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArrayImp<short> */
static void G__setup_memvarSharedArrayImplEshortgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEshortgR));
   { SharedArrayImp<short> *p; p=(SharedArrayImp<short>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"refcount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<short>"),-1,4,"arr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArrayImp<int> */
static void G__setup_memvarSharedArrayImplEintgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEintgR));
   { SharedArrayImp<int> *p; p=(SharedArrayImp<int>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"refcount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"arr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArrayImp<float> */
static void G__setup_memvarSharedArrayImplEfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEfloatgR));
   { SharedArrayImp<float> *p; p=(SharedArrayImp<float>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"refcount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,4,"arr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArrayImp<long> */
static void G__setup_memvarSharedArrayImplElonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElonggR));
   { SharedArrayImp<long> *p; p=(SharedArrayImp<long>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"refcount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlElongcOallocatorlElonggRsPgR),G__defined_typename("vector<long>"),-1,4,"arr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArrayImp<long long> */
static void G__setup_memvarSharedArrayImplElongsPlonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElongsPlonggR));
   { SharedArrayImp<long long> *p; p=(SharedArrayImp<long long>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"refcount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR),G__defined_typename("vector<long long>"),-1,4,"arr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArrayImp<unsigned char> */
static void G__setup_memvarSharedArrayImplEunsignedsPchargR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPchargR));
   { SharedArrayImp<unsigned char> *p; p=(SharedArrayImp<unsigned char>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"refcount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR),G__defined_typename("vector<unsigned char>"),-1,4,"arr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArrayImp<unsigned short> */
static void G__setup_memvarSharedArrayImplEunsignedsPshortgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPshortgR));
   { SharedArrayImp<unsigned short> *p; p=(SharedArrayImp<unsigned short>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"refcount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<unsigned short>"),-1,4,"arr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArrayImp<unsigned int> */
static void G__setup_memvarSharedArrayImplEunsignedsPintgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPintgR));
   { SharedArrayImp<unsigned int> *p; p=(SharedArrayImp<unsigned int>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"refcount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,4,"arr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArrayImp<unsigned long> */
static void G__setup_memvarSharedArrayImplEunsignedsPlonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlonggR));
   { SharedArrayImp<unsigned long> *p; p=(SharedArrayImp<unsigned long>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"refcount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR),G__defined_typename("vector<unsigned long>"),-1,4,"arr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArrayImp<unsigned long long> */
static void G__setup_memvarSharedArrayImplEunsignedsPlongsPlonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlongsPlonggR));
   { SharedArrayImp<unsigned long long> *p; p=(SharedArrayImp<unsigned long long>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"refcount=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR),G__defined_typename("vector<unsigned long long>"),-1,4,"arr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArray<char> */
static void G__setup_memvarSharedArraylEchargR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEchargR));
   { SharedArray<char> *p; p=(SharedArray<char>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEchargR),-1,-1,4,"pimpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArray<short> */
static void G__setup_memvarSharedArraylEshortgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEshortgR));
   { SharedArray<short> *p; p=(SharedArray<short>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEshortgR),-1,-1,4,"pimpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArray<int> */
static void G__setup_memvarSharedArraylEintgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEintgR));
   { SharedArray<int> *p; p=(SharedArray<int>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEintgR),-1,-1,4,"pimpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArray<long> */
static void G__setup_memvarSharedArraylElonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElonggR));
   { SharedArray<long> *p; p=(SharedArray<long>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElonggR),-1,-1,4,"pimpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArray<long long> */
static void G__setup_memvarSharedArraylElongsPlonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElongsPlonggR));
   { SharedArray<long long> *p; p=(SharedArray<long long>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElongsPlonggR),-1,-1,4,"pimpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArray<float> */
static void G__setup_memvarSharedArraylEfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEfloatgR));
   { SharedArray<float> *p; p=(SharedArray<float>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEfloatgR),-1,-1,4,"pimpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArray<unsigned char> */
static void G__setup_memvarSharedArraylEunsignedsPchargR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPchargR));
   { SharedArray<unsigned char> *p; p=(SharedArray<unsigned char>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPchargR),-1,-1,4,"pimpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArray<unsigned short> */
static void G__setup_memvarSharedArraylEunsignedsPshortgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPshortgR));
   { SharedArray<unsigned short> *p; p=(SharedArray<unsigned short>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPshortgR),-1,-1,4,"pimpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArray<unsigned int> */
static void G__setup_memvarSharedArraylEunsignedsPintgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPintgR));
   { SharedArray<unsigned int> *p; p=(SharedArray<unsigned int>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPintgR),-1,-1,4,"pimpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArray<unsigned long> */
static void G__setup_memvarSharedArraylEunsignedsPlonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlonggR));
   { SharedArray<unsigned long> *p; p=(SharedArray<unsigned long>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlonggR),-1,-1,4,"pimpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SharedArray<unsigned long long> */
static void G__setup_memvarSharedArraylEunsignedsPlongsPlonggR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlongsPlonggR));
   { SharedArray<unsigned long long> *p; p=(SharedArray<unsigned long long>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlongsPlonggR),-1,-1,4,"pimpl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvargammacomboCoreDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncRooBinned2DBicubicBaselERooAbsRealgR(void) {
   /* RooBinned2DBicubicBase<RooAbsReal> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgR));
   G__memfunc_setup("RooBinned2DBicubicBase<RooAbsReal>",3174,G__gammacomboCoreDict_841_0_1, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooBinned2DBicubicBase<RooAbsReal>",3174,G__gammacomboCoreDict_841_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgR), -1, 0, 5, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'TH2' - 11 - h u 'RooAbsReal' - 1 - xvar "
"u 'RooAbsReal' - 1 - yvar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooBinned2DBicubicBase<RooAbsReal>",3174,G__gammacomboCoreDict_841_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgR), -1, 0, 2, 1, 1, 0, 
"u 'RooBinned2DBicubicBase<RooAbsReal>' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__gammacomboCoreDict_841_0_4, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgR), -1, 1, 1, 1, 1, 0, "u 'RooBinned2DBicubicBase<RooAbsReal>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - integVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("histcont",876,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 3, 1, 4, 8, 
"u 'TH2' - 11 - h i - - 0 - xbin "
"i - - 0 - ybin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dhistdx",760,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 3, 1, 4, 8, 
"u 'TH2' - 11 - h i - - 0 - xbin "
"i - - 0 - ybin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dhistdy",761,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 3, 1, 4, 8, 
"u 'TH2' - 11 - h i - - 0 - xbin "
"i - - 0 - ybin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("d2histdxdy",1031,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 3, 1, 4, 8, 
"u 'TH2' - 11 - h i - - 0 - xbin "
"i - - 0 - ybin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooAbsReal), -1, 1, 0, 1, 4, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooAbsReal), -1, 1, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("coeff",515,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEdoublegRcLcLRWProxy), -1, 0, 3, 1, 4, 8, 
"i - - 0 - binx i - - 0 - biny "
"i - - 0 - coeff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("coeff",515,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEdoublegRcLcLRWProxy), -1, 0, 3, 1, 4, 0, 
"i - - 0 - binx i - - 0 - biny "
"i - - 0 - coeff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eval",424,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 1, 4, 8, 
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("evalX",512,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 3, 1, 4, 8, 
"d - - 0 - x1 d - - 0 - x2 "
"d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("evalY",513,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 3, 1, 4, 8, 
"d - - 0 - x d - - 0 - y1 "
"d - - 0 - y2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("evalXY",601,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 4, 1, 4, 8, 
"d - - 0 - x1 d - - 0 - x2 "
"d - - 0 - y1 d - - 0 - y2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_841_0_21, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooBinned2DBicubicBase<RooAbsReal>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_841_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooBinned2DBicubicBase<RooAbsReal>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_841_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooBinned2DBicubicBase<RooAbsReal>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_841_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooBinned2DBicubicBase<RooAbsReal>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_841_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_841_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooBinned2DBicubicBase<RooAbsReal>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_841_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooBinned2DBicubicBase<RooAbsReal>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_841_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooBinned2DBicubicBase<RooAbsReal>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_841_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooBinned2DBicubicBase<RooAbsReal>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooBinned2DBicubicBase<RooAbsReal>", 3300, G__gammacomboCoreDict_841_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArraylEdoublegR(void) {
   /* SharedArray<double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEdoublegR));
   G__memfunc_setup("SharedArray<double>",1867,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEdoublegR), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<double>",1867,G__gammacomboCoreDict_844_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEdoublegR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<double>",1867,G__gammacomboCoreDict_844_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEdoublegR), -1, 0, 1, 1, 1, 0, "u 'SharedArray<double>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEdoublegR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__gammacomboCoreDict_844_0_5, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEdoublegR), -1, 1, 1, 1, 1, 0, "u 'SharedArray<double>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_844_0_6, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_844_0_7, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEdoublegRcLcLRWProxy), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_844_0_8, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEdoublegRcLcLRWProxy), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("triggerCOW",989,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_844_0_10, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArray<double>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_844_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<double>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_844_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArray<double>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_844_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArray<double>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_844_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_844_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<double>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_844_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<double>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_844_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<double>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_844_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<double>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArray<double>", 1993, G__gammacomboCoreDict_844_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArrayImplEdoublegR(void) {
   /* SharedArrayImp<double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEdoublegR));
   G__memfunc_setup("SharedArrayImp<double>",2161,G__gammacomboCoreDict_846_0_1, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEdoublegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<double>",2161,G__gammacomboCoreDict_846_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEdoublegR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<double>",2161,G__gammacomboCoreDict_846_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEdoublegR), -1, 0, 1, 1, 1, 0, "u 'SharedArrayImp<double>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEdoublegR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("refCount",838,G__gammacomboCoreDict_846_0_5, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("acquire",746,G__gammacomboCoreDict_846_0_6, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEdoublegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("release",737,G__gammacomboCoreDict_846_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_846_0_8, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_846_0_9, 100, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_846_0_10, 100, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_846_0_11, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArrayImp<double>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_846_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<double>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_846_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArrayImp<double>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_846_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArrayImp<double>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_846_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_846_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<double>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_846_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<double>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_846_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<double>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_846_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<double>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArrayImp<double>", 2287, G__gammacomboCoreDict_846_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__gammacomboCoreDict_846_0_24, (int) ('u'), G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEdoublegR), -1, 1, 1, 1, 1, 0, "u 'SharedArrayImp<double>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooBinned2DBicubicBaselERooAbsPdfgR(void) {
   /* RooBinned2DBicubicBase<RooAbsPdf> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgR));
   G__memfunc_setup("RooBinned2DBicubicBase<RooAbsPdf>",3068,G__gammacomboCoreDict_847_0_1, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooBinned2DBicubicBase<RooAbsPdf>",3068,G__gammacomboCoreDict_847_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgR), -1, 0, 5, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'TH2' - 11 - h u 'RooAbsReal' - 1 - xvar "
"u 'RooAbsReal' - 1 - yvar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooBinned2DBicubicBase<RooAbsPdf>",3068,G__gammacomboCoreDict_847_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgR), -1, 0, 2, 1, 1, 0, 
"u 'RooBinned2DBicubicBase<RooAbsPdf>' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__gammacomboCoreDict_847_0_4, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgR), -1, 1, 1, 1, 1, 0, "u 'RooBinned2DBicubicBase<RooAbsPdf>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - integVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("histcont",876,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 3, 1, 4, 8, 
"u 'TH2' - 11 - h i - - 0 - xbin "
"i - - 0 - ybin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dhistdx",760,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 3, 1, 4, 8, 
"u 'TH2' - 11 - h i - - 0 - xbin "
"i - - 0 - ybin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dhistdy",761,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 3, 1, 4, 8, 
"u 'TH2' - 11 - h i - - 0 - xbin "
"i - - 0 - ybin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("d2histdxdy",1031,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 3, 1, 4, 8, 
"u 'TH2' - 11 - h i - - 0 - xbin "
"i - - 0 - ybin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooAbsPdf), -1, 1, 0, 1, 4, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("base",411,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooAbsPdf), -1, 1, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("coeff",515,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEdoublegRcLcLRWProxy), -1, 0, 3, 1, 4, 8, 
"i - - 0 - binx i - - 0 - biny "
"i - - 0 - coeff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("coeff",515,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEdoublegRcLcLRWProxy), -1, 0, 3, 1, 4, 0, 
"i - - 0 - binx i - - 0 - biny "
"i - - 0 - coeff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eval",424,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 1, 4, 8, 
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("evalX",512,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 3, 1, 4, 8, 
"d - - 0 - x1 d - - 0 - x2 "
"d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("evalY",513,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 3, 1, 4, 8, 
"d - - 0 - x d - - 0 - y1 "
"d - - 0 - y2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("evalXY",601,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 4, 1, 4, 8, 
"d - - 0 - x1 d - - 0 - x2 "
"d - - 0 - y1 d - - 0 - y2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_847_0_21, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooBinned2DBicubicBase<RooAbsPdf>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_847_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooBinned2DBicubicBase<RooAbsPdf>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_847_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooBinned2DBicubicBase<RooAbsPdf>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_847_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooBinned2DBicubicBase<RooAbsPdf>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_847_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_847_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooBinned2DBicubicBase<RooAbsPdf>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_847_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooBinned2DBicubicBase<RooAbsPdf>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_847_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooBinned2DBicubicBase<RooAbsPdf>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_847_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooBinned2DBicubicBase<RooAbsPdf>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooBinned2DBicubicBase<RooAbsPdf>", 3194, G__gammacomboCoreDict_847_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooCrossCorPdf(void) {
   /* RooCrossCorPdf */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooCrossCorPdf));
   G__memfunc_setup("RooCrossCorPdf",1400,G__gammacomboCoreDict_911_0_1, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooCrossCorPdf), -1, 0, 6, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooArgList' - 11 - th u 'RooArgList' - 11 - obs "
"u 'TMatrixTSym<double>' 'TMatrixDSym' 11 - invcov i - - 0 - nObsPdf1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooCrossCorPdf",1400,G__gammacomboCoreDict_911_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooCrossCorPdf), -1, 0, 2, 1, 1, 0, 
"u 'RooCrossCorPdf' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_911_0_5, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooCrossCorPdf::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_911_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooCrossCorPdf::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_911_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooCrossCorPdf::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_911_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooCrossCorPdf::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_911_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_911_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooCrossCorPdf::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_911_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooCrossCorPdf::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_911_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooCrossCorPdf::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_911_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooCrossCorPdf::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooCrossCorPdf", 1526, G__gammacomboCoreDict_911_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooHistPdfAngleVar(void) {
   /* RooHistPdfAngleVar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfAngleVar));
   G__memfunc_setup("RooHistPdfAngleVar",1778,G__gammacomboCoreDict_915_0_1, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfAngleVar), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooHistPdfAngleVar",1778,G__gammacomboCoreDict_915_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfAngleVar), -1, 0, 5, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _xobs u 'RooAbsReal' - 1 - _xth "
"u 'RooAbsReal' - 1 - _xshift", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooHistPdfAngleVar",1778,G__gammacomboCoreDict_915_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfAngleVar), -1, 0, 2, 1, 1, 0, 
"u 'RooHistPdfAngleVar' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_915_0_6, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooHistPdfAngleVar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_915_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooHistPdfAngleVar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_915_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooHistPdfAngleVar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_915_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooHistPdfAngleVar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_915_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_915_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooHistPdfAngleVar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_915_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooHistPdfAngleVar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_915_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooHistPdfAngleVar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_915_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooHistPdfAngleVar::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooHistPdfAngleVar", 1904, G__gammacomboCoreDict_915_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooHistPdfVar(void) {
   /* RooHistPdfVar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfVar));
   G__memfunc_setup("RooHistPdfVar",1291,G__gammacomboCoreDict_916_0_1, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfVar), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooHistPdfVar",1291,G__gammacomboCoreDict_916_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfVar), -1, 0, 5, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _xobs u 'RooAbsReal' - 1 - _xth "
"u 'RooAbsReal' - 1 - _xshift", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooHistPdfVar",1291,G__gammacomboCoreDict_916_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooHistPdfVar), -1, 0, 2, 1, 1, 0, 
"u 'RooHistPdfVar' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_916_0_6, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooHistPdfVar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_916_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooHistPdfVar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_916_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooHistPdfVar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_916_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooHistPdfVar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_916_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_916_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooHistPdfVar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_916_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooHistPdfVar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_916_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooHistPdfVar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_916_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooHistPdfVar::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooHistPdfVar", 1417, G__gammacomboCoreDict_916_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooPoly3Var(void) {
   /* RooPoly3Var */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly3Var));
   G__memfunc_setup("RooPoly3Var",1072,G__gammacomboCoreDict_917_0_1, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly3Var), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooPoly3Var",1072,G__gammacomboCoreDict_917_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly3Var), -1, 0, 7, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _xobs d - - 1 - _p0 "
"d - - 1 - _p1 d - - 1 - _p2 "
"d - - 1 - _p3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooPoly3Var",1072,G__gammacomboCoreDict_917_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly3Var), -1, 0, 2, 1, 1, 0, 
"u 'RooPoly3Var' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_917_0_6, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooPoly3Var::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_917_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooPoly3Var::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_917_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooPoly3Var::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_917_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooPoly3Var::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_917_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_917_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooPoly3Var::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_917_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooPoly3Var::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_917_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooPoly3Var::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_917_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooPoly3Var::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooPoly3Var", 1198, G__gammacomboCoreDict_917_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooPoly4Var(void) {
   /* RooPoly4Var */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly4Var));
   G__memfunc_setup("RooPoly4Var",1073,G__gammacomboCoreDict_918_0_1, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly4Var), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooPoly4Var",1073,G__gammacomboCoreDict_918_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly4Var), -1, 0, 8, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _xobs d - - 1 - _p0 "
"d - - 1 - _p1 d - - 1 - _p2 "
"d - - 1 - _p3 d - - 1 - _p4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooPoly4Var",1073,G__gammacomboCoreDict_918_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooPoly4Var), -1, 0, 2, 1, 1, 0, 
"u 'RooPoly4Var' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_918_0_6, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooPoly4Var::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_918_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooPoly4Var::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_918_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooPoly4Var::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_918_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooPoly4Var::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_918_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_918_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooPoly4Var::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_918_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooPoly4Var::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_918_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooPoly4Var::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_918_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooPoly4Var::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooPoly4Var", 1199, G__gammacomboCoreDict_918_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRooSlimFitResult(void) {
   /* RooSlimFitResult */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooSlimFitResult));
   G__memfunc_setup("RooSlimFitResult",1639,G__gammacomboCoreDict_942_0_1, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooSlimFitResult), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooSlimFitResult",1639,G__gammacomboCoreDict_942_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooSlimFitResult), -1, 0, 2, 1, 1, 0, 
"U 'RooFitResult' - 0 - r g - - 0 'false' storeCorrelation", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooSlimFitResult",1639,G__gammacomboCoreDict_942_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooSlimFitResult), -1, 0, 1, 1, 1, 0, "U 'RooSlimFitResult' - 0 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RooSlimFitResult",1639,G__gammacomboCoreDict_942_0_4, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooSlimFitResult), -1, 0, 1, 1, 1, 0, "u 'RooSlimFitResult' - 11 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,G__gammacomboCoreDict_942_0_5, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooSlimFitResult), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("constPars",957,G__gammacomboCoreDict_942_0_6, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooArgList), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("correlationMatrix",1815,G__gammacomboCoreDict_942_0_7, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TMatrixTSymlEdoublegR), G__defined_typename("TMatrixDSym"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("covQual",731,G__gammacomboCoreDict_942_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("edm",310,G__gammacomboCoreDict_942_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("floatParsFinal",1430,G__gammacomboCoreDict_942_0_10, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooArgList), -1, 1, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParVal",902,G__gammacomboCoreDict_942_0_11, 102, -1, -1, 0, 1, 1, 1, 8, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParErr",908,G__gammacomboCoreDict_942_0_12, 102, -1, -1, 0, 1, 1, 1, 8, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getConstParVal",1421,G__gammacomboCoreDict_942_0_13, 102, -1, -1, 0, 1, 1, 1, 8, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFloatParFinalVal",1894,G__gammacomboCoreDict_942_0_14, 102, -1, -1, 0, 1, 1, 1, 8, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasParameter",1245,G__gammacomboCoreDict_942_0_15, 103, -1, -1, 0, 1, 1, 1, 8, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isConfirmed",1139,G__gammacomboCoreDict_942_0_16, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("minNll",618,G__gammacomboCoreDict_942_0_17, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__gammacomboCoreDict_942_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"g - - 0 'false' verbose g - - 0 'false' printcor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setConfirmed",1251,G__gammacomboCoreDict_942_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("status",676,G__gammacomboCoreDict_942_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isAngle",707,G__gammacomboCoreDict_942_0_21, 103, -1, -1, 0, 1, 1, 1, 0, "U 'RooRealVar' - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_942_0_22, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RooSlimFitResult::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_942_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooSlimFitResult::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_942_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RooSlimFitResult::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_942_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RooSlimFitResult::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_942_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_942_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooSlimFitResult::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_942_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooSlimFitResult::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_942_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RooSlimFitResult::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_942_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RooSlimFitResult::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RooSlimFitResult", 1765, G__gammacomboCoreDict_942_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__gammacomboCoreDict_942_0_35, (int) ('u'), G__get_linked_tagnum(&G__gammacomboCoreDictLN_RooSlimFitResult), -1, 1, 1, 1, 1, 0, "u 'RooSlimFitResult' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArrayImplEchargR(void) {
   /* SharedArrayImp<char> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEchargR));
   G__memfunc_setup("SharedArrayImp<char>",1940,G__gammacomboCoreDict_949_0_1, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEchargR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<char>",1940,G__gammacomboCoreDict_949_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEchargR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<char>",1940,G__gammacomboCoreDict_949_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEchargR), -1, 0, 1, 1, 1, 0, "u 'SharedArrayImp<char>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEchargR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("refCount",838,G__gammacomboCoreDict_949_0_5, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("acquire",746,G__gammacomboCoreDict_949_0_6, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEchargR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("release",737,G__gammacomboCoreDict_949_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_949_0_8, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_949_0_9, 99, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_949_0_10, 99, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_949_0_11, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArrayImp<char>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_949_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<char>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_949_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArrayImp<char>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_949_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArrayImp<char>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_949_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_949_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<char>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_949_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<char>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_949_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<char>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_949_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<char>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArrayImp<char>", 2066, G__gammacomboCoreDict_949_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__gammacomboCoreDict_949_0_24, (int) ('u'), G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEchargR), -1, 1, 1, 1, 1, 0, "u 'SharedArrayImp<char>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArrayImplEshortgR(void) {
   /* SharedArrayImp<short> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEshortgR));
   G__memfunc_setup("SharedArrayImp<short>",2086,G__gammacomboCoreDict_950_0_1, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEshortgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<short>",2086,G__gammacomboCoreDict_950_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEshortgR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<short>",2086,G__gammacomboCoreDict_950_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEshortgR), -1, 0, 1, 1, 1, 0, "u 'SharedArrayImp<short>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEshortgR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("refCount",838,G__gammacomboCoreDict_950_0_5, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("acquire",746,G__gammacomboCoreDict_950_0_6, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEshortgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("release",737,G__gammacomboCoreDict_950_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_950_0_8, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_950_0_9, 115, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_950_0_10, 115, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_950_0_11, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArrayImp<short>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_950_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<short>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_950_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArrayImp<short>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_950_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArrayImp<short>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_950_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_950_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<short>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_950_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<short>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_950_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<short>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_950_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<short>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArrayImp<short>", 2212, G__gammacomboCoreDict_950_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__gammacomboCoreDict_950_0_24, (int) ('u'), G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEshortgR), -1, 1, 1, 1, 1, 0, "u 'SharedArrayImp<short>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArrayImplEintgR(void) {
   /* SharedArrayImp<int> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEintgR));
   G__memfunc_setup("SharedArrayImp<int>",1857,G__gammacomboCoreDict_951_0_1, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEintgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<int>",1857,G__gammacomboCoreDict_951_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEintgR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<int>",1857,G__gammacomboCoreDict_951_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEintgR), -1, 0, 1, 1, 1, 0, "u 'SharedArrayImp<int>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEintgR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("refCount",838,G__gammacomboCoreDict_951_0_5, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("acquire",746,G__gammacomboCoreDict_951_0_6, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEintgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("release",737,G__gammacomboCoreDict_951_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_951_0_8, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_951_0_9, 105, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_951_0_10, 105, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_951_0_11, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArrayImp<int>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_951_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<int>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_951_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArrayImp<int>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_951_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArrayImp<int>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_951_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_951_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<int>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_951_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<int>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_951_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<int>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_951_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<int>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArrayImp<int>", 1983, G__gammacomboCoreDict_951_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__gammacomboCoreDict_951_0_24, (int) ('u'), G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEintgR), -1, 1, 1, 1, 1, 0, "u 'SharedArrayImp<int>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArrayImplEfloatgR(void) {
   /* SharedArrayImp<float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEfloatgR));
   G__memfunc_setup("SharedArrayImp<float>",2060,G__gammacomboCoreDict_952_0_1, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEfloatgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<float>",2060,G__gammacomboCoreDict_952_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEfloatgR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<float>",2060,G__gammacomboCoreDict_952_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEfloatgR), -1, 0, 1, 1, 1, 0, "u 'SharedArrayImp<float>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEfloatgR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("refCount",838,G__gammacomboCoreDict_952_0_5, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("acquire",746,G__gammacomboCoreDict_952_0_6, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEfloatgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("release",737,G__gammacomboCoreDict_952_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_952_0_8, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_952_0_9, 102, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_952_0_10, 102, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_952_0_11, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArrayImp<float>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_952_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<float>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_952_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArrayImp<float>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_952_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArrayImp<float>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_952_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_952_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<float>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_952_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<float>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_952_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<float>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_952_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<float>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArrayImp<float>", 2186, G__gammacomboCoreDict_952_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__gammacomboCoreDict_952_0_24, (int) ('u'), G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEfloatgR), -1, 1, 1, 1, 1, 0, "u 'SharedArrayImp<float>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArrayImplElonggR(void) {
   /* SharedArrayImp<long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElonggR));
   G__memfunc_setup("SharedArrayImp<long>",1958,G__gammacomboCoreDict_953_0_1, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElonggR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<long>",1958,G__gammacomboCoreDict_953_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElonggR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<long>",1958,G__gammacomboCoreDict_953_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElonggR), -1, 0, 1, 1, 1, 0, "u 'SharedArrayImp<long>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElonggR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("refCount",838,G__gammacomboCoreDict_953_0_5, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("acquire",746,G__gammacomboCoreDict_953_0_6, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElonggR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("release",737,G__gammacomboCoreDict_953_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_953_0_8, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_953_0_9, 108, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_953_0_10, 108, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_953_0_11, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArrayImp<long>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_953_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<long>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_953_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArrayImp<long>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_953_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArrayImp<long>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_953_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_953_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<long>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_953_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<long>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_953_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<long>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_953_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<long>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArrayImp<long>", 2084, G__gammacomboCoreDict_953_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__gammacomboCoreDict_953_0_24, (int) ('u'), G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElonggR), -1, 1, 1, 1, 1, 0, "u 'SharedArrayImp<long>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArrayImplElongsPlonggR(void) {
   /* SharedArrayImp<long long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElongsPlonggR));
   G__memfunc_setup("SharedArrayImp<long long>",2422,G__gammacomboCoreDict_954_0_1, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElongsPlonggR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<long long>",2422,G__gammacomboCoreDict_954_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElongsPlonggR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<long long>",2422,G__gammacomboCoreDict_954_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElongsPlonggR), -1, 0, 1, 1, 1, 0, "u 'SharedArrayImp<long long>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElongsPlonggR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("refCount",838,G__gammacomboCoreDict_954_0_5, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("acquire",746,G__gammacomboCoreDict_954_0_6, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElongsPlonggR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("release",737,G__gammacomboCoreDict_954_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_954_0_8, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_954_0_9, 110, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_954_0_10, 110, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_954_0_11, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArrayImp<long long>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_954_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<long long>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_954_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArrayImp<long long>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_954_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArrayImp<long long>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_954_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_954_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<long long>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_954_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<long long>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_954_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<long long>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_954_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<long long>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArrayImp<long long>", 2548, G__gammacomboCoreDict_954_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__gammacomboCoreDict_954_0_24, (int) ('u'), G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplElongsPlonggR), -1, 1, 1, 1, 1, 0, "u 'SharedArrayImp<long long>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArrayImplEunsignedsPchargR(void) {
   /* SharedArrayImp<unsigned char> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPchargR));
   G__memfunc_setup("SharedArrayImp<unsigned char>",2833,G__gammacomboCoreDict_955_0_1, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPchargR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<unsigned char>",2833,G__gammacomboCoreDict_955_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPchargR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<unsigned char>",2833,G__gammacomboCoreDict_955_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPchargR), -1, 0, 1, 1, 1, 0, "u 'SharedArrayImp<unsigned char>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPchargR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("refCount",838,G__gammacomboCoreDict_955_0_5, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("acquire",746,G__gammacomboCoreDict_955_0_6, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPchargR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("release",737,G__gammacomboCoreDict_955_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_955_0_8, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_955_0_9, 98, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_955_0_10, 98, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_955_0_11, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArrayImp<unsigned char>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_955_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<unsigned char>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_955_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArrayImp<unsigned char>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_955_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArrayImp<unsigned char>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_955_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_955_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<unsigned char>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_955_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<unsigned char>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_955_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<unsigned char>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_955_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<unsigned char>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArrayImp<unsigned char>", 2959, G__gammacomboCoreDict_955_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__gammacomboCoreDict_955_0_24, (int) ('u'), G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPchargR), -1, 1, 1, 1, 1, 0, "u 'SharedArrayImp<unsigned char>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArrayImplEunsignedsPshortgR(void) {
   /* SharedArrayImp<unsigned short> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPshortgR));
   G__memfunc_setup("SharedArrayImp<unsigned short>",2979,G__gammacomboCoreDict_956_0_1, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPshortgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<unsigned short>",2979,G__gammacomboCoreDict_956_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPshortgR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<unsigned short>",2979,G__gammacomboCoreDict_956_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPshortgR), -1, 0, 1, 1, 1, 0, "u 'SharedArrayImp<unsigned short>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPshortgR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("refCount",838,G__gammacomboCoreDict_956_0_5, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("acquire",746,G__gammacomboCoreDict_956_0_6, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPshortgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("release",737,G__gammacomboCoreDict_956_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_956_0_8, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_956_0_9, 114, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_956_0_10, 114, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_956_0_11, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArrayImp<unsigned short>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_956_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<unsigned short>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_956_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArrayImp<unsigned short>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_956_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArrayImp<unsigned short>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_956_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_956_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<unsigned short>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_956_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<unsigned short>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_956_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<unsigned short>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_956_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<unsigned short>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArrayImp<unsigned short>", 3105, G__gammacomboCoreDict_956_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__gammacomboCoreDict_956_0_24, (int) ('u'), G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPshortgR), -1, 1, 1, 1, 1, 0, "u 'SharedArrayImp<unsigned short>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArrayImplEunsignedsPintgR(void) {
   /* SharedArrayImp<unsigned int> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPintgR));
   G__memfunc_setup("SharedArrayImp<unsigned int>",2750,G__gammacomboCoreDict_957_0_1, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPintgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<unsigned int>",2750,G__gammacomboCoreDict_957_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPintgR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<unsigned int>",2750,G__gammacomboCoreDict_957_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPintgR), -1, 0, 1, 1, 1, 0, "u 'SharedArrayImp<unsigned int>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPintgR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("refCount",838,G__gammacomboCoreDict_957_0_5, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("acquire",746,G__gammacomboCoreDict_957_0_6, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPintgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("release",737,G__gammacomboCoreDict_957_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_957_0_8, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_957_0_9, 104, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_957_0_10, 104, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_957_0_11, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArrayImp<unsigned int>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_957_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<unsigned int>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_957_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArrayImp<unsigned int>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_957_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArrayImp<unsigned int>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_957_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_957_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<unsigned int>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_957_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<unsigned int>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_957_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<unsigned int>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_957_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<unsigned int>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArrayImp<unsigned int>", 2876, G__gammacomboCoreDict_957_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__gammacomboCoreDict_957_0_24, (int) ('u'), G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPintgR), -1, 1, 1, 1, 1, 0, "u 'SharedArrayImp<unsigned int>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArrayImplEunsignedsPlonggR(void) {
   /* SharedArrayImp<unsigned long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlonggR));
   G__memfunc_setup("SharedArrayImp<unsigned long>",2851,G__gammacomboCoreDict_958_0_1, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlonggR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<unsigned long>",2851,G__gammacomboCoreDict_958_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlonggR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<unsigned long>",2851,G__gammacomboCoreDict_958_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlonggR), -1, 0, 1, 1, 1, 0, "u 'SharedArrayImp<unsigned long>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlonggR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("refCount",838,G__gammacomboCoreDict_958_0_5, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("acquire",746,G__gammacomboCoreDict_958_0_6, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlonggR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("release",737,G__gammacomboCoreDict_958_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_958_0_8, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_958_0_9, 107, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_958_0_10, 107, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_958_0_11, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArrayImp<unsigned long>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_958_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<unsigned long>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_958_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArrayImp<unsigned long>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_958_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArrayImp<unsigned long>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_958_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_958_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<unsigned long>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_958_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<unsigned long>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_958_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<unsigned long>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_958_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<unsigned long>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArrayImp<unsigned long>", 2977, G__gammacomboCoreDict_958_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__gammacomboCoreDict_958_0_24, (int) ('u'), G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlonggR), -1, 1, 1, 1, 1, 0, "u 'SharedArrayImp<unsigned long>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArrayImplEunsignedsPlongsPlonggR(void) {
   /* SharedArrayImp<unsigned long long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlongsPlonggR));
   G__memfunc_setup("SharedArrayImp<unsigned long long>",3315,G__gammacomboCoreDict_959_0_1, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlongsPlonggR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<unsigned long long>",3315,G__gammacomboCoreDict_959_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlongsPlonggR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArrayImp<unsigned long long>",3315,G__gammacomboCoreDict_959_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlongsPlonggR), -1, 0, 1, 1, 1, 0, "u 'SharedArrayImp<unsigned long long>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlongsPlonggR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("refCount",838,G__gammacomboCoreDict_959_0_5, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("acquire",746,G__gammacomboCoreDict_959_0_6, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlongsPlonggR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("release",737,G__gammacomboCoreDict_959_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_959_0_8, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_959_0_9, 109, -1, -1, 1, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_959_0_10, 109, -1, -1, 1, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_959_0_11, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArrayImp<unsigned long long>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_959_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<unsigned long long>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_959_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArrayImp<unsigned long long>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_959_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArrayImp<unsigned long long>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_959_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_959_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<unsigned long long>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_959_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<unsigned long long>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_959_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArrayImp<unsigned long long>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_959_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArrayImp<unsigned long long>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArrayImp<unsigned long long>", 3441, G__gammacomboCoreDict_959_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__gammacomboCoreDict_959_0_24, (int) ('u'), G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlongsPlonggR), -1, 1, 1, 1, 1, 0, "u 'SharedArrayImp<unsigned long long>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArraylEchargR(void) {
   /* SharedArray<char> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEchargR));
   G__memfunc_setup("SharedArray<char>",1646,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEchargR), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<char>",1646,G__gammacomboCoreDict_960_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEchargR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<char>",1646,G__gammacomboCoreDict_960_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEchargR), -1, 0, 1, 1, 1, 0, "u 'SharedArray<char>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEchargR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__gammacomboCoreDict_960_0_5, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEchargR), -1, 1, 1, 1, 1, 0, "u 'SharedArray<char>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_960_0_6, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_960_0_7, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEchargRcLcLRWProxy), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_960_0_8, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEchargRcLcLRWProxy), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("triggerCOW",989,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_960_0_10, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArray<char>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_960_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<char>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_960_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArray<char>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_960_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArray<char>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_960_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_960_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<char>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_960_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<char>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_960_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<char>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_960_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<char>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArray<char>", 1772, G__gammacomboCoreDict_960_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArraylEshortgR(void) {
   /* SharedArray<short> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEshortgR));
   G__memfunc_setup("SharedArray<short>",1792,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEshortgR), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<short>",1792,G__gammacomboCoreDict_962_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEshortgR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<short>",1792,G__gammacomboCoreDict_962_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEshortgR), -1, 0, 1, 1, 1, 0, "u 'SharedArray<short>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEshortgR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__gammacomboCoreDict_962_0_5, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEshortgR), -1, 1, 1, 1, 1, 0, "u 'SharedArray<short>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_962_0_6, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_962_0_7, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEshortgRcLcLRWProxy), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_962_0_8, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEshortgRcLcLRWProxy), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("triggerCOW",989,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_962_0_10, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArray<short>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_962_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<short>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_962_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArray<short>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_962_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArray<short>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_962_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_962_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<short>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_962_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<short>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_962_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<short>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_962_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<short>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArray<short>", 1918, G__gammacomboCoreDict_962_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArraylEintgR(void) {
   /* SharedArray<int> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEintgR));
   G__memfunc_setup("SharedArray<int>",1563,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEintgR), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<int>",1563,G__gammacomboCoreDict_964_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEintgR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<int>",1563,G__gammacomboCoreDict_964_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEintgR), -1, 0, 1, 1, 1, 0, "u 'SharedArray<int>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEintgR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__gammacomboCoreDict_964_0_5, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEintgR), -1, 1, 1, 1, 1, 0, "u 'SharedArray<int>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_964_0_6, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_964_0_7, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEintgRcLcLRWProxy), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_964_0_8, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEintgRcLcLRWProxy), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("triggerCOW",989,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_964_0_10, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArray<int>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_964_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<int>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_964_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArray<int>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_964_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArray<int>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_964_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_964_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<int>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_964_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<int>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_964_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<int>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_964_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<int>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArray<int>", 1689, G__gammacomboCoreDict_964_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArraylElonggR(void) {
   /* SharedArray<long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElonggR));
   G__memfunc_setup("SharedArray<long>",1664,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElonggR), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<long>",1664,G__gammacomboCoreDict_966_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElonggR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<long>",1664,G__gammacomboCoreDict_966_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElonggR), -1, 0, 1, 1, 1, 0, "u 'SharedArray<long>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElonggR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__gammacomboCoreDict_966_0_5, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElonggR), -1, 1, 1, 1, 1, 0, "u 'SharedArray<long>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_966_0_6, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_966_0_7, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElonggRcLcLRWProxy), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_966_0_8, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElonggRcLcLRWProxy), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("triggerCOW",989,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_966_0_10, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArray<long>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_966_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<long>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_966_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArray<long>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_966_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArray<long>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_966_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_966_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<long>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_966_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<long>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_966_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<long>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_966_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<long>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArray<long>", 1790, G__gammacomboCoreDict_966_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArraylElongsPlonggR(void) {
   /* SharedArray<long long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElongsPlonggR));
   G__memfunc_setup("SharedArray<long long>",2128,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElongsPlonggR), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<long long>",2128,G__gammacomboCoreDict_968_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElongsPlonggR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<long long>",2128,G__gammacomboCoreDict_968_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElongsPlonggR), -1, 0, 1, 1, 1, 0, "u 'SharedArray<long long>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElongsPlonggR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__gammacomboCoreDict_968_0_5, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElongsPlonggR), -1, 1, 1, 1, 1, 0, "u 'SharedArray<long long>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_968_0_6, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_968_0_7, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElongsPlonggRcLcLRWProxy), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_968_0_8, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylElongsPlonggRcLcLRWProxy), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("triggerCOW",989,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_968_0_10, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArray<long long>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_968_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<long long>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_968_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArray<long long>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_968_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArray<long long>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_968_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_968_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<long long>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_968_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<long long>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_968_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<long long>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_968_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<long long>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArray<long long>", 2254, G__gammacomboCoreDict_968_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArraylEfloatgR(void) {
   /* SharedArray<float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEfloatgR));
   G__memfunc_setup("SharedArray<float>",1766,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEfloatgR), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<float>",1766,G__gammacomboCoreDict_970_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEfloatgR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<float>",1766,G__gammacomboCoreDict_970_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEfloatgR), -1, 0, 1, 1, 1, 0, "u 'SharedArray<float>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEfloatgR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__gammacomboCoreDict_970_0_5, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEfloatgR), -1, 1, 1, 1, 1, 0, "u 'SharedArray<float>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_970_0_6, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_970_0_7, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEfloatgRcLcLRWProxy), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_970_0_8, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEfloatgRcLcLRWProxy), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("triggerCOW",989,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_970_0_10, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArray<float>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_970_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<float>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_970_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArray<float>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_970_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArray<float>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_970_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_970_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<float>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_970_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<float>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_970_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<float>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_970_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<float>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArray<float>", 1892, G__gammacomboCoreDict_970_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArraylEunsignedsPchargR(void) {
   /* SharedArray<unsigned char> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPchargR));
   G__memfunc_setup("SharedArray<unsigned char>",2539,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPchargR), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<unsigned char>",2539,G__gammacomboCoreDict_972_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPchargR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<unsigned char>",2539,G__gammacomboCoreDict_972_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPchargR), -1, 0, 1, 1, 1, 0, "u 'SharedArray<unsigned char>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPchargR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__gammacomboCoreDict_972_0_5, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPchargR), -1, 1, 1, 1, 1, 0, "u 'SharedArray<unsigned char>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_972_0_6, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_972_0_7, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPchargRcLcLRWProxy), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_972_0_8, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPchargRcLcLRWProxy), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("triggerCOW",989,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_972_0_10, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArray<unsigned char>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_972_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<unsigned char>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_972_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArray<unsigned char>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_972_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArray<unsigned char>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_972_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_972_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<unsigned char>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_972_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<unsigned char>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_972_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<unsigned char>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_972_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<unsigned char>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArray<unsigned char>", 2665, G__gammacomboCoreDict_972_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArraylEunsignedsPshortgR(void) {
   /* SharedArray<unsigned short> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPshortgR));
   G__memfunc_setup("SharedArray<unsigned short>",2685,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPshortgR), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<unsigned short>",2685,G__gammacomboCoreDict_974_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPshortgR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<unsigned short>",2685,G__gammacomboCoreDict_974_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPshortgR), -1, 0, 1, 1, 1, 0, "u 'SharedArray<unsigned short>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPshortgR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__gammacomboCoreDict_974_0_5, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPshortgR), -1, 1, 1, 1, 1, 0, "u 'SharedArray<unsigned short>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_974_0_6, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_974_0_7, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPshortgRcLcLRWProxy), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_974_0_8, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPshortgRcLcLRWProxy), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("triggerCOW",989,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_974_0_10, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArray<unsigned short>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_974_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<unsigned short>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_974_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArray<unsigned short>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_974_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArray<unsigned short>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_974_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_974_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<unsigned short>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_974_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<unsigned short>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_974_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<unsigned short>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_974_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<unsigned short>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArray<unsigned short>", 2811, G__gammacomboCoreDict_974_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArraylEunsignedsPintgR(void) {
   /* SharedArray<unsigned int> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPintgR));
   G__memfunc_setup("SharedArray<unsigned int>",2456,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPintgR), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<unsigned int>",2456,G__gammacomboCoreDict_976_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPintgR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<unsigned int>",2456,G__gammacomboCoreDict_976_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPintgR), -1, 0, 1, 1, 1, 0, "u 'SharedArray<unsigned int>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPintgR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__gammacomboCoreDict_976_0_5, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPintgR), -1, 1, 1, 1, 1, 0, "u 'SharedArray<unsigned int>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_976_0_6, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_976_0_7, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPintgRcLcLRWProxy), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_976_0_8, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPintgRcLcLRWProxy), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("triggerCOW",989,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_976_0_10, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArray<unsigned int>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_976_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<unsigned int>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_976_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArray<unsigned int>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_976_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArray<unsigned int>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_976_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_976_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<unsigned int>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_976_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<unsigned int>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_976_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<unsigned int>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_976_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<unsigned int>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArray<unsigned int>", 2582, G__gammacomboCoreDict_976_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArraylEunsignedsPlonggR(void) {
   /* SharedArray<unsigned long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlonggR));
   G__memfunc_setup("SharedArray<unsigned long>",2557,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlonggR), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<unsigned long>",2557,G__gammacomboCoreDict_978_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlonggR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<unsigned long>",2557,G__gammacomboCoreDict_978_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlonggR), -1, 0, 1, 1, 1, 0, "u 'SharedArray<unsigned long>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlonggR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__gammacomboCoreDict_978_0_5, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlonggR), -1, 1, 1, 1, 1, 0, "u 'SharedArray<unsigned long>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_978_0_6, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_978_0_7, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlonggRcLcLRWProxy), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_978_0_8, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlonggRcLcLRWProxy), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("triggerCOW",989,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_978_0_10, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArray<unsigned long>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_978_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<unsigned long>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_978_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArray<unsigned long>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_978_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArray<unsigned long>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_978_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_978_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<unsigned long>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_978_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<unsigned long>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_978_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<unsigned long>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_978_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<unsigned long>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArray<unsigned long>", 2683, G__gammacomboCoreDict_978_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSharedArraylEunsignedsPlongsPlonggR(void) {
   /* SharedArray<unsigned long long> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlongsPlonggR));
   G__memfunc_setup("SharedArray<unsigned long long>",3021,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlongsPlonggR), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<unsigned long long>",3021,G__gammacomboCoreDict_980_0_2, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlongsPlonggR), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SharedArray<unsigned long long>",3021,G__gammacomboCoreDict_980_0_3, 105, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlongsPlonggR), -1, 0, 1, 1, 1, 0, "u 'SharedArray<unsigned long long>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clone",497,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlongsPlonggR), -1, 0, 1, 1, 1, 8, "C - - 10 '0' newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator=",937,G__gammacomboCoreDict_980_0_5, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlongsPlonggR), -1, 1, 1, 1, 1, 0, "u 'SharedArray<unsigned long long>' - 11 - other", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__gammacomboCoreDict_980_0_6, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_980_0_7, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlongsPlonggRcLcLRWProxy), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__gammacomboCoreDict_980_0_8, 117, G__get_linked_tagnum(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlongsPlonggRcLcLRWProxy), -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("triggerCOW",989,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__gammacomboCoreDict_980_0_10, 85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SharedArray<unsigned long long>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__gammacomboCoreDict_980_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<unsigned long long>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__gammacomboCoreDict_980_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SharedArray<unsigned long long>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__gammacomboCoreDict_980_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SharedArray<unsigned long long>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__gammacomboCoreDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__gammacomboCoreDict_980_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__gammacomboCoreDict_980_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<unsigned long long>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__gammacomboCoreDict_980_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<unsigned long long>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__gammacomboCoreDict_980_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SharedArray<unsigned long long>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__gammacomboCoreDict_980_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SharedArray<unsigned long long>::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SharedArray<unsigned long long>", 3147, G__gammacomboCoreDict_980_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncgammacomboCoreDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalgammacomboCoreDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {
}

static void G__cpp_setup_func36() {
}

static void G__cpp_setup_func37() {
}

static void G__cpp_setup_func38() {
}

static void G__cpp_setup_func39() {
}

static void G__cpp_setup_func40() {
}

static void G__cpp_setup_func41() {
}

static void G__cpp_setup_func42() {
}

static void G__cpp_setup_func43() {
}

static void G__cpp_setup_func44() {
}

static void G__cpp_setup_func45() {
}

static void G__cpp_setup_func46() {
}

static void G__cpp_setup_func47() {
}

static void G__cpp_setup_func48() {
}

static void G__cpp_setup_func49() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcgammacomboCoreDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
  G__cpp_setup_func36();
  G__cpp_setup_func37();
  G__cpp_setup_func38();
  G__cpp_setup_func39();
  G__cpp_setup_func40();
  G__cpp_setup_func41();
  G__cpp_setup_func42();
  G__cpp_setup_func43();
  G__cpp_setup_func44();
  G__cpp_setup_func45();
  G__cpp_setup_func46();
  G__cpp_setup_func47();
  G__cpp_setup_func48();
  G__cpp_setup_func49();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__gammacomboCoreDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_vectorlEcharcOallocatorlEchargRsPgR = { "vector<char,allocator<char> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_vectorlEshortcOallocatorlEshortgRsPgR = { "vector<short,allocator<short> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_vectorlElongcOallocatorlElonggRsPgR = { "vector<long,allocator<long> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR = { "vector<long long,allocator<long long> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR = { "vector<unsigned char,allocator<unsigned char> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR = { "vector<unsigned long,allocator<unsigned long> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR = { "vector<unsigned long long,allocator<unsigned long long> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_RooPrintable = { "RooPrintable" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_pairlEstringcOintgR = { "pair<string,int>" , 115 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_listlEdoublecOallocatorlEdoublegRsPgR = { "list<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_listlEstringcOallocatorlEstringgRsPgR = { "list<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_RooAbsArg = { "RooAbsArg" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_RooArgSet = { "RooArgSet" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_RooArgList = { "RooArgList" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR = { "set<string,less<string>,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_RooListProxy = { "RooListProxy" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_RooRealProxy = { "RooRealProxy" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR = { "set<pair<RooAbsArg*,RooAbsArg*>,less<pair<RooAbsArg*,RooAbsArg*> >,allocator<pair<RooAbsArg*,RooAbsArg*> > >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_RooAbsReal = { "RooAbsReal" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR = { "deque<RooAbsCache*,allocator<RooAbsCache*> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_maplERooAbsArgmUcOTRefArraymUcOlesslERooAbsArgmUgRcOallocatorlEpairlERooAbsArgmUsPconstcOTRefArraymUgRsPgRsPgR = { "map<RooAbsArg*,TRefArray*,less<RooAbsArg*>,allocator<pair<RooAbsArg* const,TRefArray*> > >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_dequelERooAbsArgmUcOallocatorlERooAbsArgmUgRsPgR = { "deque<RooAbsArg*,allocator<RooAbsArg*> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_stacklERooAbsArgmUcOdequelERooAbsArgmUcOallocatorlERooAbsArgmUgRsPgRsPgR = { "stack<RooAbsArg*,deque<RooAbsArg*,allocator<RooAbsArg*> > >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_RooRealVar = { "RooRealVar" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR = { "vector<RooCurve*,allocator<RooCurve*> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooCurve*,allocator<RooCurve*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_RooFitResult = { "RooFitResult" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_RooAbsPdf = { "RooAbsPdf" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR = { "map<string,TH1*,less<string>,allocator<pair<const string,TH1*> > >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR = { "map<string,RooDataHist*,less<string>,allocator<pair<const string,RooDataHist*> > >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR = { "map<string,RooDataSet*,less<string>,allocator<pair<const string,RooDataSet*> > >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR = { "map<string,RooAbsData*,less<string>,allocator<pair<const string,RooAbsData*> > >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR = { "list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR = { "pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > >" , 115 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR = { "map<const RooAbsArg*,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > >,less<const RooAbsArg*>,allocator<pair<const RooAbsArg* const,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > > > > >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_vectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgR = { "vector<pair<const RooArgSet*,const RooArgSet*>,allocator<pair<const RooArgSet*,const RooArgSet*> > >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<const RooArgSet*,const RooArgSet*>,allocator<pair<const RooArgSet*,const RooArgSet*> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_maplEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlongcOlesslEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRcOallocatorlEpairlEconstsPpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlonggRsPgRsPgR = { "map<pair<const RooArgSet*,const RooArgSet*>,unsigned long,less<pair<const RooArgSet*,const RooArgSet*> >,allocator<pair<const pair<const RooArgSet*,const RooArgSet*>,unsigned long> > >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR = { "map<int,string,less<int>,allocator<pair<const int,string> > >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR = { "vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >::iterator>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR = { "deque<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >,allocator<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > > >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR = { "stack<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >,deque<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >,allocator<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > > > >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR = { "map<string,basic_ostream<char,char_traits<char> >*,less<string>,allocator<pair<const string,basic_ostream<char,char_traits<char> >*> > >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR = { "vector<RooNormSetCache,allocator<RooNormSetCache> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooNormSetCache,allocator<RooNormSetCache> >::iterator>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR = { "vector<RooAbsCacheElement*,allocator<RooAbsCacheElement*> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooAbsCacheElement*,allocator<RooAbsCacheElement*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgR = { "RooBinned2DBicubicBase<RooAbsReal>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgRcLcLdA = { "RooBinned2DBicubicBase<RooAbsReal>::$" , 101 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylEdoublegR = { "SharedArray<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylEdoublegRcLcLRWProxy = { "SharedArray<double>::RWProxy" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArrayImplEdoublegR = { "SharedArrayImp<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgR = { "RooBinned2DBicubicBase<RooAbsPdf>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgRcLcLdA = { "RooBinned2DBicubicBase<RooAbsPdf>::$" , 101 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_RooCrossCorPdf = { "RooCrossCorPdf" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_RooHistPdfAngleVar = { "RooHistPdfAngleVar" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_RooHistPdfVar = { "RooHistPdfVar" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_RooPoly3Var = { "RooPoly3Var" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_RooPoly4Var = { "RooPoly4Var" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR = { "vector<pair<string,int>,allocator<pair<string,int> > >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<string,int>,allocator<pair<string,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_maplEstringcORooSharedPropertiesmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooSharedPropertiesmUgRsPgRsPgR = { "map<string,RooSharedProperties*,less<string>,allocator<pair<const string,RooSharedProperties*> > >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_RooSlimFitResult = { "RooSlimFitResult" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArrayImplEchargR = { "SharedArrayImp<char>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArrayImplEshortgR = { "SharedArrayImp<short>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArrayImplEintgR = { "SharedArrayImp<int>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArrayImplEfloatgR = { "SharedArrayImp<float>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArrayImplElonggR = { "SharedArrayImp<long>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArrayImplElongsPlonggR = { "SharedArrayImp<long long>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPchargR = { "SharedArrayImp<unsigned char>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPshortgR = { "SharedArrayImp<unsigned short>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPintgR = { "SharedArrayImp<unsigned int>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlonggR = { "SharedArrayImp<unsigned long>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlongsPlonggR = { "SharedArrayImp<unsigned long long>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylEchargR = { "SharedArray<char>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylEchargRcLcLRWProxy = { "SharedArray<char>::RWProxy" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylEshortgR = { "SharedArray<short>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylEshortgRcLcLRWProxy = { "SharedArray<short>::RWProxy" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylEintgR = { "SharedArray<int>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylEintgRcLcLRWProxy = { "SharedArray<int>::RWProxy" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylElonggR = { "SharedArray<long>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylElonggRcLcLRWProxy = { "SharedArray<long>::RWProxy" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylElongsPlonggR = { "SharedArray<long long>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylElongsPlonggRcLcLRWProxy = { "SharedArray<long long>::RWProxy" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylEfloatgR = { "SharedArray<float>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylEfloatgRcLcLRWProxy = { "SharedArray<float>::RWProxy" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylEunsignedsPchargR = { "SharedArray<unsigned char>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylEunsignedsPchargRcLcLRWProxy = { "SharedArray<unsigned char>::RWProxy" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylEunsignedsPshortgR = { "SharedArray<unsigned short>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylEunsignedsPshortgRcLcLRWProxy = { "SharedArray<unsigned short>::RWProxy" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylEunsignedsPintgR = { "SharedArray<unsigned int>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylEunsignedsPintgRcLcLRWProxy = { "SharedArray<unsigned int>::RWProxy" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylEunsignedsPlonggR = { "SharedArray<unsigned long>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylEunsignedsPlonggRcLcLRWProxy = { "SharedArray<unsigned long>::RWProxy" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylEunsignedsPlongsPlonggR = { "SharedArray<unsigned long long>" , 99 , -1 };
G__linked_taginfo G__gammacomboCoreDictLN_SharedArraylEunsignedsPlongsPlonggRcLcLRWProxy = { "SharedArray<unsigned long long>::RWProxy" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablegammacomboCoreDict() {
  G__gammacomboCoreDictLN_TClass.tagnum = -1 ;
  G__gammacomboCoreDictLN_TBuffer.tagnum = -1 ;
  G__gammacomboCoreDictLN_TMemberInspector.tagnum = -1 ;
  G__gammacomboCoreDictLN_TObject.tagnum = -1 ;
  G__gammacomboCoreDictLN_TNamed.tagnum = -1 ;
  G__gammacomboCoreDictLN_TString.tagnum = -1 ;
  G__gammacomboCoreDictLN_vectorlEcharcOallocatorlEchargRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_vectorlEshortcOallocatorlEshortgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_vectorlElongcOallocatorlElonggRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_RooPrintable.tagnum = -1 ;
  G__gammacomboCoreDictLN_pairlEstringcOintgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_listlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_listlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_RooAbsArg.tagnum = -1 ;
  G__gammacomboCoreDictLN_RooArgSet.tagnum = -1 ;
  G__gammacomboCoreDictLN_RooArgList.tagnum = -1 ;
  G__gammacomboCoreDictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_RooListProxy.tagnum = -1 ;
  G__gammacomboCoreDictLN_RooRealProxy.tagnum = -1 ;
  G__gammacomboCoreDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_RooAbsReal.tagnum = -1 ;
  G__gammacomboCoreDictLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_maplERooAbsArgmUcOTRefArraymUcOlesslERooAbsArgmUgRcOallocatorlEpairlERooAbsArgmUsPconstcOTRefArraymUgRsPgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_dequelERooAbsArgmUcOallocatorlERooAbsArgmUgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_stacklERooAbsArgmUcOdequelERooAbsArgmUcOallocatorlERooAbsArgmUgRsPgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_RooRealVar.tagnum = -1 ;
  G__gammacomboCoreDictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_RooFitResult.tagnum = -1 ;
  G__gammacomboCoreDictLN_RooAbsPdf.tagnum = -1 ;
  G__gammacomboCoreDictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_vectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_maplEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlongcOlesslEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRcOallocatorlEpairlEconstsPpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlonggRsPgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TH2.tagnum = -1 ;
  G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgRcLcLdA.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylEdoublegRcLcLRWProxy.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArrayImplEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgRcLcLdA.tagnum = -1 ;
  G__gammacomboCoreDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__gammacomboCoreDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_RooCrossCorPdf.tagnum = -1 ;
  G__gammacomboCoreDictLN_RooHistPdfAngleVar.tagnum = -1 ;
  G__gammacomboCoreDictLN_RooHistPdfVar.tagnum = -1 ;
  G__gammacomboCoreDictLN_RooPoly3Var.tagnum = -1 ;
  G__gammacomboCoreDictLN_RooPoly4Var.tagnum = -1 ;
  G__gammacomboCoreDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_maplEstringcORooSharedPropertiesmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooSharedPropertiesmUgRsPgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_RooSlimFitResult.tagnum = -1 ;
  G__gammacomboCoreDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArrayImplEchargR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArrayImplEshortgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArrayImplEintgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArrayImplEfloatgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArrayImplElonggR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArrayImplElongsPlonggR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPchargR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPshortgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPintgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlonggR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlongsPlonggR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylEchargR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylEchargRcLcLRWProxy.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylEshortgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylEshortgRcLcLRWProxy.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylEintgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylEintgRcLcLRWProxy.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylElonggR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylElonggRcLcLRWProxy.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylElongsPlonggR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylElongsPlonggRcLcLRWProxy.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylEfloatgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylEfloatgRcLcLRWProxy.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylEunsignedsPchargR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylEunsignedsPchargRcLcLRWProxy.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylEunsignedsPshortgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylEunsignedsPshortgRcLcLRWProxy.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylEunsignedsPintgR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylEunsignedsPintgRcLcLRWProxy.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylEunsignedsPlonggR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylEunsignedsPlonggRcLcLRWProxy.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylEunsignedsPlongsPlonggR.tagnum = -1 ;
  G__gammacomboCoreDictLN_SharedArraylEunsignedsPlongsPlonggRcLcLRWProxy.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablegammacomboCoreDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TString);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_vectorlEcharcOallocatorlEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_vectorlEshortcOallocatorlEshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_vectorlElongcOallocatorlElonggRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_vectorlElongsPlongcOallocatorlElongsPlonggRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_vectorlEunsignedsPlongsPlongcOallocatorlEunsignedsPlongsPlonggRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_RooPrintable);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_pairlEstringcOintgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_listlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_listlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_RooAbsArg);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_RooArgSet);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_RooArgList);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_RooListProxy);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_RooRealProxy);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_RooAbsReal);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_maplERooAbsArgmUcOTRefArraymUcOlesslERooAbsArgmUgRcOallocatorlEpairlERooAbsArgmUsPconstcOTRefArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_dequelERooAbsArgmUcOallocatorlERooAbsArgmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_stacklERooAbsArgmUcOdequelERooAbsArgmUcOallocatorlERooAbsArgmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_RooRealVar);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_RooFitResult);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_RooAbsPdf);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_vectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOallocatorlEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_maplEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlongcOlesslEpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRsPgRcOallocatorlEpairlEconstsPpairlEconstsPRooArgSetmUcOconstsPRooArgSetmUgRcOunsignedsPlonggRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TH2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgR),sizeof(RooBinned2DBicubicBase<RooAbsReal>),-1,327424,(char*)NULL,G__setup_memvarRooBinned2DBicubicBaselERooAbsRealgR,G__setup_memfuncRooBinned2DBicubicBaselERooAbsRealgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsRealgRcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylEdoublegR),sizeof(SharedArray<double>),-1,327424,(char*)NULL,G__setup_memvarSharedArraylEdoublegR,G__setup_memfuncSharedArraylEdoublegR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylEdoublegRcLcLRWProxy);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArrayImplEdoublegR),sizeof(SharedArrayImp<double>),-1,325376,(char*)NULL,G__setup_memvarSharedArrayImplEdoublegR,G__setup_memfuncSharedArrayImplEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgR),sizeof(RooBinned2DBicubicBase<RooAbsPdf>),-1,327424,(char*)NULL,G__setup_memvarRooBinned2DBicubicBaselERooAbsPdfgR,G__setup_memfuncRooBinned2DBicubicBaselERooAbsPdfgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_RooBinned2DBicubicBaselERooAbsPdfgRcLcLdA);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_TMatrixTlEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_RooCrossCorPdf),sizeof(RooCrossCorPdf),-1,325120,"RooCrossCorPdf function PDF",G__setup_memvarRooCrossCorPdf,G__setup_memfuncRooCrossCorPdf);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_RooHistPdfAngleVar),sizeof(RooHistPdfAngleVar),-1,325376,(char*)NULL,G__setup_memvarRooHistPdfAngleVar,G__setup_memfuncRooHistPdfAngleVar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_RooHistPdfVar),sizeof(RooHistPdfVar),-1,325376,(char*)NULL,G__setup_memvarRooHistPdfVar,G__setup_memfuncRooHistPdfVar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_RooPoly3Var),sizeof(RooPoly3Var),-1,325376,(char*)NULL,G__setup_memvarRooPoly3Var,G__setup_memfuncRooPoly3Var);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_RooPoly4Var),sizeof(RooPoly4Var),-1,325376,(char*)NULL,G__setup_memvarRooPoly4Var,G__setup_memfuncRooPoly4Var);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_maplEstringcORooSharedPropertiesmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooSharedPropertiesmUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_RooSlimFitResult),sizeof(RooSlimFitResult),-1,325376,"defines version number, ClassDef is a macro",G__setup_memvarRooSlimFitResult,G__setup_memfuncRooSlimFitResult);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArrayImplEchargR),sizeof(SharedArrayImp<char>),-1,325376,(char*)NULL,G__setup_memvarSharedArrayImplEchargR,G__setup_memfuncSharedArrayImplEchargR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArrayImplEshortgR),sizeof(SharedArrayImp<short>),-1,325376,(char*)NULL,G__setup_memvarSharedArrayImplEshortgR,G__setup_memfuncSharedArrayImplEshortgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArrayImplEintgR),sizeof(SharedArrayImp<int>),-1,325376,(char*)NULL,G__setup_memvarSharedArrayImplEintgR,G__setup_memfuncSharedArrayImplEintgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArrayImplEfloatgR),sizeof(SharedArrayImp<float>),-1,325376,(char*)NULL,G__setup_memvarSharedArrayImplEfloatgR,G__setup_memfuncSharedArrayImplEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArrayImplElonggR),sizeof(SharedArrayImp<long>),-1,325376,(char*)NULL,G__setup_memvarSharedArrayImplElonggR,G__setup_memfuncSharedArrayImplElonggR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArrayImplElongsPlonggR),sizeof(SharedArrayImp<long long>),-1,325376,(char*)NULL,G__setup_memvarSharedArrayImplElongsPlonggR,G__setup_memfuncSharedArrayImplElongsPlonggR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPchargR),sizeof(SharedArrayImp<unsigned char>),-1,325376,(char*)NULL,G__setup_memvarSharedArrayImplEunsignedsPchargR,G__setup_memfuncSharedArrayImplEunsignedsPchargR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPshortgR),sizeof(SharedArrayImp<unsigned short>),-1,325376,(char*)NULL,G__setup_memvarSharedArrayImplEunsignedsPshortgR,G__setup_memfuncSharedArrayImplEunsignedsPshortgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPintgR),sizeof(SharedArrayImp<unsigned int>),-1,325376,(char*)NULL,G__setup_memvarSharedArrayImplEunsignedsPintgR,G__setup_memfuncSharedArrayImplEunsignedsPintgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlonggR),sizeof(SharedArrayImp<unsigned long>),-1,325376,(char*)NULL,G__setup_memvarSharedArrayImplEunsignedsPlonggR,G__setup_memfuncSharedArrayImplEunsignedsPlonggR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArrayImplEunsignedsPlongsPlonggR),sizeof(SharedArrayImp<unsigned long long>),-1,325376,(char*)NULL,G__setup_memvarSharedArrayImplEunsignedsPlongsPlonggR,G__setup_memfuncSharedArrayImplEunsignedsPlongsPlonggR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylEchargR),sizeof(SharedArray<char>),-1,327424,(char*)NULL,G__setup_memvarSharedArraylEchargR,G__setup_memfuncSharedArraylEchargR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylEchargRcLcLRWProxy);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylEshortgR),sizeof(SharedArray<short>),-1,327424,(char*)NULL,G__setup_memvarSharedArraylEshortgR,G__setup_memfuncSharedArraylEshortgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylEshortgRcLcLRWProxy);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylEintgR),sizeof(SharedArray<int>),-1,327424,(char*)NULL,G__setup_memvarSharedArraylEintgR,G__setup_memfuncSharedArraylEintgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylEintgRcLcLRWProxy);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylElonggR),sizeof(SharedArray<long>),-1,327424,(char*)NULL,G__setup_memvarSharedArraylElonggR,G__setup_memfuncSharedArraylElonggR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylElonggRcLcLRWProxy);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylElongsPlonggR),sizeof(SharedArray<long long>),-1,327424,(char*)NULL,G__setup_memvarSharedArraylElongsPlonggR,G__setup_memfuncSharedArraylElongsPlonggR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylElongsPlonggRcLcLRWProxy);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylEfloatgR),sizeof(SharedArray<float>),-1,327424,(char*)NULL,G__setup_memvarSharedArraylEfloatgR,G__setup_memfuncSharedArraylEfloatgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylEfloatgRcLcLRWProxy);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPchargR),sizeof(SharedArray<unsigned char>),-1,327424,(char*)NULL,G__setup_memvarSharedArraylEunsignedsPchargR,G__setup_memfuncSharedArraylEunsignedsPchargR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPchargRcLcLRWProxy);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPshortgR),sizeof(SharedArray<unsigned short>),-1,327424,(char*)NULL,G__setup_memvarSharedArraylEunsignedsPshortgR,G__setup_memfuncSharedArraylEunsignedsPshortgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPshortgRcLcLRWProxy);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPintgR),sizeof(SharedArray<unsigned int>),-1,327424,(char*)NULL,G__setup_memvarSharedArraylEunsignedsPintgR,G__setup_memfuncSharedArraylEunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPintgRcLcLRWProxy);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlonggR),sizeof(SharedArray<unsigned long>),-1,327424,(char*)NULL,G__setup_memvarSharedArraylEunsignedsPlonggR,G__setup_memfuncSharedArraylEunsignedsPlonggR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlonggRcLcLRWProxy);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlongsPlonggR),sizeof(SharedArray<unsigned long long>),-1,327424,(char*)NULL,G__setup_memvarSharedArraylEunsignedsPlongsPlonggR,G__setup_memfuncSharedArraylEunsignedsPlongsPlonggR);
   G__get_linked_tagnum_fwd(&G__gammacomboCoreDictLN_SharedArraylEunsignedsPlongsPlonggRcLcLRWProxy);
}
extern "C" void G__cpp_setupgammacomboCoreDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupgammacomboCoreDict()");
  G__set_cpp_environmentgammacomboCoreDict();
  G__cpp_setup_tagtablegammacomboCoreDict();

  G__cpp_setup_inheritancegammacomboCoreDict();

  G__cpp_setup_typetablegammacomboCoreDict();

  G__cpp_setup_memvargammacomboCoreDict();

  G__cpp_setup_memfuncgammacomboCoreDict();
  G__cpp_setup_globalgammacomboCoreDict();
  G__cpp_setup_funcgammacomboCoreDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncgammacomboCoreDict();
  return;
}
class G__cpp_setup_initgammacomboCoreDict {
  public:
    G__cpp_setup_initgammacomboCoreDict() { G__add_setup_func("gammacomboCoreDict",(G__incsetup)(&G__cpp_setupgammacomboCoreDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initgammacomboCoreDict() { G__remove_setup_func("gammacomboCoreDict"); }
};
G__cpp_setup_initgammacomboCoreDict G__cpp_setup_initializergammacomboCoreDict;

