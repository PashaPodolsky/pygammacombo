/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "RooAdsCartCoordVar.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

RooAdsCartCoordVar::RooAdsCartCoordVar(const char *name, const char *title,
		 AdsConfig _c,
		 RooAbsReal& _xp,
		 RooAbsReal& _xm,
		 RooAbsReal& _yp,
		 RooAbsReal& _ym,
		 RooAbsReal& _rD,
		 RooAbsReal& _dD) :
	 RooAbsReal(name,title), 
	 c(_c),
	 xp("xp","xp",this,_xp),
	 xm("xm","xm",this,_xm),
	 yp("yp","yp",this,_yp),
	 ym("ym","ym",this,_ym),
	 rD("rD","rD",this,_rD),
	 dD("dD","dD",this,_dD)
{ 
} 


RooAdsCartCoordVar::RooAdsCartCoordVar(const RooAdsCartCoordVar& other, const char* name) :  
	RooAbsReal(other,name), 
	c(other.c),
	xp("xp",this,other.xp),
	xm("xm",this,other.xm),
	yp("yp",this,other.yp),
	ym("ym",this,other.ym),
	rD("rD",this,other.rD),
	dD("dD",this,other.dD)
{ 
} 

RooAdsCartCoordVar::~RooAdsCartCoordVar() { }


Double_t RooAdsCartCoordVar::evaluate() const 
{ 
  double _xp = double(xp);
  double _xm = double(xm);
  double _yp = double(yp);
  double _ym = double(ym);
  double _rD = double(rD);
  double _dD = double(dD);
  double _rb2 = (_xp*_xp + _xm*_xm + _yp*_yp + _ym*_ym)/2.;
  if ( c==rp )
  	return _rb2 + _rD*_rD + 2.*_rD*(_xp*cos(_dD) - _yp*sin(_dD));
  if ( c==rm )
  	return _rb2 + _rD*_rD + 2.*_rD*(_xm*cos(_dD) - _ym*sin(_dD));
  assert(0);
  return -99.;
} 

ClassImp(RooAdsCartCoordVar)
